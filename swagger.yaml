basePath: /
consumes:
- application/json
definitions:
  API:
    properties:
      can_have_policy:
        description: if false it is not possible to assign a policy
        type: boolean
        x-nullable: false
      data_classifications:
        description: Data classifications
        items:
          type: string
        type: array
        x-nullable: false
      id:
        description: scope id
        example: "1"
        format: apiID
        type: string
        x-nullable: false
      method:
        description: HTTP request method
        example: GET
        type: string
        x-nullable: false
      path:
        description: HTTP request path
        example: /pets
        type: string
        x-nullable: false
      policy_id:
        description: optional id of a policy
        example: block
        format: policyID
        type: string
        x-nullable: false
      position:
        description: position of the api in the apis list
        example: 1
        format: int64
        type: integer
        x-nullable: false
      server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      service_id:
        description: service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  APIGroup:
    properties:
      apis:
        description: List of APIs
        items:
          $ref: '#/definitions/GatewayAPI'
        type: array
        x-nullable: false
      id:
        description: API group ID
        format: apiGroupID
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/APIGroupMetadata'
      name:
        description: API group name
        type: string
        x-nullable: false
    type: object
  APIGroupMetadata:
    properties:
      apigee:
        $ref: '#/definitions/ApigeeMetadata'
      aws:
        $ref: '#/definitions/AWSMetadata'
      azure:
        $ref: '#/definitions/AzureMetadata'
      type:
        description: Gateway type
        format: gatewayType
        type: string
        x-nullable: false
    type: object
  APIs:
    properties:
      apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
    type: object
  AWSMetadata:
    properties:
      api_id:
        type: string
        x-nullable: false
      api_name:
        type: string
        x-nullable: false
      stage:
        type: string
        x-nullable: false
    type: object
  AcceptBackchannelAuthenticationRequest:
    properties:
      granted_scopes:
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  AcceptConsentRequest:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      granted_scopes:
        items:
          format: scopeName
          type: string
        type: array
        x-nullable: false
      login_state:
        type: string
        x-nullable: false
    type: object
  AcceptScopeGrant:
    properties:
      granted_scopes:
        description: granted scopes
        items:
          format: scopeName
          type: string
        type: array
        x-nullable: false
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        type: string
        x-nullable: false
    type: object
  AcceptSession:
    properties:
      acr:
        description: authentication context class reference
        format: acr
        type: string
        x-nullable: false
      amr:
        description: authentication methods references
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      auth_time:
        description: time when user authenticated
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        type: string
        x-nullable: false
      subject:
        description: user identifier
        example: user
        format: subject
        type: string
        x-nullable: false
    type: object
  AccountAccessConsent:
    properties:
      ConsentId:
        description: Unique identification as assigned to identify the account access consent resource.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        $ref: '#/definitions/CreationDateTime'
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire.
          If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Permissions:
        description: permissions
        items:
          type: string
        minItems: 1
        type: array
        x-nullable: false
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Rejected
        - Revoked
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        $ref: '#/definitions/StatusUpdateDateTime'
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period.
          If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period.
          If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Permissions
    - Status
    - StatusUpdateDateTime
    type: object
  AccountAccessConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBReadConsent1Data'
      Risk:
        $ref: '#/definitions/OBRisk2'
    required:
    - Data
    - Risk
    type: object
  AccountAccessConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBReadConsentResponse1Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk2'
    required:
    - Data
    - Risk
    type: object
  ActiveOrHistoricCurrencyCode:
    title: ActiveOrHistoricCurrencyCode A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".
    type: string
  ApigeeMetadata:
    properties:
      environment_name:
        description: Apigee environment name. It's a uniqe, immutable name of an environment for a given proxy name.
        example: my-default-proxy
        type: string
        x-nullable: false
      organization_name:
        description: Apigee organization name. It's a uniqe, immutable name of an Apigee organization.
        example: apigee-x-905913
        type: string
        x-nullable: false
      proxy_name:
        description: Apigee proxy name. It's a uniqe, immutable name of a proxy for a given organization id.
        example: my-default-proxy
        type: string
        x-nullable: false
    required:
    - organization_name
    - proxy_name
    - environment_name
    type: object
  Attribute:
    description: Authentication context attribute
    properties:
      description:
        description: String represented display name of an attribute
        type: string
        x-nullable: false
      name:
        description: String represented variable name of an attribute
        type: string
        x-nullable: false
      type:
        description: |-
          The data type of an attribute

          It stores information what kind of data is used as the value of the attribute.

          Available types: `number`, `string`, `bool`, `number_array`, `string_array`, `bool_array` or `any`.
        format: type
        type: string
        x-nullable: false
    type: object
  Attributes:
    items:
      $ref: '#/definitions/Attribute'
    type: array
  Authentication:
    description: |-
      ID is unique identifier across authentication methods.
      One of the following authentication method should be set: oidc, static, custom.
      Depending on chosen method, you need to provide oidc, static, custom settings accordingly.
    properties:
      amr:
        description: |-
          static authentication method references

          if set overwrites amr obtained from this authentication method
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      attributes:
        $ref: '#/definitions/Attributes'
      azure:
        $ref: '#/definitions/AzureAuthentication'
      azureb2c:
        $ref: '#/definitions/AzureB2CAuthentication'
      cognito:
        $ref: '#/definitions/CognitoAuthentication'
      custom:
        $ref: '#/definitions/CustomAuthentication'
      disabled:
        description: flag to disable authentication method
        example: false
        type: boolean
        x-nullable: false
      github:
        $ref: '#/definitions/GithubAuthentication'
      id:
        description: authentication method identifier
        example: oidc
        format: authenticationMethodID
        type: string
        x-nullable: false
      intelli_trust:
        $ref: '#/definitions/IntelliTrustAuthentication'
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        $ref: '#/definitions/AuthenticationMethod'
      name:
        description: human readable name which will be displayed to user in case of multiple authentication methods
        example: OIDC
        type: string
        x-nullable: false
      oidc:
        $ref: '#/definitions/OIDCAuthentication'
      okta:
        $ref: '#/definitions/OktaAuthentication'
      saml:
        $ref: '#/definitions/SAMLAuthentication'
      static:
        $ref: '#/definitions/StaticAuthentication'
    required:
    - id
    - name
    - method
    title: Authentication method definition
    type: object
  AuthenticationContext:
    additionalProperties:
      type: object
    type: object
  AuthenticationContextSettings:
    properties:
      attributes:
        items:
          $ref: '#/definitions/Attribute'
        type: array
        x-nullable: false
    type: object
  AuthenticationMethod:
    description: |-
      selected authentication method, must be one of: static, oidc, custom
      example: oidc
    type: string
  AutomaticKeyRotation:
    properties:
      cron:
        type: string
        x-nullable: false
      enabled:
        type: boolean
        x-nullable: false
      scheduled_at:
        format: date-time
        readOnly: true
        type: string
        x-nullable: false
      starting_from:
        format: date-time
        type: string
        x-nullable: false
    required:
    - enabled
    - cron
    type: object
  AzureAuthentication:
    description: Provide OAuth client details here.
    properties:
      client_id:
        description: OAuth client identifier
        example: client
        type: string
        x-nullable: false
      client_secret:
        description: OAuth client secret
        example: secret
        type: string
        x-nullable: false
      fetch_groups:
        description: a flag to fetch user groups
        example: true
        type: boolean
        x-nullable: false
      get_user:
        description: flag to fetch additional user data from graph endpoint
        type: boolean
        x-nullable: false
      group_name_format:
        description: 'user groups format: id or name'
        example: id
        type: string
        x-nullable: false
      only_security_groups:
        description: should only security groups be fetched
        example: true
        type: boolean
        x-nullable: false
      redirect_url:
        description: OAuth redirect URL
        example: https://example.com/callback
        type: string
        x-nullable: false
      scopes:
        description: OAuth scopes which client will be requesting
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      tenant:
        description: azure tenant id
        example: 123-312-123
        type: string
        x-nullable: false
    title: Azure authentication settings.
    type: object
  AzureB2CAuthentication:
    description: Provide OAuth client details here.
    properties:
      client_id:
        description: OAuth client identifier
        example: client
        type: string
        x-nullable: false
      client_secret:
        description: OAuth client secret
        example: secret
        type: string
        x-nullable: false
      fetch_groups:
        description: a flag to fetch user groups
        example: true
        type: boolean
        x-nullable: false
      get_user:
        description: flag to fetch additional user data from graph endpoint
        type: boolean
        x-nullable: false
      group_name_format:
        description: 'user groups format: id or name'
        example: id
        type: string
        x-nullable: false
      only_security_groups:
        description: should only security groups be fetched
        example: true
        type: boolean
        x-nullable: false
      policy:
        description: |-
          The user flow to be run.
          Specify the name of a user flow you've created in your Azure AD B2C tenant.
        example: b2c_1_sign_in
        type: string
        x-nullable: false
      redirect_url:
        description: OAuth redirect URL
        example: https://example.com/callback
        type: string
        x-nullable: false
      scopes:
        description: OAuth scopes which client will be requesting
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      tenant:
        description: azure tenant id
        example: 123-312-123
        type: string
        x-nullable: false
    title: Azure AD B2C authentication settings.
    type: object
  AzureB2CCredentials:
    description: Azure IDP B2C specific credentials
    properties:
      client_secret:
        description: Application secret from your Microsoft Azure application settings
        type: string
        x-nullable: false
    type: object
  AzureB2CIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/AzureB2CCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/AzureB2CSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  AzureB2CSettings:
    description: Azure AD B2C authentication settings
    properties:
      client_id:
        description: Application ID from your Microsoft Azure B2C application settings
        example: client
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          Groups are collections of users and other principals who share access to resources in
          Microsoft services or in your app. Microsoft Graph provides APIs that you can use to create
          and manage different types of groups and group functionality according to your scenario.

          You can only get groups data if you are entitled to call the Microsoft Graph API.
        example: true
        type: boolean
        x-nullable: false
      get_user:
        description: |-
          If enabled, users' data is collected from the Microsoft Graph API

          You can only get user's data if you are entitled to call the Microsoft Graph API.
        type: boolean
        x-nullable: false
      graph_user_attributes:
        description: An array of user attributes fetched from the Microsoft Graph API
        items:
          type: string
        type: array
        x-nullable: false
      group_name_format:
        description: |-
          String represented group name format used for fetching groups

          It's value can be either `id` or `name`.
        example: id
        type: string
        x-nullable: false
      only_security_groups:
        description: If enabled, only security groups a user belongs to are collected.
        example: true
        type: boolean
        x-nullable: false
      policy:
        description: |-
          The user flow to be run.
          Specify the name of a user flow you've created in your Azure AD B2C tenant.
        example: b2c_1_sign_in
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client is going to request
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      tenant:
        description: Directory ID from your Microsoft Azure B2C application settings
        example: 123-312-123
        type: string
        x-nullable: false
    type: object
  AzureCredentials:
    description: Azure IDP specific credentials
    properties:
      client_secret:
        description: Application secret from your Microsoft Azure application settings
        type: string
        x-nullable: false
    type: object
  AzureIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/AzureCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/AzureSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  AzureMetadata:
    properties:
      apim_id:
        type: string
        x-nullable: false
      apim_name:
        type: string
        x-nullable: false
    type: object
  AzureSettings:
    description: Azure IDP specific settings
    properties:
      client_id:
        description: Application ID from your Microsoft Azure application settings
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          Groups are collections of users and other principals who share access to resources in
          Microsoft services or in your app. Microsoft Graph provides APIs that you can use to create
          and manage different types of groups and group functionality according to your scenario.

          You can only get groups data if you are entitled to call the Microsoft Graph API.
        type: boolean
        x-nullable: false
      get_user:
        description: |-
          If enabled, users' data is collected from the Microsoft Graph API

          You can only get user's data if you are entitled to call the Microsoft Graph API.
        type: boolean
        x-nullable: false
      graph_user_attributes:
        description: An array of user attributes fetched from the Microsoft Graph API
        items:
          type: string
        type: array
        x-nullable: false
      group_name_format:
        description: |-
          String represented group name format used for fetching groups

          It's value can be either `id` or `name`.
        type: string
        x-nullable: false
      only_security_groups:
        description: If enabled, only security groups a user belongs to are collected.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        items:
          type: string
        type: array
        x-nullable: false
      tenant:
        description: Directory ID from your Microsoft Azure application settings
        type: string
        x-nullable: false
    type: object
  BackchannelAuthenticationResponse:
    properties:
      auth_req_id:
        description: Unique identifier to identify the authentication request made by the Client
        type: string
        x-nullable: false
      expires_in:
        description: A JSON number with a positive integer value indicating the expiration time of the "auth_req_id" in seconds since the authentication request was received
        format: int64
        type: integer
        x-nullable: false
      interval:
        description: |-
          OPTIONAL. A JSON number with a positive integer value indicating the minimum amount of time in seconds
          that the Client MUST wait between polling requests to the token endpoint.
          This parameter will only be present if the Client is registered to use the Poll or Ping modes.
          If no value is provided, clients MUST use 5 as the default value.
        format: int64
        type: integer
        x-nullable: false
    type: object
  BindGroupToServiceRequest:
    properties:
      service_id:
        format: serviceID
        type: string
        x-nullable: false
    type: object
  BindGroupToServiceResponse:
    properties:
      not_removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      removed_apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
    type: object
  BindSystemAPIRequest:
    properties:
      api_id:
        format: apiID
        type: string
        x-nullable: false
      policy_id:
        format: policyID
        type: string
        x-nullable: false
      policy_server_id:
        format: serverID
        type: string
        x-nullable: false
    type: object
  BuildingNumber:
    title: BuildingNumber Number that identifies the position of a building on a street.
    type: string
  Claim:
    properties:
      authorization_server_id:
        description: authorization server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      id:
        description: unique claim id
        example: "1"
        format: claimID
        type: string
        x-nullable: false
      mapping:
        description: |-
          DeprecatedMapping use SourceType and SourcePath instead
          claim mapping - path to attribute in authentication context from where claim value should be picked
        example: email
        type: string
        x-nullable: false
      name:
        description: claim name in outgoing id / access token
        example: email
        type: string
        x-nullable: false
      scopes:
        description: list of scopes - when at least one of listed scopes has been granted to a client, then claim will be added to id / access token. In case of empty array claim is always added.
        example:
        - email
        - email_verified
        items:
          type: string
        type: array
        x-nullable: false
      source_path:
        description: path to the attribute in source type context where claim value should be picked from
        type: string
        x-nullable: false
      source_type:
        $ref: '#/definitions/ClaimSourceType'
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ClaimType'
    type: object
  ClaimRequest:
    properties:
      essential:
        type: boolean
        x-nullable: false
      value:
        type: object
        x-nullable: false
      values:
        items:
          type: object
        type: array
        x-nullable: false
    type: object
  ClaimSourceType:
    type: string
  ClaimType:
    description: |-
      claim type, one of: id_token, access_token
      example: id_token
    type: string
  Claims:
    properties:
      claims:
        description: list of claims
        items:
          $ref: '#/definitions/Claim'
        type: array
        x-nullable: false
    type: object
  ClaimsRequests:
    properties:
      id_token:
        additionalProperties:
          $ref: '#/definitions/ClaimRequest'
        type: object
        x-nullable: false
      userinfo:
        additionalProperties:
          $ref: '#/definitions/ClaimRequest'
        type: object
        x-nullable: false
    type: object
  Client:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_server_id:
        description: ID of the authorization server (workspace) to which a client application is tied
        example: default
        format: serverID
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      developer_id:
        description: Optional developer owner of the client application
        format: subject
        type: string
        x-nullable: false
      developer_metadata:
        $ref: '#/definitions/Metadata'
      dynamically_registered:
        type: boolean
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      registration_token:
        $ref: '#/definitions/RegistrationToken'
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's application
        type: boolean
        x-nullable: false
      tenant_id:
        description: ID of a tenant where the client application is added
        example: default
        format: tenantID
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      trusted:
        description: |-
          Defines whether the client application is trusted or not.

          For trusted clients, consent pages are skipped during the authorization process.
        type: boolean
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - authorization_server_id
    - tenant_id
    title: Defines a client application and its properties.
    type: object
  ClientAdminResponse:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_server_id:
        description: ID of the authorization server (workspace) to which a client application is tied
        example: default
        format: serverID
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      developer_id:
        description: Optional developer owner of the client application
        format: subject
        type: string
        x-nullable: false
      developer_metadata:
        $ref: '#/definitions/Metadata'
      dynamically_registered:
        type: boolean
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's application
        type: boolean
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      trusted:
        description: |-
          Defines whether the client application is trusted or not.

          For trusted clients, consent pages are skipped during the authorization process.
        type: boolean
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - authorization_server_id
    type: object
  ClientDetails:
    properties:
      client_uri:
        description: url to a client website
        example: https://example.com
        type: string
        x-nullable: false
      id:
        description: client id
        example: default
        type: string
        x-nullable: false
      logo_uri:
        description: url to a page where client logo is served
        example: https://example.com/logo.png
        type: string
        x-nullable: false
      name:
        description: client name
        example: My app
        type: string
        x-nullable: false
    type: object
  ClientDeveloperResponse:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_server_id:
        description: ID of the authorization server (workspace) to which a client application is tied
        example: default
        format: serverID
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - authorization_server_id
    type: object
  ClientInfo:
    properties:
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
    type: object
  ClientJWK:
    properties:
      alg:
        description: |-
          The "alg" (algorithm) parameter identifies the algorithm intended for
          use with the key.  The values used should either be registered in the
          IANA "JSON Web Signature and Encryption Algorithms" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.
        example: RS256
        type: string
        x-nullable: false
      crv:
        example: P-256
        type: string
        x-nullable: false
      d:
        example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
        type: string
        x-nullable: false
      dp:
        example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
        type: string
        x-nullable: false
      dq:
        example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
        type: string
        x-nullable: false
      e:
        example: AQAB
        type: string
        x-nullable: false
      k:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      kid:
        description: |-
          The "kid" (key ID) parameter is used to match a specific key.  This
          is used, for instance, to choose among a set of keys within a JWK Set
          during key rollover.  The structure of the "kid" value is
          unspecified.  When "kid" values are used within a JWK Set, different
          keys within the JWK Set SHOULD use distinct "kid" values.  (One
          example in which different keys might use the same "kid" value is if
          they have different "kty" (key type) values but are considered to be
          equivalent alternatives by the application using them.)  The "kid"
          value is a case-sensitive string.
        example: 1603dfe0af8f4596
        type: string
        x-nullable: false
      kty:
        description: |-
          The "kty" (key type) parameter identifies the cryptographic algorithm
          family used with the key, such as "RSA" or "EC". "kty" values should
          either be registered in the IANA "JSON Web Key Types" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.  The "kty" value is a case-sensitive string.
        example: RSA
        type: string
        x-nullable: false
      "n":
        example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
        type: string
        x-nullable: false
      p:
        example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
        type: string
        x-nullable: false
      q:
        example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
        type: string
        x-nullable: false
      qi:
        example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
        type: string
        x-nullable: false
      use:
        description: |-
          Use ("public key use") identifies the intended use of
          the public key. The "use" parameter is employed to indicate whether
          a public key is used for encrypting data or verifying the signature
          on data. Values are commonly "sig" (signature) or "enc" (encryption).
        example: sig
        type: string
        x-nullable: false
      x:
        example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
        type: string
        x-nullable: false
      x5c:
        description: |-
          The "x5c" (X.509 certificate chain) parameter contains a chain of one
          or more PKIX certificates [RFC5280].  The certificate chain is
          represented as a JSON array of certificate value strings.  Each
          string in the array is a base64-encoded (Section 4 of [RFC4648] --
          not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
          The PKIX certificate containing the key value MUST be the first
          certificate.
        items:
          type: string
        type: array
        x-nullable: false
      x5t:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      x5t#S256:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      "y":
        example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
        type: string
        x-nullable: false
    required:
    - kty
    type: object
  ClientJWKs:
    properties:
      keys:
        example: []
        items:
          $ref: '#/definitions/ClientJWK'
        type: array
        x-nullable: false
    type: object
  ClientPrivacy:
    properties:
      scopes:
        additionalProperties:
          $ref: '#/definitions/ScopePrivacyInformation'
        description: optional privacy information mapping for scopes
        type: object
        x-nullable: false
    type: object
  ClientWithAccess:
    properties:
      client:
        $ref: '#/definitions/ClientDetails'
      granted_scopes:
        description: Scopes granted to client
        items:
          $ref: '#/definitions/GrantedScope'
        type: array
        x-nullable: false
    type: object
  Clients:
    description: OAuth clients
    properties:
      clients:
        items:
          $ref: '#/definitions/Client'
        type: array
        x-nullable: false
    type: object
  ClientsForAdmin:
    properties:
      clients:
        items:
          $ref: '#/definitions/ClientAdminResponse'
        type: array
        x-nullable: false
    type: object
  ClientsForDeveloper:
    description: OAuth clients owned by developer
    properties:
      clients:
        items:
          $ref: '#/definitions/ClientDeveloperResponse'
        type: array
        x-nullable: false
    type: object
  CognitoAuthentication:
    description: Provide OAuth client details here.
    properties:
      client_id:
        description: OAuth client identifier
        example: client
        type: string
        x-nullable: false
      client_secret:
        description: OAuth client secret
        example: secret
        type: string
        x-nullable: false
      get_user_info:
        description: flag to fetch additional user data from userinfo endpoint
        type: boolean
        x-nullable: false
      pool_id:
        description: Cognito pool ID
        example: us-east-1_Q8WSOH11B
        type: string
        x-nullable: false
      redirect_url:
        description: OAuth redirect URL
        example: https://example.com/callback
        type: string
        x-nullable: false
      region:
        description: AWS Region
        example: us-east-1
        type: string
        x-nullable: false
      scopes:
        description: OAuth scopes which client will be requesting
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    title: Cognito authentication settings.
    type: object
  CognitoCredentials:
    description: Cognito IDP specific settings
    properties:
      client_secret:
        description: Cognito app client secret from your application settings
        type: string
        x-nullable: false
    type: object
  CognitoIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/CognitoCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/CognitoSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  CognitoSettings:
    description: Cognito IDP specific settings
    properties:
      client_id:
        description: Cognito app client ID from your application settings
        example: client
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, additional user data is collected from the `userinfo` Cognito API
        type: boolean
        x-nullable: false
      pool_id:
        description: |-
          Cognito pool ID

          A user pool is a user directory in Amazon Cognito. It enables your users to sign in to your
          application through Amazon Cognito. You can find your pool ID in your User Pools > Federated
          Identities settings.
        type: string
        x-nullable: false
      region:
        description: AWS Region where the user pool is hosted
        example: us-east-1
        type: string
        x-nullable: false
      scopes:
        description: |-
          An array of allowed OAuth scopes which the client requests

          The following scopes can be allowed for a Cognito application:
          `phone`, `email`, `openid`, `aws.cognito.signin.user.admin`, `profile`.
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  Consent:
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        example: false
        type: boolean
        x-nullable: false
      description:
        description: consent description
        example: End User License Agreement
        type: string
        x-nullable: false
      id:
        description: consent unique identifier
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      internal_services:
        description: internal services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      name:
        description: consent name
        example: EULA
        type: string
        x-nullable: false
      pii_categories:
        description: PII Categories
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      third_party_services:
        description: third party services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll, keepCurrent'
        example: explicitAll
        type: string
        x-nullable: false
      valid_from:
        description: marks the time from which the consent is in use. Can't be set to a future time
        example: "2019-12-11T13:44:28.772101Z"
        format: date-time
        type: string
        x-nullable: false
      version:
        description: consent version. When a consent is updated, version is incremented.
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentAccepted:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  ConsentAction:
    properties:
      description:
        description: consent description
        example: Consents required by application X
        type: string
        x-nullable: false
      id:
        description: unique consent action id
        example: "1"
        format: consentActionID
        type: string
        x-nullable: false
      name:
        description: consent action name
        example: application_x
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ConsentActionToConsent:
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        example: false
        type: boolean
        x-nullable: false
      description:
        description: consent description
        example: End User License Agreement
        type: string
        x-nullable: false
      id:
        description: consent unique identifier
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      internal_services:
        description: internal services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      name:
        description: consent name
        example: EULA
        type: string
        x-nullable: false
      pii_categories:
        description: PII Categories
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      required:
        description: is consent required
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      third_party_services:
        description: third party services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll, keepCurrent'
        example: explicitAll
        type: string
        x-nullable: false
      valid_from:
        description: marks the time from which the consent is in use. Can't be set to a future time
        example: "2019-12-11T13:44:28.772101Z"
        format: date-time
        type: string
        x-nullable: false
      version:
        description: consent version. When a consent is updated, version is incremented.
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentActionWithConsents:
    properties:
      consents:
        items:
          $ref: '#/definitions/ConsentActionToConsent'
        type: array
        x-nullable: false
      description:
        description: consent description
        example: Consents required by application X
        type: string
        x-nullable: false
      id:
        description: unique consent action id
        example: "1"
        format: consentActionID
        type: string
        x-nullable: false
      name:
        description: consent action name
        example: application_x
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ConsentActions:
    properties:
      consent_actions:
        items:
          $ref: '#/definitions/ConsentAction'
        type: array
        x-nullable: false
    type: object
  ConsentGrant:
    properties:
      consent_grant_act_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        example: implicit
        type: string
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      version:
        description: version
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentGrantContext:
    properties:
      device:
        additionalProperties:
          type: object
        description: json object - device print of the End User's device
        type: object
        x-nullable: false
      ip:
        description: string in the form of a valid IP v 4 address, represents the current IP of the End User
        example: 52.14.142.76
        type: string
        x-nullable: false
      location:
        description: 2 element array of floats - current geolocation of the end-user, the format is [lat, long]
        example:
        - 25.2084
        - 55.2719
        items:
          format: double
          type: number
        type: array
        x-nullable: false
    type: object
  ConsentGrantPatch:
    properties:
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      grant_type:
        description: 'one of: implicit, explicit (explicit is the default value)'
        example: implicit
        type: string
        x-nullable: false
      granted:
        description: boolean flag marking if the user granted or revoked the consent
        example: false
        type: boolean
        x-nullable: false
    type: object
  ConsentGrantPatchRequest:
    properties:
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consents:
        description: an array of consent objects, consisting of consentId and granted - boolean flag marking if the user granted or revoked the consent
        items:
          $ref: '#/definitions/ConsentGrantPatch'
        type: array
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw request was caused when an app asked the user for consent required for a specific action
        example: "1"
        type: string
        x-nullable: false
    type: object
  ConsentGrantPatchResponse:
    properties:
      ConsentGrantActID:
        description: id of the consent grant action
        format: consentGrantActID
        type: string
        x-nullable: false
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consents:
        description: an array of consent objects, consisting of consentId and granted - boolean flag marking if the user granted or revoked the consent
        items:
          $ref: '#/definitions/ConsentGrantPatch'
        type: array
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw request was caused when an app asked the user for consent required for a specific action
        example: "1"
        type: string
        x-nullable: false
    type: object
  ConsentGrantRequest:
    properties:
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consent_id:
        description: consent id
        format: consentID
        type: string
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      grant_type:
        description: grant type
        type: string
        x-nullable: false
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw request was caused when an app asked the user for consent required for a specific action
        example: "1"
        type: string
        x-nullable: false
    type: object
  ConsentGrantedEvent:
    properties:
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consent:
        $ref: '#/definitions/Consent'
      consent_grant_act_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        example: implicit
        type: string
        x-nullable: false
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw request was caused when an app asked the user for consent required for a specific action
        example: "1"
        type: string
        x-nullable: false
      version:
        description: version
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentRejected:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  ConsentRevokedEvent:
    properties:
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consent:
        $ref: '#/definitions/Consent'
      consent_grant_act_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        example: implicit
        type: string
        x-nullable: false
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw request was caused when an app asked the user for consent required for a specific action
        example: "1"
        type: string
        x-nullable: false
      version:
        description: version
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentService:
    properties:
      name:
        description: name
        type: string
        x-nullable: false
      purposes:
        description: purpose
        items:
          $ref: '#/definitions/Purpose'
        type: array
        x-nullable: false
    type: object
  ConsentType:
    type: string
  ConsentWithGrant:
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        example: false
        type: boolean
        x-nullable: false
      consent_grant_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      description:
        description: consent description
        example: End User License Agreement
        type: string
        x-nullable: false
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: grant type
        example: implicit
        type: string
        x-nullable: false
      grant_version:
        description: grant version
        example: 1
        format: int64
        type: integer
        x-nullable: false
      granted:
        description: is consent granted
        example: false
        type: boolean
        x-nullable: false
      id:
        description: consent unique identifier
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      internal_services:
        description: internal services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      name:
        description: consent name
        example: EULA
        type: string
        x-nullable: false
      pii_categories:
        description: PII Categories
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      third_party_services:
        description: third party services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll, keepCurrent'
        example: explicitAll
        type: string
        x-nullable: false
      valid_from:
        description: marks the time from which the consent is in use. Can't be set to a future time
        example: "2019-12-11T13:44:28.772101Z"
        format: date-time
        type: string
        x-nullable: false
      version:
        description: consent version. When a consent is updated, version is incremented.
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  Consents:
    properties:
      consents:
        description: list of consents
        items:
          $ref: '#/definitions/Consent'
        type: array
        x-nullable: false
    type: object
  ConsentsRemovedResponse:
    properties:
      number_of_consents_removed:
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentsRequest:
    properties:
      accounts:
        description: |-
          Optional list of accounts
          Accounts
        items:
          type: string
        type: array
        x-nullable: false
      after_consent_id:
        description: |-
          optional list consents after given id
          AfterConsentID
        type: string
        x-nullable: false
      before_consent_id:
        description: |-
          optional list consents before given id
          BeforeConsentID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Optional client id
          ClientID
        type: string
        x-nullable: false
      limit:
        default: 20
        description: |-
          optional limit results
          Limit
        format: int64
        type: integer
        x-nullable: false
      order:
        description: |-
          optional sort consents by given fields
          Order
        type: string
        x-nullable: false
      sort:
        description: |-
          optional sort consents by given fields
          Sort
        type: string
        x-nullable: false
      status:
        description: |-
          Optional status
          Status
        items:
          type: string
        type: array
        x-nullable: false
      types:
        description: |-
          Optional type
          Types
          in:query
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  ConsentsWithGrants:
    properties:
      consents:
        description: list of consents
        items:
          $ref: '#/definitions/ConsentWithGrant'
        type: array
        x-nullable: false
    type: object
  CountryCode:
    title: CountryCode Nation with its own government.
    type: string
  CountrySubDivision:
    title: CountrySubDivision Identifies a subdivision of a country such as state, region, county.
    type: string
  CreateClientAdminRequest:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_server_id:
        description: ID of the authorization server (workspace) to which a client application is tied
        example: default
        format: serverID
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      developer_id:
        description: Optional developer owner of the client application
        format: subject
        type: string
        x-nullable: false
      developer_metadata:
        $ref: '#/definitions/Metadata'
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's application
        type: boolean
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      trusted:
        description: |-
          Defines whether the client application is trusted or not.

          For trusted clients, consent pages are skipped during the authorization process.
        type: boolean
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - authorization_server_id
    type: object
  CreateClientDeveloperRequest:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_server_id:
        description: ID of the authorization server (workspace) to which a client application is tied
        example: default
        format: serverID
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - authorization_server_id
    type: object
  CreateGatewayRequest:
    properties:
      create_and_bind_services_automatically:
        description: if true a services is created automatically for each new discovered api group
        type: boolean
        x-nullable: false
      description:
        description: description
        type: string
        x-nullable: false
      name:
        description: gateway name
        example: Cloudentity Pyron
        type: string
        x-nullable: false
      server_id:
        description: ServerID that this gateway should protect
        format: serverID
        type: string
        x-nullable: false
      type:
        description: 'gateway type, one of: pyron, aws, azure, istio, kong, apigee'
        example: pyron
        format: gatewayType
        type: string
        x-nullable: false
    type: object
  CreationDateTime:
    description: |-
      All date-time fields in responses must include the timezone. An example is below:
      2017-04-05T10:43:07+00:00
    format: date-time
    title: CreationDateTime Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
    type: string
  CrossTenantAPIPolicyBinding:
    properties:
      api_id:
        description: api id
        format: apiID
        type: string
        x-nullable: false
      api_tenant_id:
        description: api tenant id
        example: system
        format: tenantID
        type: string
        x-nullable: false
      policy_id:
        description: policy id
        format: policyID
        type: string
        x-nullable: false
      policy_server_id:
        description: policy server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      policy_tenant_id:
        description: policy tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  CustomAuthentication:
    description: Use in case of custom integration.
    properties:
      login_url:
        description: URL to custom login page
        example: https://example.com/login
        type: string
        x-nullable: false
    title: Custom authentication settings.
    type: object
  CustomCredentials:
    description: Custom IDP specific credentials
    type: object
  CustomIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/CustomCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/CustomSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  CustomServerConsent:
    properties:
      scope_grant_url:
        description: Deprecetad scope_grant_url. Use server_consent_url instead
        type: string
        x-nullable: false
      server_consent_url:
        type: string
        x-nullable: false
    type: object
  CustomSettings:
    description: Custom IDP specific settings
    properties:
      login_url:
        description: URL to your custom login page
        example: https://example.com/login
        type: string
        x-nullable: false
      type:
        description: |-
          Type metadata

          There are two type metadatas: `generic` and `cloudentity`. If you choose `cloudentity` and do
          not provide authentication context attributes, it defaults to using the attributes from
          Cloudentity Cloud Identity Plane (CIP).

          If not provided, the `generic` type is set.
        format: customIDPType
        type: string
        x-nullable: false
    type: object
  Dashboards:
    properties:
      enabled:
        description: are dashboards enabled
        type: boolean
        x-nullable: false
      sample_api_url:
        description: sample API dashboard
        type: string
        x-nullable: false
      sample_business_url:
        description: sample business dashboard url
        type: string
        x-nullable: false
      sample_threat_url:
        description: sample threat dashboard url
        type: string
        x-nullable: false
      tenant_api_url:
        description: current tenant API dashboard
        type: string
        x-nullable: false
      tenant_business_url:
        description: current tenant business dashboard url
        type: string
        x-nullable: false
      tenant_threat_url:
        description: current tenant threat dashboard url
        type: string
        x-nullable: false
    type: object
  Department:
    title: Department Identification of a division of a large organisation or building.
    type: string
  DeveloperEnvironment:
    properties:
      client_secrets_stored_as_one_way_hash:
        description: store client secrets as a one way hash
        type: boolean
        x-nullable: false
    type: object
  DomesticPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteDomesticConsentResponse5Data'
    - $ref: '#/definitions/OBRisk1'
  DomesticPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticConsent4Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticScheduledPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5Data'
    - $ref: '#/definitions/OBRisk1'
  DomesticScheduledPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticScheduledPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticStandingOrderConsent:
    allOf:
    - $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6Data'
    - $ref: '#/definitions/OBRisk1'
  DomesticStandingOrderConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticStandingOrderConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  Dump:
    properties:
      apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      claims:
        items:
          $ref: '#/definitions/Claim'
        type: array
        x-nullable: false
      clients:
        items:
          $ref: '#/definitions/Client'
        type: array
        x-nullable: false
      consent_actions:
        items:
          $ref: '#/definitions/ConsentActionWithConsents'
        type: array
        x-nullable: false
      consent_grants:
        items:
          $ref: '#/definitions/ConsentGrant'
        type: array
        x-nullable: false
      consents:
        items:
          $ref: '#/definitions/Consent'
        type: array
        x-nullable: false
      cross_tenant_api_policy_bindings:
        items:
          $ref: '#/definitions/CrossTenantAPIPolicyBinding'
        type: array
        x-nullable: false
      gateway_api_groups:
        items:
          $ref: '#/definitions/GatewayAPIGroup'
        type: array
        x-nullable: false
      gateways:
        items:
          $ref: '#/definitions/Gateway'
        type: array
        x-nullable: false
      idps:
        $ref: '#/definitions/IDPs'
      openbanking_consents:
        items:
          $ref: '#/definitions/OBConsentCommon'
        type: array
        x-nullable: false
      openbanking_file_payment_consent_file_resources:
        items:
          $ref: '#/definitions/FilePaymentConsentFileResource'
        type: array
        x-nullable: false
      policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      policy_execution_points:
        items:
          $ref: '#/definitions/PolicyExecutionPoint'
        type: array
        x-nullable: false
      privacy_ledger_events:
        items:
          $ref: '#/definitions/PrivacyLedgerEvent'
        type: array
        x-nullable: false
      recurring_jobs:
        items:
          $ref: '#/definitions/RecurringJob'
        type: array
        x-nullable: false
      scope_grants:
        items:
          $ref: '#/definitions/ScopeGrant'
        type: array
        x-nullable: false
      scopes_without_service:
        items:
          $ref: '#/definitions/Scope'
        type: array
        x-nullable: false
      server_consents:
        items:
          $ref: '#/definitions/ServerConsent'
        type: array
        x-nullable: false
      servers:
        items:
          $ref: '#/definitions/ServerDump'
        type: array
        x-nullable: false
      servers_bindings:
        items:
          $ref: '#/definitions/ServerToServer'
        type: array
        x-nullable: false
      services:
        items:
          $ref: '#/definitions/ServiceWithScopesAndAPIs'
        type: array
        x-nullable: false
      tenants:
        items:
          $ref: '#/definitions/Tenant'
        type: array
        x-nullable: false
    type: object
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
  DynamicClientRegistrationRequest:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    type: object
  DynamicClientRegistrationResponse:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      dynamically_registered:
        type: boolean
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      registration_access_token:
        type: string
        x-nullable: false
      registration_access_token_expires_in:
        format: int64
        type: integer
        x-nullable: false
      registration_client_uri:
        type: string
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    type: object
  DynamicClientRegistrationSettings:
    properties:
      default_scopes:
        description: |-
          An optional list of scopes to be granted to a client when no scopes are provided in the DCR registration request

          If not provided, the following default scopes are granted for the client application: openid, address, email, phone, profile.
        items:
          type: string
        type: array
        x-nullable: false
      enabled:
        type: boolean
        x-nullable: false
      initial_access_token:
        $ref: '#/definitions/InitialAccessTokenSettings'
      payload:
        $ref: '#/definitions/PayloadSettings'
    type: object
  Environment:
    properties:
      ciba:
        description: enable ciba
        type: boolean
        x-nullable: false
      client_secrets_stored_as_one_way_hash:
        description: store client secrets as a one way hash
        type: boolean
        x-nullable: false
      commit:
        type: string
        x-nullable: false
      demo_app:
        description: enables demo app endpoints
        type: boolean
        x-nullable: false
      dev_mode:
        description: realod templates, adds local redirects urls to frontend apps
        type: boolean
        x-nullable: false
      display_workspace_wizard:
        type: boolean
        x-nullable: false
      faas_provider:
        description: default not secure embedded script runtime or fission
        type: string
        x-nullable: false
      initialize_demo_workspace:
        description: when display_workspace_wizard is true and this option is enabled demo workspace with preconfigured IDPs will be create instead displaying welcome screens
        type: boolean
        x-nullable: false
      integration_endpoints:
        description: enables import, export, global accept, deny, introspect endpoints
        type: boolean
        x-nullable: false
      jwt_bearer_grant_type:
        description: enable jwt bearer grant type
        type: boolean
        x-nullable: false
      login_with_select_account:
        description: enable login with select_account param
        type: boolean
        x-nullable: false
      openbanking_brasil_consents:
        description: enable openbanking brasil consent endpoints
        type: boolean
        x-nullable: false
      openbanking_brasil_payments:
        description: enable openbanking brasil payment endpoints
        type: boolean
        x-nullable: false
      openbanking_domestic_payment_consents:
        description: enable openbanking domestic payment consent apis
        type: boolean
        x-nullable: false
      openbanking_domestic_scheduled_payment_consents:
        description: enable openbanking domestic scheduled payment consent apis
        type: boolean
        x-nullable: false
      openbanking_domestic_standing_order_consents:
        description: enable openbanking domestic standing order consent apis
        type: boolean
        x-nullable: false
      openbanking_file_payment_consents:
        description: enable openbanking file payment consent apis
        type: boolean
        x-nullable: false
      openbanking_international_payment_consents:
        description: enable openbanking international payment consent apis
        type: boolean
        x-nullable: false
      openbanking_international_scheduled_payment_consents:
        description: enable openbanking international scheduled payment consent apis
        type: boolean
        x-nullable: false
      openbanking_international_standing_order_consents:
        description: enable openbanking international standing order consent apis
        type: boolean
        x-nullable: false
      openbanking_jws_verification:
        description: enable verification middleware for POST payment consent endpoints
        type: boolean
        x-nullable: false
      pyron_on_prem:
        description: enable, when ACP is running on-prem, and Pyron is used as gateway
        type: boolean
        x-nullable: false
      quick_access:
        description: enable quick access functionality on UI
        type: boolean
        x-nullable: false
      script_transformer:
        description: enable javascript transformer
        type: boolean
        x-nullable: false
      swagger_ui:
        description: enables swagger ui
        type: boolean
        x-nullable: false
      system_clients_management:
        description: enable system client management apis
        type: boolean
        x-nullable: false
      system_openbanking_consents_management:
        description: enable system openbanking consent management apis
        type: boolean
        x-nullable: false
      trust_anchor_integration:
        description: enable trust anchor integration
        type: boolean
        x-nullable: false
      version:
        type: string
        x-nullable: false
    type: object
  Error:
    description: HTTP error response
    properties:
      details:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  ErrorResponse:
    properties:
      Code:
        description: High level textual error code, to help categorize the errors.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      Errors:
        description: errors
        items:
          $ref: '#/definitions/OBError1'
        minItems: 1
        type: array
        x-nullable: false
      Id:
        description: A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      Message:
        description: Brief Error message, e.g., 'There is something wrong with the request parameters provided'
        maxLength: 500
        minLength: 1
        type: string
        x-nullable: false
    required:
    - Code
    - Errors
    - Message
    title: An array of detail error codes, and messages, and URLs to documentation to help remediation.
    type: object
  FilePaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteFileConsentResponse4Data'
  FilePaymentConsentFileRequest:
    type: object
  FilePaymentConsentFileResource:
    properties:
      client_id:
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      file:
        items:
          format: uint8
          type: integer
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
    type: object
  FilePaymentConsentFileResponse:
    type: object
  FilePaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteFileConsent3Data'
    required:
    - Data
    type: object
  FilePaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteFileConsentResponse4Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    required:
    - Data
    type: object
  Gateway:
    properties:
      authorization_server_id:
        description: authorization server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: id of a client created for this gateway for authentication
        format: clientID
        type: string
        x-nullable: false
      create_and_bind_services_automatically:
        description: if true services are created automatically for each new discovered api group
        type: boolean
        x-nullable: false
      description:
        description: description
        type: string
        x-nullable: false
      id:
        description: unique gateway id
        example: "1"
        format: gatewayID
        type: string
        x-nullable: false
      last_active:
        description: last time a client fetched configuration
        format: date-time
        type: string
        x-nullable: false
      name:
        description: gateway name
        example: Cloudentity Pyron
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        description: 'gateway type, one of: pyron, aws'
        example: pyron
        format: gatewayType
        type: string
        x-nullable: false
    type: object
  GatewayAPI:
    properties:
      method:
        type: string
        x-nullable: false
      path:
        type: string
        x-nullable: false
    type: object
  GatewayAPIGroup:
    properties:
      apis:
        description: List of APIs
        items:
          $ref: '#/definitions/GatewayAPI'
        type: array
        x-nullable: false
      gateway_id:
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: API group ID
        format: apiGroupID
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/APIGroupMetadata'
      name:
        description: API group name
        type: string
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      service_id:
        format: serviceID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
    type: object
  GatewayAPIGroups:
    properties:
      groups:
        items:
          $ref: '#/definitions/GatewayAPIGroup'
        type: array
        x-nullable: false
    type: object
  GatewayConfiguration:
    properties:
      apis:
        description: List of APIs that this gateway should protect.
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      dynamic_scope_separator:
        description: Used to define how to split dynamic scopes
        type: string
        x-nullable: false
      issuer_apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      issuer_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      issuer_url:
        description: Authorization server issuer url.
        type: string
        x-nullable: false
      jwks_url:
        description: Authorization server JWKs url.
        type: string
        x-nullable: false
      policies:
        description: List of policies that can be used to protect APIs.
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      scopes:
        description: List of scopes available in the server.
        items:
          $ref: '#/definitions/ScopeWithService'
        type: array
        x-nullable: false
      server_id:
        description: ServerID that this gateway belongs to.
        format: serverID
        type: string
        x-nullable: false
      services:
        description: List of services that belongs to the server.
        items:
          $ref: '#/definitions/ServiceConnectedToGateway'
        type: array
        x-nullable: false
      tenant_id:
        description: TenantID that this gateway belongs to.
        format: tenantID
        type: string
        x-nullable: false
    type: object
  GatewayRequestEvent:
    properties:
      api_id:
        format: apiID
        type: string
        x-nullable: false
      result:
        $ref: '#/definitions/PolicyValidationResult'
      token:
        type: string
        x-nullable: false
      user_agent:
        type: string
        x-nullable: false
      x_forwarded_for:
        type: string
        x-nullable: false
      x_real_ip:
        type: string
        x-nullable: false
    type: object
  GatewayRequestEvents:
    properties:
      events:
        items:
          $ref: '#/definitions/GatewayRequestEvent'
        type: array
        x-nullable: false
    type: object
  GatewayRequestsEventsResponse:
    properties:
      number_of_pushed_events:
        format: int64
        type: integer
        x-nullable: false
    type: object
  GatewayWithClient:
    properties:
      authorization_server_id:
        description: authorization server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      client:
        $ref: '#/definitions/Client'
      client_id:
        description: id of a client created for this gateway for authentication
        format: clientID
        type: string
        x-nullable: false
      create_and_bind_services_automatically:
        description: if true services are created automatically for each new discovered api group
        type: boolean
        x-nullable: false
      description:
        description: description
        type: string
        x-nullable: false
      id:
        description: unique gateway id
        example: "1"
        format: gatewayID
        type: string
        x-nullable: false
      issuer_url:
        type: string
        x-nullable: false
      last_active:
        description: last time a client fetched configuration
        format: date-time
        type: string
        x-nullable: false
      name:
        description: gateway name
        example: Cloudentity Pyron
        type: string
        x-nullable: false
      server_url:
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        description: 'gateway type, one of: pyron, aws'
        example: pyron
        format: gatewayType
        type: string
        x-nullable: false
    type: object
  Gateways:
    properties:
      gateways:
        items:
          $ref: '#/definitions/Gateway'
        type: array
        x-nullable: false
    type: object
  GenericConsents:
    properties:
      Consents:
        items:
          $ref: '#/definitions/OpenbankingConsentWithClient'
        type: array
        x-nullable: false
    type: object
  GetAccountAccessConsentResponse:
    properties:
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetDomesticPaymentConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      domestic_payment_consent:
        $ref: '#/definitions/DomesticPaymentConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetDomesticScheduledPaymentConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      domestic_scheduled_payment_consent:
        $ref: '#/definitions/DomesticScheduledPaymentConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetDomesticStandingOrderConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      domestic_standing_order_consent:
        $ref: '#/definitions/DomesticStandingOrderConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetFilePaymentConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      file_payment_consent:
        $ref: '#/definitions/FilePaymentConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetInternationalPaymentConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      international_payment_consent:
        $ref: '#/definitions/InternationalPaymentConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetInternationalScheduledPaymentConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      international_scheduled_payment_consent:
        $ref: '#/definitions/InternationalScheduledPaymentConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetInternationalStandingOrderConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      international_standing_order_consent:
        $ref: '#/definitions/InternationalStandingOrderConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetOBBRCustomerDataAccessConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      customer_data_access_consent:
        $ref: '#/definitions/OBBRCustomerDataAccessConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetOBBRCustomerPaymentConsentResponse:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      customer_payment_consent:
        $ref: '#/definitions/OBBRCustomerPaymentConsent'
      requested_scopes:
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetServerDeveloperResponse:
    properties:
      color:
        description: Color
        example: '#007FFF'
        type: string
        x-nullable: false
      grant_types:
        description: supported grant types
        example:
        - implicit
        - authorization_code
        - refresh_token
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id:
        description: authorization server id
        example: default
        type: string
        x-nullable: false
      issuer_url:
        description: issuer URL
        example: https://example.com/default/default
        type: string
        x-nullable: false
      name:
        description: authorizations server name
        example: ACP
        type: string
        x-nullable: false
      subject_identifier_types:
        description: supported subject identifier types
        example:
        - public
        - pairwise
        items:
          enum:
          - public
          - pairwise
          type: string
        type: array
        x-nullable: false
    type: object
  GetServerWithScopesDeveloperResponse:
    properties:
      color:
        description: Color
        example: '#007FFF'
        type: string
        x-nullable: false
      grant_types:
        description: supported grant types
        example:
        - implicit
        - authorization_code
        - refresh_token
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id:
        description: authorization server id
        example: default
        type: string
        x-nullable: false
      issuer_url:
        description: issuer URL
        example: https://example.com/default/default
        type: string
        x-nullable: false
      name:
        description: authorizations server name
        example: ACP
        type: string
        x-nullable: false
      scopes:
        description: list of scopes
        items:
          $ref: '#/definitions/ScopeWithServiceDeveloperResponse'
        type: array
        x-nullable: false
      subject_identifier_types:
        description: supported subject identifier types
        example:
        - public
        - pairwise
        items:
          enum:
          - public
          - pairwise
          type: string
        type: array
        x-nullable: false
    type: object
  GithubAuthentication:
    description: Provide OAuth client details here.
    properties:
      client_id:
        description: OAuth client identifier
        example: client
        type: string
        x-nullable: false
      client_secret:
        description: OAuth client secret
        example: secret
        type: string
        x-nullable: false
      fetch_groups:
        description: flag to fetch groups
        type: boolean
        x-nullable: false
      redirect_url:
        description: OAuth redirect URL
        example: https://example.com/callback
        type: string
        x-nullable: false
      scopes:
        description: OAuth scopes which client will be requesting
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    title: Github authentication settings.
    type: object
  GithubCredentials:
    description: GitHub IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret from your GitHub Oauth application settings
        type: string
        x-nullable: false
    type: object
  GithubIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/GithubCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/GithubSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  GithubSettings:
    description: GitHub IDP specific settings
    properties:
      client_id:
        description: |-
          Client ID of your OAuth application registered in GitHub

          You can find your client ID in GitHub > Settings > Developer Settings > OAuth Apps > Your Application
        example: client
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          If enabled, the `groups` attribute from the authentication context gets populated with the
          user's groups and takes from of `organization_id.group name`
        type: boolean
        x-nullable: false
      scopes:
        description: |-
          An array of allowed OAuth scopes which the client requests

          The following scopes can be configured for GitHub application:
          `phone`, `email`, `openid`, `profile`.
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  GrantedScope:
    properties:
      granted_scope_name:
        type: string
        x-nullable: false
      is_dynamic:
        type: boolean
        x-nullable: false
      scope_name:
        type: string
        x-nullable: false
    type: object
  IDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/IDPCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/IDPSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  IDPBase:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  IDPConfiguration:
    properties:
      enable_stateful_ctx:
        description: |-
          If set to `true`, the stateful context is enabled for the IDP

          The stateful authorization feature allows to store the user’s authentication data, including
          the login status, locally in ACP. With this feature enabled, ACP can cache the user’s data
          and issue multiple tokens during one user’s session without re-authenticating the user.

          With the stateful authorization, the efficiency of issuing tokens in ACP is significantly
          improved by minimizing latency and performance degradation related to repetitious calls to
          IDPs.
        type: boolean
        x-nullable: false
      stateful_ctx_duration:
        description: |-
          The time that a user's authentication context is stored in the ACP's internal caching system
          before it's being deleted or refreshed.
        format: duration
        type: string
        x-nullable: false
    type: object
  IDPCredentials:
    properties:
      azure:
        $ref: '#/definitions/AzureCredentials'
      azureb2c:
        $ref: '#/definitions/AzureB2CCredentials'
      cognito:
        $ref: '#/definitions/CognitoCredentials'
      custom:
        $ref: '#/definitions/CustomCredentials'
      github:
        $ref: '#/definitions/GithubCredentials'
      intelli_trust:
        $ref: '#/definitions/IntelliTrustCredentials'
      oidc:
        $ref: '#/definitions/OIDCCredentials'
      okta:
        $ref: '#/definitions/OktaCredentials'
      saml:
        $ref: '#/definitions/SAMLCredentials'
      static:
        $ref: '#/definitions/StaticCredentials'
    type: object
  IDPDiscoverySettings:
    properties:
      domains:
        description: |-
          An array of email domains configured for an IDP for the purposes of IDP discovery

          If a domain is connected to an IDP and this domain is used during the login process, the IDP
          is automatically discovered and the user is either presented with a suggested IDP or is
          instantly redirected to their IDP configured for the user's email domain.
        items:
          $ref: '#/definitions/IDPDomain'
        type: array
        x-nullable: false
      instant_redirect:
        description: |-
          If the intelligent IDP discovery is enabled and the instant redirect flag is on, the user is
          instantly redirected to a proper Identity Provider as soon as a match is hit based on the
          domain when a user is typing their email in the username field
        type: boolean
        x-nullable: false
    type: object
  IDPDomain:
    type: string
  IDPSession:
    properties:
      ID:
        $ref: '#/definitions/IDPSessionID'
      IDPID:
        description: idp ID
        format: idpID
        type: string
        x-nullable: false
      acr:
        description: authentication context class reference
        format: acr
        type: string
        x-nullable: false
      amr:
        description: authentication methods references
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      auth_time:
        description: time when user authenticated
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      issue_time:
        description: time when the session was issued
        format: date-time
        type: string
        x-nullable: false
      max_age:
        $ref: '#/definitions/Duration'
      subject:
        description: user identifier
        example: user
        format: subject
        type: string
        x-nullable: false
    type: object
  IDPSessionID:
    type: string
  IDPSettings:
    properties:
      azure:
        $ref: '#/definitions/AzureSettings'
      azureb2c:
        $ref: '#/definitions/AzureB2CSettings'
      cognito:
        $ref: '#/definitions/CognitoSettings'
      custom:
        $ref: '#/definitions/CustomSettings'
      github:
        $ref: '#/definitions/GithubSettings'
      intelli_trust:
        $ref: '#/definitions/IntelliTrustSettings'
      oidc:
        $ref: '#/definitions/OIDCSettings'
      okta:
        $ref: '#/definitions/OktaSettings'
      saml:
        $ref: '#/definitions/SAMLSettings'
      static:
        $ref: '#/definitions/StaticSettings'
    type: object
  IDPs:
    items:
      $ref: '#/definitions/IDP'
    type: array
  IDPsResponse:
    properties:
      idps:
        items:
          $ref: '#/definitions/IDPBase'
        type: array
        x-nullable: false
    type: object
  ISODateTime:
    description: |-
      All date-time fields in responses must include the timezone. An example is below:
      2017-04-05T10:43:07+00:00
    format: date-time
    title: ISODateTime All dates in the JSON payloads are represented in ISO 8601 date-time format.
    type: string
  Identification_0:
    title: Identification0 Identification assigned by an institution to identify an account. This identification is known by the account owner.
    type: string
  Identification_1:
    title: Identification1 Unique and unambiguous identification of a financial institution or a branch of a financial institution.
    type: string
  ImportServiceConfigurationResult:
    properties:
      audience:
        description: service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      created_apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      created_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      created_scopes:
        items:
          $ref: '#/definitions/Scope'
        type: array
        x-nullable: false
      description:
        description: service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: gateway id
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: unique service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: service name
        example: Sample service
        type: string
        x-nullable: false
      not_removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      removed_apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      system:
        description: Is service a system service
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-nullable: false
    type: object
  InitialAccessTokenSettings:
    properties:
      required:
        type: boolean
        x-nullable: false
    type: object
  IntelliTrustAuthentication:
    description: Provide OAuth client details here.
    properties:
      client_id:
        description: OAuth client identifier
        example: client
        type: string
        x-nullable: false
      client_secret:
        description: OAuth client secret
        example: secret
        type: string
        x-nullable: false
      domain:
        description: domain
        example: cloudentity-dev.us.trustedauth.com
        type: string
        x-nullable: false
      fetch_groups:
        description: flag to fetch groups. IDP must release groups claim in userinfo endpoint
        type: boolean
        x-nullable: false
      get_user_info:
        description: flag to fetch additional user data from userinfo endpoint
        type: boolean
        x-nullable: false
      redirect_url:
        description: OAuth redirect URL
        example: https://example.com/callback
        type: string
        x-nullable: false
      scopes:
        description: OAuth scopes which client will be requesting
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    title: Intelli Trust authentication settings.
    type: object
  IntelliTrustCredentials:
    description: IntelliTrust™ IDP specific credentials
    properties:
      client_secret:
        description: |-
          OAuth client application secret from your Entrust Datacard® IntelliTrust™ Authentication
          Service general settings
        type: string
        x-nullable: false
    type: object
  IntelliTrustIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/IntelliTrustCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/IntelliTrustSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  IntelliTrustSettings:
    description: IntelliTrust™ IDP specific settings
    properties:
      client_id:
        description: |-
          OAuth client application identifier from your Entrust Datacard® IntelliTrust™ Authentication
          Service general settings
        example: client
        type: string
        x-nullable: false
      domain:
        description: String represented domain of the Entrust Datacard® IntelliTrust™ Authentication Service for your organization
        example: cloudentity-dev.us.trustedauth.com
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          If you want to fetch groups from the IntelliTrust™ IDP, you need to add the `groups` claim
          for your application on the IDP side.
        type: boolean
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo` IntelliTrust™ endpoint.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  InternationalPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteInternationalConsentResponse6Data'
    - $ref: '#/definitions/OBRisk1'
  InternationalPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalConsent5Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalScheduledPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6Data'
    - $ref: '#/definitions/OBRisk1'
  InternationalScheduledPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalScheduledPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalStandingOrderConsent:
    allOf:
    - $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7Data'
    - $ref: '#/definitions/OBRisk1'
  InternationalStandingOrderConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalStandingOrderConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  IntrospectOBBRDataAccessConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/OBBRCustomerDataAccessConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOBBRPaymentConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/OBBRCustomerPaymentConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingAccountAccessConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/AccountAccessConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingDomesticPaymentConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/DomesticPaymentConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingDomesticScheduledPaymentConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/DomesticScheduledPaymentConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingDomesticStandingOrderConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/DomesticStandingOrderConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingFilePaymentConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/FilePaymentConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingInternationalPaymentConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/InternationalPaymentConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingInternationalScheduledPaymentConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/InternationalScheduledPaymentConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectOpenbankingInternationalStandingOrderConsentResponse:
    allOf:
    - $ref: '#/definitions/IntrospectResponse'
    - $ref: '#/definitions/InternationalStandingOrderConsent'
    - properties:
        AccountIDs:
          items:
            type: string
          type: array
      type: object
  IntrospectResponse:
    properties:
      acr:
        description: Authentication Context Class Reference
        type: string
        x-nullable: false
      active:
        description: |-
          Active is a boolean indicator of whether or not the presented token
          is currently active.  The specifics of a token's "active" state
          will vary depending on the implementation of the authorization
          server and the information it keeps about its tokens, but a "true"
          value return for the "active" property will generally indicate
          that a given token has been issued by this authorization server,
          has not been revoked by the resource owner, and is within its
          given time window of validity (e.g., after its issuance time and
          before its expiration time).
        type: boolean
        x-nullable: false
      amr:
        description: Authentication Method References
        items:
          type: string
        type: array
        x-nullable: false
      aud:
        description: Audience contains a list of the token's intended audiences.
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        description: |-
          ClientID is a client identifier for the OAuth 2.0 client that
          requested this token.
        type: string
        x-nullable: false
      exp:
        description: |-
          Expires at is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token will expire.
        format: int64
        type: integer
        x-nullable: false
      ext:
        additionalProperties:
          type: object
        description: Extra is arbitrary data set by the session.
        type: object
        x-nullable: false
      iat:
        description: |-
          Issued at is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token was
          originally issued.
        format: int64
        type: integer
        x-nullable: false
      iss:
        description: IssuerURL is a string representing the issuer of this token
        type: string
        x-nullable: false
      nbf:
        description: |-
          NotBefore is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token is not to be
          used before.
        format: int64
        type: integer
        x-nullable: false
      scope:
        description: |-
          Scope is a JSON string containing a space-separated list of
          scopes associated with this token.
        type: string
        x-nullable: false
      server_id:
        description: |-
          ServerID is OAuth 2.0 authorization server identifier that
          issued this token.
        type: string
        x-nullable: false
      sub:
        description: |-
          Subject of the token, as defined in JWT [RFC7519].
          Usually a machine-readable identifier of the resource owner who
          authorized this token.
        type: string
        x-nullable: false
      tenant_id:
        description: |-
          TenantID identifies tenant where authorization server that
          issued this token belongs to.
        type: string
        x-nullable: false
      token_type:
        description: TokenType is the introspected token's type, for example `access_token` or `refresh_token`.
        type: string
        x-nullable: false
      username:
        description: |-
          Username is a human-readable identifier for the resource owner who
          authorized this token.
        type: string
        x-nullable: false
    type: object
  JWSPayloadSettings:
    properties:
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: URI of the JWKs of the trusted party responsible for signing request body
        type: string
        x-nullable: false
    type: object
  JobID:
    type: string
  KeysResponse:
    properties:
      current_key:
        $ref: '#/definitions/ServerJWK'
      next_key:
        $ref: '#/definitions/ServerJWK'
      revoked_keys:
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
      rotated_keys:
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
    type: object
  Links:
    description: Links Links relevant to the payload
    properties:
      First:
        description: |-
          first
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Last:
        description: |-
          last
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Next:
        description: |-
          next
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Prev:
        description: |-
          prev
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Self:
        description: self
        format: uri
        type: string
        x-nullable: false
    required:
    - Self
    type: object
  ListClientsWithAccess:
    properties:
      clients:
        items:
          $ref: '#/definitions/ClientWithAccess'
        type: array
        x-nullable: false
      scopes:
        items:
          $ref: '#/definitions/ScopeWithServicePublicResponse'
        type: array
        x-nullable: false
    type: object
  ListServersDeveloperResponse:
    properties:
      servers:
        description: list of authorization servers
        items:
          $ref: '#/definitions/GetServerDeveloperResponse'
        type: array
        x-nullable: false
    type: object
  ListTenantsResponse:
    properties:
      Tenants:
        items:
          $ref: '#/definitions/Tenant'
        type: array
        x-nullable: false
    type: object
  LoginAccepted:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  LoginRejected:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  LoginSessionRequest:
    properties:
      query_params:
        $ref: '#/definitions/Values'
      url:
        description: original authorize endpoint url
        type: string
        x-nullable: false
    type: object
  LoginSessionResponse:
    properties:
      acr:
        description: authentication context class reference
        format: acr
        type: string
        x-nullable: false
      allowed_scopes:
        additionalProperties:
          type: boolean
        description: scopes that passed policy validation
        type: object
        x-nullable: false
      amr:
        description: authentication methods references
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      auth_time:
        description: time when user authenticated
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: OAuth client identifier
        example: default
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      error:
        $ref: '#/definitions/RFC6749Error'
      granted_audience:
        description: list of granted audience
        items:
          type: string
        type: array
        x-nullable: false
      granted_scopes:
        description: list of granted scopes
        example:
        - email
        - profile
        - openid
        items:
          format: scopeName
          type: string
        type: array
        x-nullable: false
      id:
        description: unique id of login session
        format: loginID
        type: string
        x-nullable: false
      idp_id:
        description: idp identifier
        format: idpID
        type: string
        x-nullable: false
      login_approved:
        description: is login approved
        example: false
        type: boolean
        x-nullable: false
      login_rejected:
        description: is login rejected
        example: false
        type: boolean
        x-nullable: false
      max_age:
        description: max age for a session to live
        format: duration
        type: string
        x-nullable: false
      request_query_params:
        $ref: '#/definitions/Values'
      request_url:
        description: original url requested by oauth client
        type: string
        x-nullable: false
      requested_acr:
        description: requested acr
        items:
          type: string
        type: array
        x-nullable: false
      requested_at:
        description: time when oauth client made a request
        format: date-time
        type: string
        x-nullable: false
      requested_audience:
        description: list of requested audiences
        items:
          type: string
        type: array
        x-nullable: false
      requested_claims:
        $ref: '#/definitions/ClaimsRequests'
      requested_grant_type:
        description: requested grant type
        type: string
        x-nullable: false
      requested_scopes:
        description: list of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      scope_grant_approved:
        description: is scope grant approved
        example: true
        type: boolean
        x-nullable: false
      scope_grant_rejected:
        description: is scope grant rejected
        example: false
        type: boolean
        x-nullable: false
      server_id:
        description: authorization server identifier
        example: default
        format: serverID
        type: string
        x-nullable: false
      subject:
        description: user identifier
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant identifier
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  MTLSEndpointAliases:
    properties:
      introspection_endpoint:
        type: string
        x-nullable: false
      revocation_endpoint:
        type: string
        x-nullable: false
      token_endpoint:
        type: string
        x-nullable: false
    type: object
  Mapping:
    description: Source and target must be provided.
    properties:
      allow_weak_decoding:
        description: |-
          If enabled, the decoder makes the following "weak" conversions:

          Bools to string (true = "1", false = "0")

          numbers to string (base 10)

          bools to int/uint (true = 1, false = 0)

          strings to int/uint (base implied by prefix)

          int to bool (true if value != 0)

          string to bool (accepts only the following: 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False)

          empty array = empty map and vice versa

          negative numbers to overflowed uint values (base 10)

          slice of maps to a merged map

          single values are converted to slices if required. Each element is weakly decoded.
        example: false
        type: boolean
        x-nullable: false
      source:
        description: |-
          Source attribute.

          Source path to the attribute(s) which should be copied to the authentication context.
          Use '.' to copy everything.
        example: access_token
        type: string
        x-nullable: false
      target:
        description: |-
          Target attribute.

          Target path in the authentication context where source attribute(s) should be pasted.
          Use '.' to paste to the context top level object.
        example: .
        type: string
        x-nullable: false
      type:
        description: |-
          Type of the target attribute

          The `type` parameter accepts the following values:
          `number`, `string`, `bool`, `number_array`, `string_array`, `bool_array`, `any`.
        example: string
        format: type
        type: string
        x-nullable: false
    required:
    - source
    - target
    - type
    title: Attribute mapping.
    type: object
  Mappings:
    description: |-
      Mapping is used to unify attributes from external IDPs and propagate them to the authentication
      context to be used later on. By mapping your authentication context attributes, you unify attributes from
      all IDPs that your users authenticate with. It allows you to use a set of unified attributes
      throughout ACP for multiple purposes.
    items:
      $ref: '#/definitions/Mapping'
    title: An array of mappings
    type: array
  Meta:
    description: Meta Data relevant to the payload
    properties:
      FirstAvailableDateTime:
        $ref: '#/definitions/ISODateTime'
      LastAvailableDateTime:
        $ref: '#/definitions/ISODateTime'
      TotalPages:
        description: total pages
        format: int32
        type: integer
        x-nullable: false
    title: Meta MetaData
    type: object
  Metadata:
    additionalProperties:
      type: object
    type: object
  Name:
    title: Name Name by which an agent is known and which is usually used to identify that agent.
    type: string
  OBActiveCurrencyAndAmount_SimpleType:
    title: OBActiveCurrencyAndAmountSimpleType A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.
    type: string
  OBActiveOrHistoricCurrencyAndAmount:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBActiveOrHistoricCurrencyAndAmount Amount of money associated with the charge type.
    type: object
  OBAddressTypeCode:
    title: OBAddressTypeCode Identifies the nature of the postal address.
    type: string
  OBBRConsentWithClient:
    properties:
      Client:
        $ref: '#/definitions/OpenbankingClient'
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      customer_data_access_consent:
        $ref: '#/definitions/OBBRCustomerDataAccessConsent'
      customer_payment_consent:
        $ref: '#/definitions/OBBRCustomerPaymentConsent'
      idempotency_key:
        type: string
        x-nullable: false
      request_hash:
        type: string
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  OBBRConsents:
    properties:
      Consents:
        items:
          $ref: '#/definitions/OBBRConsentWithClient'
        type: array
        x-nullable: false
    type: object
  OBBRCustomerDataAccessConsent:
    properties:
      consentId:
        description: Identificador nico do consentimento.
        example: urn:bancoex:C1DD33123
        maxLength: 100
        minLength: 1
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-\:]{0,99}$
        type: string
        x-nullable: false
      creationDateTime:
        description: Data e hora em que o recurso foi criado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      expirationDateTime:
        description: Data e hora de expirao da permisso. Se no for preenchido, a permisso ter a data aberta. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      permissions:
        description: permissions
        example:
        - ACCOUNTS_READ
        - ACCOUNTS_OVERDRAFT_LIMITS_READ
        - RESOURCES_READ
        items:
          $ref: '#/definitions/OpenbankingBrasilPermission'
        maxItems: 30
        minItems: 1
        type: array
        x-nullable: false
      status:
        $ref: '#/definitions/OpenbankingBrasilStatus'
      statusUpdateDateTime:
        description: Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      transactionFromDateTime:
        description: Data e hora da transao inicial. Se no for preenchido, a transao ter a data aberta e a data ser retornada com a primeira transao disponvel. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-01-01T00:00:00Z"
        format: date-time
        type: string
        x-nullable: false
      transactionToDateTime:
        description: Data e hora final da transao. Se no for preenchido, a transao ter a data aberta e a data ser retornada com a ultima transao disponvel. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-02-01T23:59:59Z"
        format: date-time
        type: string
        x-nullable: false
    required:
    - consentId
    - creationDateTime
    - permissions
    - status
    - statusUpdateDateTime
    type: object
  OBBRCustomerDataAccessConsentRequest:
    properties:
      data:
        $ref: '#/definitions/OpenbankingBrasilData'
    required:
    - data
    type: object
  OBBRCustomerDataAccessConsentResponse:
    properties:
      data:
        $ref: '#/definitions/OpenbankingBrasilData1'
      links:
        $ref: '#/definitions/OpenbankingBrasilLinks'
      meta:
        $ref: '#/definitions/OpenbankingBrasilMeta'
    required:
    - data
    type: object
  OBBRCustomerPaymentConsent:
    properties:
      businessEntity:
        $ref: '#/definitions/OpenbankingBrasilBusinessEntity'
      consentId:
        description: |-
          Identificador nico do consentimento criado para a iniciao de pagamento solicitada. Dever ser um URN - Uniform Resource Name.
          Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141)  um Uniform Resource
          Identifier - URI - que  atribudo sob o URI scheme "urn" e um namespace URN especfico, com a inteno de que o URN
          seja um identificador de recurso persistente e independente da localizao.
          Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:
          o namespace(urn)
          o identificador associado ao namespace da instituio transnmissora (bancoex)
          o identificador especfico dentro do namespace (C1DD33123).
          Informaes mais detalhadas sobre a construo de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
        example: urn:bancoex:C1DD33123
        maxLength: 256
        pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
        type: string
        x-nullable: false
      creationDateTime:
        description: Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      creditor:
        $ref: '#/definitions/OpenbankingBrasilIdentification'
      debtorAccount:
        $ref: '#/definitions/OpenbankingBrasilDebtorAccount'
      expirationDateTime:
        description: |-
          Data e hora em que o consentimento da iniciao de pagamento expira, devendo ser sempre o creationDateTime mais 5 minutos. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC (UTC time format).
          O consentimento  criado com o status AWAITING_AUTHORISATION, e deve assumir o status AUTHORIZED, REJECTED ou CONSUMED antes do tempo de expirao - 5 minutos.
          Caso no assuma, o status permanece como AWAITING_AUTHORISATION e ser necessria a criao de um novo consentimento.
          Para o cenrio em que o status assumiu AUTHORISED, o tempo mximo (do token FAPI Hybrid Flow)  de 60 minutos, sem refresh,
          e este  o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. No  possvel prorrogar este tempo e a criao de um novo consentimento ser necessria para os cenrios de insucesso.
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      loggedUser:
        $ref: '#/definitions/OpenbankingBrasilLoggedUser'
      payment:
        $ref: '#/definitions/OpenbankingBrasilPaymentConsent'
      status:
        $ref: '#/definitions/OpenbankingBrasilStatus'
      statusUpdateDateTime:
        description: Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
    required:
    - consentId
    - creationDateTime
    - creditor
    - expirationDateTime
    - loggedUser
    - payment
    - status
    - statusUpdateDateTime
    type: object
  OBBRCustomerPaymentConsentRequest:
    properties:
      data:
        $ref: '#/definitions/OpenbankingBrasilCreatePaymentConsentData'
    required:
    - data
    type: object
  OBBRCustomerPaymentConsentResponse:
    properties:
      data:
        $ref: '#/definitions/OpenbankingBrasilResponsePaymentConsentData'
      links:
        $ref: '#/definitions/OpenbankingBrasilLinks'
      meta:
        $ref: '#/definitions/OpenbankingBrasilMeta'
    required:
    - data
    - links
    - meta
    type: object
  OBBRErrorResponse:
    properties:
      errors:
        description: errors
        items:
          $ref: '#/definitions/OpenbankingBrasilError'
        maxItems: 13
        minItems: 1
        type: array
        x-nullable: false
      meta:
        $ref: '#/definitions/OpenbankingBrasilMeta'
    required:
    - errors
    type: object
  OBChargeBearerType1Code:
    title: OBChargeBearerType1Code Specifies which party/parties will bear the charges associated with the processing of the payment transaction.
    type: string
  OBConsent:
    properties:
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      domestic_payment_consent:
        $ref: '#/definitions/DomesticPaymentConsent'
      domestic_scheduled_payment_consent:
        $ref: '#/definitions/DomesticScheduledPaymentConsent'
      domestic_standing_order_consent:
        $ref: '#/definitions/DomesticStandingOrderConsent'
      file_payment_consent:
        $ref: '#/definitions/FilePaymentConsent'
      idempotency_key:
        type: string
        x-nullable: false
      international_payment_consent:
        $ref: '#/definitions/InternationalPaymentConsent'
      international_scheduled_payment_consent:
        $ref: '#/definitions/InternationalScheduledPaymentConsent'
      international_standing_order_consent:
        $ref: '#/definitions/InternationalStandingOrderConsent'
      request_hash:
        type: string
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  OBConsentCommon:
    properties:
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      customer_data_access_consent:
        $ref: '#/definitions/OBBRCustomerDataAccessConsent'
      customer_payment_consent:
        $ref: '#/definitions/OBBRCustomerPaymentConsent'
      domestic_payment_consent:
        $ref: '#/definitions/DomesticPaymentConsent'
      domestic_scheduled_payment_consent:
        $ref: '#/definitions/DomesticScheduledPaymentConsent'
      domestic_standing_order_consent:
        $ref: '#/definitions/DomesticStandingOrderConsent'
      file_payment_consent:
        $ref: '#/definitions/FilePaymentConsent'
      idempotency_key:
        type: string
        x-nullable: false
      international_payment_consent:
        $ref: '#/definitions/InternationalPaymentConsent'
      international_scheduled_payment_consent:
        $ref: '#/definitions/InternationalScheduledPaymentConsent'
      international_standing_order_consent:
        $ref: '#/definitions/InternationalStandingOrderConsent'
      request_hash:
        type: string
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  OBDebtorIdentification1:
    properties:
      Name:
        description: The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels. Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        type: string
        x-nullable: false
    title: OBDebtorIdentification1 Set of elements used to identify a person or an organisation.
    type: object
  OBError1:
    description: 'Min Properties: 1'
    properties:
      ErrorCode:
        description: Low level textual error code, e.g., UK.OBIE.Field.Missing
        type: string
        x-nullable: false
      Message:
        description: |-
          A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'
          OBIE doesn't standardise this field
        maxLength: 500
        minLength: 1
        type: string
        x-nullable: false
      Path:
        description: Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency
        maxLength: 500
        minLength: 1
        type: string
        x-nullable: false
      Url:
        description: URL to help remediate the problem, or provide more information, or to API Reference, or help etc
        type: string
        x-nullable: false
    required:
    - ErrorCode
    - Message
    title: OBError1 o b error1
    type: object
  OBExternalAccountIdentification4Code:
    title: OBExternalAccountIdentification4Code Name of the identification scheme, in a coded form as published in an external list.
    type: string
  OBExternalFinancialInstitutionIdentification4Code:
    title: OBExternalFinancialInstitutionIdentification4Code Name of the identification scheme, in a coded form as published in an external list.
    type: string
  OBExternalLocalInstrument1Code:
    description: 'Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.'
    title: OBExternalLocalInstrument1Code User community specific instrument.
    type: string
  OBExternalPaymentChargeType1Code:
    title: OBExternalPaymentChargeType1Code Charge type, in a coded form.
    type: string
  OBPostalAddress6:
    properties:
      AddressLine:
        description: address line
        items:
          type: string
        maxItems: 7
        type: array
        x-nullable: false
      AddressType:
        $ref: '#/definitions/OBAddressTypeCode'
      BuildingNumber:
        $ref: '#/definitions/BuildingNumber'
      Country:
        $ref: '#/definitions/CountryCode'
      CountrySubDivision:
        $ref: '#/definitions/CountrySubDivision'
      Department:
        $ref: '#/definitions/Department'
      PostCode:
        $ref: '#/definitions/PostCode'
      StreetName:
        $ref: '#/definitions/StreetName'
      SubDepartment:
        $ref: '#/definitions/SubDepartment'
      TownName:
        $ref: '#/definitions/TownName'
    title: OBPostalAddress6 Information that locates and identifies a specific address, as defined by postal services.
    type: object
  OBReadConsent1Data:
    description: OBReadConsent1Data o b read consent1 data
    properties:
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire.
          If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Permissions:
        description: permissions
        items:
          type: string
        minItems: 1
        type: array
        x-nullable: false
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period.
          If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period.
          If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - Permissions
    type: object
  OBReadConsentResponse1Data:
    description: OBReadConsentResponse1Data o b read consent response1 data
    properties:
      ConsentId:
        description: Unique identification as assigned to identify the account access consent resource.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        $ref: '#/definitions/CreationDateTime'
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire.
          If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Permissions:
        description: permissions
        items:
          type: string
        minItems: 1
        type: array
        x-nullable: false
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Rejected
        - Revoked
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        $ref: '#/definitions/StatusUpdateDateTime'
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period.
          If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period.
          If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Permissions
    - Status
    - StatusUpdateDateTime
    type: object
  OBRisk1:
    properties:
      DeliveryAddress:
        $ref: '#/definitions/OBRisk1DeliveryAddress'
      MerchantCategoryCode:
        description: Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.
        maxLength: 4
        minLength: 3
        type: string
        x-nullable: false
      MerchantCustomerIdentification:
        description: The unique customer identifier of the PSU with the merchant.
        maxLength: 70
        minLength: 1
        type: string
        x-nullable: false
      PaymentContextCode:
        description: Specifies the payment context
        enum:
        - BillPayment
        - EcommerceGoods
        - EcommerceServices
        - Other
        - PartyToParty
        type: string
        x-nullable: false
    title: OBRisk1 The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments.
    type: object
  OBRisk1DeliveryAddress:
    properties:
      AddressLine:
        description: address line
        items:
          type: string
        maxItems: 2
        type: array
        x-nullable: false
      BuildingNumber:
        $ref: '#/definitions/BuildingNumber'
      Country:
        description: Nation with its own government, occupying a particular territory.
        pattern: ^[A-Z]{2,2}$
        type: string
        x-nullable: false
      CountrySubDivision:
        $ref: '#/definitions/CountrySubDivision'
      PostCode:
        $ref: '#/definitions/PostCode'
      StreetName:
        $ref: '#/definitions/StreetName'
      TownName:
        $ref: '#/definitions/TownName'
    required:
    - Country
    - TownName
    title: OBRisk1DeliveryAddress Information that locates and identifies a specific address, as defined by postal services or in free format text.
    type: object
  OBRisk2:
    title: OBRisk2 The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info.
    type: object
  OBSupplementaryData1:
    title: OBSupplementaryData1 Additional information that can not be captured in the structured fields and/or any other specific block.
    type: object
  OBWriteDomesticConsent4Data:
    description: OBWriteDomesticConsent4Data o b write domestic consent4 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticConsent4DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticConsent4DataSCASupportData'
    required:
    - Initiation
    type: object
  OBWriteDomesticConsent4DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticConsent4DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteDomesticConsent4DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteDomesticConsent4DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.
    type: object
  OBWriteDomesticConsent4DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticConsent4DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteDomesticConsent4DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticConsent4DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteDomesticConsent4DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticConsent4DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticConsent4DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticConsent4DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteDomesticConsent4DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticConsent4DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticConsentResponse5Data:
    description: OBWriteDomesticConsentResponse5Data o b write domestic consent response5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteDomesticConsentResponse5DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteDomesticConsentResponse5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticConsentResponse5DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteDomesticConsentResponse5DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteDomesticConsentResponse5DataChargesItems0 Set of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteDomesticConsentResponse5DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteDomesticConsentResponse5DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticConsentResponse5DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticConsentResponse5DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticConsentResponse5DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticConsentResponse5DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteDomesticConsentResponse5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticConsentResponse5DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticScheduledConsent4Data:
    description: OBWriteDomesticScheduledConsent4Data o b write domestic scheduled consent4 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteDomesticScheduledConsent4DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticScheduledConsent4DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteDomesticScheduledConsent4DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticScheduledConsent4DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticScheduledConsent4DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticScheduledConsent4DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsent4DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteDomesticScheduledConsent4DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsent4DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticScheduledConsentResponse5Data:
    description: OBWriteDomesticScheduledConsentResponse5Data o b write domestic scheduled consent response5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteDomesticScheduledConsentResponse5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticScheduledConsentResponse5DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteDomesticScheduledConsentResponse5DataChargesItems0 Set of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteDomesticScheduledConsentResponse5DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsentResponse5DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticStandingOrderConsent5Data:
    description: OBWriteDomesticStandingOrderConsent5Data o b write domestic standing order consent5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteDomesticStandingOrderConsent5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticStandingOrderConsent5DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationCreditorAccount'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationDebtorAccount'
      FinalPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationFinalPaymentAmount'
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationFirstPaymentAmount'
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      RecurringPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationRecurringPaymentAmount'
      RecurringPaymentDateTime:
        description: |-
          The date on which the first recurring payment for a Standing Order schedule will be made.
          Usage: This must be populated only if the first recurring date is different to the first payment date.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - FirstPaymentAmount
    - FirstPaymentDateTime
    - Frequency
    title: OBWriteDomesticStandingOrderConsent5DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticStandingOrderConsent5DataInitiationCreditorAccount Identification assigned by an institution to identify an account. This identification is known by the account owner.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticStandingOrderConsent5DataInitiationDebtorAccount Provides the details to identify the debtor account.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationFinalPaymentAmount:
    description: OBWriteDomesticStandingOrderConsent5DataInitiationFinalPaymentAmount The amount of the final Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationFirstPaymentAmount:
    description: OBWriteDomesticStandingOrderConsent5DataInitiationFirstPaymentAmount The amount of the first Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationRecurringPaymentAmount:
    description: OBWriteDomesticStandingOrderConsent5DataInitiationRecurringPaymentAmount The amount of the recurring Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsent5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticStandingOrderConsent5DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6Data:
    description: OBWriteDomesticStandingOrderConsentResponse6Data o b write domestic standing order consent response6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticStandingOrderConsentResponse6DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteDomesticStandingOrderConsentResponse6DataChargesItems0 Set of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationCreditorAccount'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationDebtorAccount'
      FinalPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationFinalPaymentAmount'
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationFirstPaymentAmount'
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      RecurringPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationRecurringPaymentAmount'
      RecurringPaymentDateTime:
        description: |-
          The date on which the first recurring payment for a Standing Order schedule will be made.
          Usage: This must be populated only if the first recurring date is different to the first payment date.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - FirstPaymentAmount
    - FirstPaymentDateTime
    - Frequency
    title: OBWriteDomesticStandingOrderConsentResponse6DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticStandingOrderConsentResponse6DataInitiationCreditorAccount Identification assigned by an institution to identify an account. This identification is known by the account owner.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticStandingOrderConsentResponse6DataInitiationDebtorAccount Provides the details to identify the debtor account.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationFinalPaymentAmount:
    description: OBWriteDomesticStandingOrderConsentResponse6DataInitiationFinalPaymentAmount The amount of the final Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationFirstPaymentAmount:
    description: OBWriteDomesticStandingOrderConsentResponse6DataInitiationFirstPaymentAmount The amount of the first Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationRecurringPaymentAmount:
    description: OBWriteDomesticStandingOrderConsentResponse6DataInitiationRecurringPaymentAmount The amount of the recurring Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticStandingOrderConsentResponse6DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteFileConsent3Data:
    description: OBWriteFileConsent3Data o b write file consent3 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteFileConsent3DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteFileConsent3DataInitiation'
      SCASupportData:
        $ref: '#/definitions/OBWriteFileConsent3DataSCASupportData'
    required:
    - Initiation
    type: object
  OBWriteFileConsent3DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteFileConsent3DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteFileConsent3DataInitiation:
    properties:
      ControlSum:
        description: Total of all individual amounts included in the group, irrespective of currencies.
        format: double
        type: number
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteFileConsent3DataInitiationDebtorAccount'
      FileHash:
        description: A base64 encoding of a SHA256 hash of the file to be uploaded.
        maxLength: 44
        minLength: 1
        type: string
        x-nullable: false
      FileReference:
        description: Reference for the file.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      FileType:
        description: Specifies the payment file type.
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      NumberOfTransactions:
        description: Number of individual transactions contained in the payment information group.
        pattern: '[0-9]{1,15}'
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteFileConsent3DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - FileHash
    - FileType
    title: OBWriteFileConsent3DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.
    type: object
  OBWriteFileConsent3DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteFileConsent3DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteFileConsent3DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteFileConsent3DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteFileConsent3DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteFileConsent3DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteFileConsentResponse4Data:
    description: OBWriteFileConsentResponse4Data o b write file consent response4 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteFileConsentResponse4DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      Initiation:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataInitiation'
      SCASupportData:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - AwaitingUpload
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteFileConsentResponse4DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteFileConsentResponse4DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteFileConsentResponse4DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteFileConsentResponse4DataChargesItems0 Set of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteFileConsentResponse4DataInitiation:
    properties:
      ControlSum:
        description: Total of all individual amounts included in the group, irrespective of currencies.
        format: double
        type: number
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataInitiationDebtorAccount'
      FileHash:
        description: A base64 encoding of a SHA256 hash of the file to be uploaded.
        maxLength: 44
        minLength: 1
        type: string
        x-nullable: false
      FileReference:
        description: Reference for the file.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      FileType:
        description: Specifies the payment file type.
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      NumberOfTransactions:
        description: Number of individual transactions contained in the payment information group.
        pattern: '[0-9]{1,15}'
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - FileHash
    - FileType
    title: OBWriteFileConsentResponse4DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file.
    type: object
  OBWriteFileConsentResponse4DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteFileConsentResponse4DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteFileConsentResponse4DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteFileConsentResponse4DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteFileConsentResponse4DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteFileConsentResponse4DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalConsent5Data:
    description: OBWriteInternationalConsent5Data o b write international consent5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalConsent5DataSCASupportData'
    required:
    - Initiation
    type: object
  OBWriteInternationalConsent5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalConsent5DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteInternationalConsent5DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteInternationalConsent5DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.
    type: object
  OBWriteInternationalConsent5DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify that party.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalConsent5DataInitiationCreditor Party to which an amount of money is due.
    type: object
  OBWriteInternationalConsent5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalConsent5DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteInternationalConsent5DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalConsent5DataInitiationCreditorAgent Financial institution servicing an account for the creditor.
    type: object
  OBWriteInternationalConsent5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalConsent5DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteInternationalConsent5DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalConsent5DataInitiationExchangeRateInformation Provides details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalConsent5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalConsent5DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalConsent5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalConsent5DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteInternationalConsent5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalConsent5DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalConsentResponse6Data:
    description: OBWriteInternationalConsentResponse6Data o b write international consent response6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteInternationalConsentResponse6DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataExchangeRateInformation'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteInternationalConsentResponse6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalConsentResponse6DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteInternationalConsentResponse6DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteInternationalConsentResponse6DataChargesItems0 Set of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteInternationalConsentResponse6DataExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
        format: double
        type: number
        x-nullable: false
      ExpirationDateTime:
        description: |-
          Specified date and time the exchange rate agreement will expire.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - ExchangeRate
    - RateType
    - UnitCurrency
    title: OBWriteInternationalConsentResponse6DataExchangeRateInformation Further detailed information on the exchange rate that has been used in the payment transaction.
    type: object
  OBWriteInternationalConsentResponse6DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteInternationalConsentResponse6DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify that party.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalConsentResponse6DataInitiationCreditor Party to which an amount of money is due.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalConsentResponse6DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalConsentResponse6DataInitiationCreditorAgent Financial institution servicing an account for the creditor.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalConsentResponse6DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalConsentResponse6DataInitiationExchangeRateInformation Provides details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalConsentResponse6DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalConsentResponse6DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteInternationalConsentResponse6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalConsentResponse6DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalScheduledConsent5Data:
    description: OBWriteInternationalScheduledConsent5Data o b write international scheduled consent5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteInternationalScheduledConsent5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalScheduledConsent5DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteInternationalScheduledConsent5DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify that party.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalScheduledConsent5DataInitiationCreditor Party to which an amount of money is due.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalScheduledConsent5DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalScheduledConsent5DataInitiationCreditorAgent Financial institution servicing an account for the creditor.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalScheduledConsent5DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalScheduledConsent5DataInitiationExchangeRateInformation Provides details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalScheduledConsent5DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsent5DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteInternationalScheduledConsent5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsent5DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalScheduledConsentResponse6Data:
    description: OBWriteInternationalScheduledConsentResponse6Data o b write international scheduled consent response6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataExchangeRateInformation'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteInternationalScheduledConsentResponse6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalScheduledConsentResponse6DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteInternationalScheduledConsentResponse6DataChargesItems0 Set of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
        format: double
        type: number
        x-nullable: false
      ExpirationDateTime:
        description: |-
          Specified date and time the exchange rate agreement will expire.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - ExchangeRate
    - RateType
    - UnitCurrency
    title: OBWriteInternationalScheduledConsentResponse6DataExchangeRateInformation Further detailed information on the exchange rate that has been used in the payment transaction.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteInternationalScheduledConsentResponse6DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled international payment.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify that party.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationCreditor Party to which an amount of money is due.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAccount Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAgent Financial institution servicing an account for the creditor.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationDebtorAccount Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationExchangeRateInformation Provides details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationRemittanceInformation Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsentResponse6DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalStandingOrderConsent6Data:
    description: OBWriteInternationalStandingOrderConsent6Data o b write international standing order consent6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteInternationalStandingOrderConsent6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalStandingOrderConsent6DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationInstructedAmount'
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - FirstPaymentDateTime
    - Frequency
    - InstructedAmount
    title: OBWriteInternationalStandingOrderConsent6DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify that party.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalStandingOrderConsent6DataInitiationCreditor Party to which an amount of money is due.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAccount Provides the details to identify the beneficiary account.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAgent:
    description: This is the servicer of the beneficiary account.
    properties:
      Identification:
        description: Unique and unambiguous identification of the servicing institution.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAgent Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalStandingOrderConsent6DataInitiationDebtorAccount Provides the details to identify the debtor account.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalStandingOrderConsent6DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalStandingOrderConsent6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalStandingOrderConsent6DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7Data:
    description: OBWriteInternationalStandingOrderConsentResponse7Data o b write international standing order consent response7 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataSCASupportData'
      Status:
        description: Specifies the status of resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalStandingOrderConsentResponse7DataAuthorisation The authorisation type request from the TPP.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteInternationalStandingOrderConsentResponse7DataChargesItems0 Set of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationInstructedAmount'
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - FirstPaymentDateTime
    - Frequency
    - InstructedAmount
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiation The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify that party.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditor Party to which an amount of money is due.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAccount Provides the details to identify the beneficiary account.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAgent:
    description: This is the servicer of the beneficiary account.
    properties:
      Identification:
        description: Unique and unambiguous identification of the servicing institution.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAgent Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationDebtorAccount Provides the details to identify the debtor account.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationInstructedAmount Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalStandingOrderConsentResponse7DataSCASupportData Supporting Data provided by TPP, when requesting SCA Exemption.
    type: object
  OIDCAuthentication:
    description: Provide OAuth client details here.
    properties:
      client_id:
        description: OAuth client identifier
        example: client
        type: string
        x-nullable: false
      client_secret:
        description: OAuth client secret
        example: secret
        type: string
        x-nullable: false
      get_user_info:
        description: flag to fetch additional user attributes from userinfo endpoint
        type: boolean
        x-nullable: false
      issuer_url:
        description: Authorization server issuer URL
        type: string
        x-nullable: false
      redirect_url:
        description: OAuth redirect URL
        example: https://example.com/callback
        type: string
        x-nullable: false
      scopes:
        description: OAuth scopes which client will be requesting
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    title: OIDC authentication settings.
    type: object
  OIDCCredentials:
    description: OIDC IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
    type: object
  OIDCIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/OIDCCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/OIDCSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  OIDCServerConsent:
    type: object
  OIDCSettings:
    description: OIDC IDP specific settings
    properties:
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo` endpoint.
        type: boolean
        x-nullable: false
      issuer_url:
        description: URL used to define the {baseURL} for any OpenID Connect endpoint when authorizing against ACP.
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  OktaAuthentication:
    properties:
      authorization_server_id:
        description: |-
          if use_org_authorization_server is set to false, use this field to specify id of custom authorization server
          if not provided 'default' will be used
        type: string
        x-nullable: false
      domain:
        description: domain
        example: dev-316761.okta.com
        type: string
        x-nullable: false
      get_user_info:
        description: flag if additional user data should be fetched from userinfo endpoint
        type: boolean
        x-nullable: false
      redirect_url:
        description: redirect url
        type: string
        x-nullable: false
      scopes:
        description: list of scopes that client will request
        items:
          type: string
        type: array
        x-nullable: false
      supervisor_client:
        $ref: '#/definitions/OktaSupervisorClient'
      use_org_authorization_server:
        description: if set to true, build-in authorization server will be used
        type: boolean
        x-nullable: false
    title: Okta authentication settings.
    type: object
  OktaCredentials:
    description: Okta IDP specific credentials
    properties:
      supervisor_client:
        $ref: '#/definitions/OktaSupervisorClient'
    type: object
  OktaIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/OktaCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/OktaSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  OktaSettings:
    description: Okta IDP specific settings
    properties:
      authorization_server_id:
        description: |-
          ID of a custom authorization server

          If the `use_org_authorization_server` parameter is set to `false`, use this field to specify
          the ID of a custom authorization server.

          If not provided, the `default` value is used.
        type: string
        x-nullable: false
      domain:
        description: String represented domain of the Okta Authentication Service for your organization
        example: dev-316761.okta.com
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo` endpoint.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        items:
          type: string
        type: array
        x-nullable: false
      use_org_authorization_server:
        description: If set to `true`, the built-in authorization server is used
        type: boolean
        x-nullable: false
    type: object
  OktaSupervisorClient:
    description: |-
      The `supervisor_client` parameter holds credentials for Okta's OAuth client application that are
      used to authorize to Okta to be able to create new client applications.
    properties:
      client_id:
        description: client id
        type: string
        x-nullable: false
      private_key:
        description: client private key
        type: string
        x-nullable: false
    type: object
  OpenbankingBrasilBusinessEntity:
    description: Usurio (pessoa jurdica) que encontra-se logado na instituio Iniciadora de Pagamento. [Restrio] Preenchimento obrigatrio se usurio logado na instituio Iniciadora de Pagamento for um CNPJ (pessoa jurdica).
    properties:
      document:
        $ref: '#/definitions/OpenbankingBrasilDocument'
    required:
    - document
    title: OpenbankingBrasilBusinessEntity BusinessEntity
    type: object
  OpenbankingBrasilCreatePaymentConsentData:
    description: Objeto contendo as informaes de consentimento para a iniciao de pagamento individual.
    properties:
      businessEntity:
        $ref: '#/definitions/OpenbankingBrasilBusinessEntity'
      creditor:
        $ref: '#/definitions/OpenbankingBrasilIdentification'
      debtorAccount:
        $ref: '#/definitions/OpenbankingBrasilDebtorAccount'
      loggedUser:
        $ref: '#/definitions/OpenbankingBrasilLoggedUser'
      payment:
        $ref: '#/definitions/OpenbankingBrasilPaymentConsent'
    required:
    - creditor
    - loggedUser
    - payment
    title: OpenbankingBrasilCreatePaymentConsentData CreatePaymentConsentData
    type: object
  OpenbankingBrasilData:
    description: OpenbankingBrasilData Data
    properties:
      businessEntity:
        $ref: '#/definitions/OpenbankingBrasilBusinessEntity'
      expirationDateTime:
        description: Data e hora de expirao da permisso. Se no for preenchido, a permisso ter a data aberta. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      loggedUser:
        $ref: '#/definitions/OpenbankingBrasilLoggedUser'
      permissions:
        description: permissions
        example:
        - ACCOUNTS_READ
        - ACCOUNTS_OVERDRAFT_LIMITS_READ
        - RESOURCES_READ
        items:
          $ref: '#/definitions/OpenbankingBrasilPermission'
        maxItems: 30
        minItems: 1
        type: array
        x-nullable: false
      transactionFromDateTime:
        description: Data e hora da transao inicial. Se no for preenchido, a transao ter a data aberta e a data ser retornada com a primeira transao disponvel. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-01-01T00:00:00Z"
        format: date-time
        type: string
        x-nullable: false
      transactionToDateTime:
        description: Data e hora final da transao. Se no for preenchido, a transao ter a data aberta e a data ser retornada com a ultima transao disponvel. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-02-01T23:59:59Z"
        format: date-time
        type: string
        x-nullable: false
    required:
    - loggedUser
    - permissions
    type: object
  OpenbankingBrasilData1:
    description: OpenbankingBrasilData1 Data1
    properties:
      consentId:
        description: Identificador nico do consentimento.
        example: urn:bancoex:C1DD33123
        maxLength: 100
        minLength: 1
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-\:]{0,99}$
        type: string
        x-nullable: false
      creationDateTime:
        description: Data e hora em que o recurso foi criado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      expirationDateTime:
        description: Data e hora de expirao da permisso. Se no for preenchido, a permisso ter a data aberta. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      permissions:
        description: permissions
        example:
        - ACCOUNTS_READ
        - ACCOUNTS_OVERDRAFT_LIMITS_READ
        - RESOURCES_READ
        items:
          $ref: '#/definitions/OpenbankingBrasilPermission'
        maxItems: 30
        minItems: 1
        type: array
        x-nullable: false
      status:
        $ref: '#/definitions/OpenbankingBrasilStatus'
      statusUpdateDateTime:
        description: Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      transactionFromDateTime:
        description: Data e hora da transao inicial. Se no for preenchido, a transao ter a data aberta e a data ser retornada com a primeira transao disponvel. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-01-01T00:00:00Z"
        format: date-time
        type: string
        x-nullable: false
      transactionToDateTime:
        description: Data e hora final da transao. Se no for preenchido, a transao ter a data aberta e a data ser retornada com a ultima transao disponvel. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-02-01T23:59:59Z"
        format: date-time
        type: string
        x-nullable: false
    required:
    - consentId
    - creationDateTime
    - permissions
    - status
    - statusUpdateDateTime
    type: object
  OpenbankingBrasilDebtorAccount:
    description: |-
      Objeto que contm a identificao da conta de origem do pagador.
      As informaes quanto  conta de origem do pagador podero ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informaes do cliente. Do contrrio, ser coletada na detentora e trazida para a iniciadora como resposta  criao do pagamento.
    properties:
      accountType:
        $ref: '#/definitions/OpenbankingBrasilEnumAccountPaymentsType'
      ispb:
        description: Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantneos) somente com nmeros.
        example: "12345678"
        maxLength: 8
        minLength: 8
        pattern: ^[0-9]{8}$
        type: string
        x-nullable: false
      issuer:
        description: |-
          Cdigo da Agncia emissora da conta sem dgito.
          (Agncia  a dependncia destinada ao atendimento aos clientes, ao pblico em geral e aos associados de cooperativas de crdito,
          no exerccio de atividades da instituio, no podendo ser mvel ou transitria).
          [Restrio] Preenchimento obrigatrio para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).
        example: "1774"
        maxLength: 4
        pattern: ^\d{4}$
        type: string
        x-nullable: false
      number:
        description: |-
          Deve ser preenchido com o nmero da conta transacional do usurio pagador, com dgito verificador (se este existir),
          se houver valor alfanumrico, este deve ser convertido para 0.
        example: "1234567890"
        maxLength: 20
        minLength: 3
        pattern: ^\d{3,20}$
        type: string
        x-nullable: false
    required:
    - accountType
    - ispb
    - number
    title: OpenbankingBrasilDebtorAccount DebtorAccount
    type: object
  OpenbankingBrasilDocument:
    description: OpenbankingBrasilDocument Document
    properties:
      identification:
        description: Nmero do documento de identificao oficial do titular pessoa jurdica.
        example: "11111111111111"
        maxLength: 14
        pattern: ^\d{14}$
        type: string
        x-nullable: false
      rel:
        description: Tipo do documento de identificao oficial do titular pessoa jurdica.
        example: CNPJ
        maxLength: 4
        pattern: ^[A-Z]{4}$
        type: string
        x-nullable: false
    required:
    - identification
    - rel
    type: object
  OpenbankingBrasilDocument1:
    description: OpenbankingBrasilDocument1 Document1
    properties:
      identification:
        description: Nmero do documento de identificao oficial do usurio.
        example: "11111111111"
        maxLength: 11
        pattern: ^\d{11}$
        type: string
        x-nullable: false
      rel:
        description: Tipo do documento de identificao oficial do usurio.
        example: CPF
        maxLength: 3
        pattern: ^[A-Z]{3}$
        type: string
        x-nullable: false
    required:
    - identification
    - rel
    type: object
  OpenbankingBrasilEnumAccountPaymentsType:
    description: |-
      Tipos de contas usadas para pagamento via Pix.
      Modalidades tradicionais previstas pela Resoluo 4.753, no contemplando contas vinculadas,
      conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrnica.
      Segue descrio de cada valor do ENUM para o escopo do Pix.
      CACC - Current - Conta Corrente.
      SLRY - Salary - Conta-Salrio.
      SVGS - Savings - Conta de Poupana.
      TRAN - TransactingAccount - Conta de Pagamento pr-paga.
    title: OpenbankingBrasilEnumAccountPaymentsType EnumAccountPaymentsType
    type: string
  OpenbankingBrasilError:
    description: OpenbankingBrasilError Error
    properties:
      code:
        description: Cdigo de erro especfico do endpoint
        maxLength: 255
        pattern: \w*\W*
        type: string
        x-nullable: false
      detail:
        description: Descrio legvel por humanos deste erro especfico
        maxLength: 2048
        pattern: \w*\W*
        type: string
        x-nullable: false
      title:
        description: Ttulo legvel por humanos deste erro especfico
        maxLength: 255
        pattern: \w*\W*
        type: string
        x-nullable: false
    required:
    - code
    - detail
    - title
    type: object
  OpenbankingBrasilIdentification:
    description: Objeto contendo os dados do recebedor (creditor).
    properties:
      cpfCnpj:
        description: |-
          Identificao da pessoa envolvida na transao.
          Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.
          O CPF ser utilizado com 11 nmeros e dever ser informado sem pontos ou traos.
          O CNPJ ser utilizado com 14 nmeros e dever ser informado sem pontos ou traos.
        example: "58764789000137"
        maxLength: 14
        minLength: 11
        pattern: ^\d{11}$|^\d{14}$
        type: string
        x-nullable: false
      name:
        description: |-
          Em caso de pessoa natural deve ser informado o nome completo do titular da conta do recebedor.
          Em caso de pessoa jurdica deve ser informada a razo social ou o nome fantasia da conta do recebedor.
        example: Marco Antonio de Brito
        maxLength: 140
        pattern: '[\w\W\s]*'
        type: string
        x-nullable: false
      personType:
        $ref: '#/definitions/OpenbankingBrasilPersonType'
    required:
    - cpfCnpj
    - name
    - personType
    title: OpenbankingBrasilIdentification Identification
    type: object
  OpenbankingBrasilLinks:
    description: Referncias para outros recusos da API requisitada.
    properties:
      first:
        description: URI da primeira pgina que originou essa lista de resultados. Restrio - Obrigatrio quando no for a primeira pgina da resposta
        example: https://api.banco.com.br/open-banking/api/v1/resource
        maxLength: 2000
        pattern: ^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$
        type: string
        x-nullable: false
      last:
        description: URI da ltima pgina dessa lista de resultados. Restrio - Obrigatrio quando no for a ltima pgina da resposta
        example: https://api.banco.com.br/open-banking/api/v1/resource
        maxLength: 2000
        pattern: ^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$
        type: string
        x-nullable: false
      next:
        description: URI da prxima pgina dessa lista de resultados. Restrio - Obrigatrio quando no for a ltima pgina da resposta
        example: https://api.banco.com.br/open-banking/api/v1/resource
        maxLength: 2000
        pattern: ^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$
        type: string
        x-nullable: false
      prev:
        description: "URI da pgina anterior dessa lista de resultados. Restrio - \tObrigatrio quando no for a primeira pgina da resposta"
        example: https://api.banco.com.br/open-banking/api/v1/resource
        maxLength: 2000
        pattern: ^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$
        type: string
        x-nullable: false
      self:
        description: URI completo que gerou a resposta atual.
        example: https://api.banco.com.br/open-banking/api/v1/resource
        maxLength: 2000
        pattern: ^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$
        type: string
        x-nullable: false
    required:
    - self
    title: OpenbankingBrasilLinks Links
    type: object
  OpenbankingBrasilLoggedUser:
    description: Usurio (pessoa natural) que encontra-se logado na instituio Iniciadora de Pagamento.
    properties:
      document:
        $ref: '#/definitions/OpenbankingBrasilDocument1'
    required:
    - document
    title: OpenbankingBrasilLoggedUser LoggedUser
    type: object
  OpenbankingBrasilMeta:
    description: Meta informaes referente a API requisitada.
    properties:
      requestDateTime:
        description: Data e hora da consulta, conforme especificao RFC-3339, formato UTC.
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      totalPages:
        description: Nmero total de pginas no resultado
        example: 1
        format: int32
        type: integer
        x-nullable: false
      totalRecords:
        description: Nmero total de registros no resultado
        example: 1
        format: int32
        type: integer
        x-nullable: false
    required:
    - requestDateTime
    - totalPages
    - totalRecords
    title: OpenbankingBrasilMeta Meta
    type: object
  OpenbankingBrasilPaymentConsent:
    description: Objeto contendo dados de pagamento para consentimento.
    properties:
      amount:
        description: Valor da transao com 2 casas decimais.
        example: "100000.12"
        maxLength: 19
        minLength: 4
        pattern: ^((\d{1,16}\.\d{2}))$
        type: string
        x-nullable: false
      currency:
        description: |-
          Cdigo da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.
          Todos os valores monetrios informados esto representados com a moeda vigente do Brasil.
        example: BRL
        maxLength: 3
        pattern: ^([A-Z]{3})$
        type: string
        x-nullable: false
      date:
        description: Data do pagamento, conforme especificao RFC-3339.
        example: "2021-01-01"
        format: date
        type: string
        x-nullable: false
      type:
        description: Este campo define o tipo de pagamento que ser iniciado aps a autorizao do consentimento.
        example: PIX
        type: string
        x-nullable: false
    required:
    - amount
    - currency
    - date
    - type
    title: OpenbankingBrasilPaymentConsent PaymentConsent
    type: object
  OpenbankingBrasilPermission:
    description: Especifica os tipos de permisses de acesso s APIs no escopo do Open Banking Brasil - Fase 2, de acordo com os blocos de consentimento fornecidos pelo usurio e necessrios ao acesso a cada endpoint das APIs.
    title: OpenbankingBrasilPermission Permission
    type: string
  OpenbankingBrasilPersonType:
    description: Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).
    title: OpenbankingBrasilPersonType PersonType
    type: string
  OpenbankingBrasilResponsePaymentConsentData:
    description: Objeto contendo as informaes de resposta do consentimento para a iniciao de pagamento individual.
    properties:
      businessEntity:
        $ref: '#/definitions/OpenbankingBrasilBusinessEntity'
      consentId:
        description: |-
          Identificador nico do consentimento criado para a iniciao de pagamento solicitada. Dever ser um URN - Uniform Resource Name.
          Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141)  um Uniform Resource
          Identifier - URI - que  atribudo sob o URI scheme "urn" e um namespace URN especfico, com a inteno de que o URN
          seja um identificador de recurso persistente e independente da localizao.
          Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:
          o namespace(urn)
          o identificador associado ao namespace da instituio transnmissora (bancoex)
          o identificador especfico dentro do namespace (C1DD33123).
          Informaes mais detalhadas sobre a construo de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
        example: urn:bancoex:C1DD33123
        maxLength: 256
        pattern: ^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*'%\/?#]+$
        type: string
        x-nullable: false
      creationDateTime:
        description: Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      creditor:
        $ref: '#/definitions/OpenbankingBrasilIdentification'
      debtorAccount:
        $ref: '#/definitions/OpenbankingBrasilDebtorAccount'
      expirationDateTime:
        description: |-
          Data e hora em que o consentimento da iniciao de pagamento expira, devendo ser sempre o creationDateTime mais 5 minutos. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC (UTC time format).
          O consentimento  criado com o status AWAITING_AUTHORISATION, e deve assumir o status AUTHORIZED, REJECTED ou CONSUMED antes do tempo de expirao - 5 minutos.
          Caso no assuma, o status permanece como AWAITING_AUTHORISATION e ser necessria a criao de um novo consentimento.
          Para o cenrio em que o status assumiu AUTHORISED, o tempo mximo (do token FAPI Hybrid Flow)  de 60 minutos, sem refresh,
          e este  o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. No  possvel prorrogar este tempo e a criao de um novo consentimento ser necessria para os cenrios de insucesso.
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
      loggedUser:
        $ref: '#/definitions/OpenbankingBrasilLoggedUser'
      payment:
        $ref: '#/definitions/OpenbankingBrasilPaymentConsent'
      status:
        $ref: '#/definitions/OpenbankingBrasilStatus'
      statusUpdateDateTime:
        description: Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificao RFC-3339, sempre com a utilizao de timezone UTC(UTC time format).
        example: "2021-05-21T08:30:00Z"
        format: date-time
        type: string
        x-nullable: false
    required:
    - consentId
    - creationDateTime
    - creditor
    - expirationDateTime
    - loggedUser
    - payment
    - status
    - statusUpdateDateTime
    title: OpenbankingBrasilResponsePaymentConsentData ResponsePaymentConsentData
    type: object
  OpenbankingBrasilStatus:
    description: Estado atual do consentimento cadastrado.
    title: OpenbankingBrasilStatus Status
    type: string
  OpenbankingClient:
    properties:
      client_uri:
        description: url to a client website
        example: https://example.com
        type: string
        x-nullable: false
      id:
        description: client id
        example: default
        type: string
        x-nullable: false
      logo_uri:
        description: url to a page where client logo is served
        example: https://example.com/logo.png
        type: string
        x-nullable: false
      name:
        description: client name
        example: My app
        type: string
        x-nullable: false
    type: object
  OpenbankingConsentWithClient:
    properties:
      Client:
        $ref: '#/definitions/OpenbankingClient'
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      domestic_payment_consent:
        $ref: '#/definitions/DomesticPaymentConsent'
      domestic_scheduled_payment_consent:
        $ref: '#/definitions/DomesticScheduledPaymentConsent'
      domestic_standing_order_consent:
        $ref: '#/definitions/DomesticStandingOrderConsent'
      file_payment_consent:
        $ref: '#/definitions/FilePaymentConsent'
      idempotency_key:
        type: string
        x-nullable: false
      international_payment_consent:
        $ref: '#/definitions/InternationalPaymentConsent'
      international_scheduled_payment_consent:
        $ref: '#/definitions/InternationalScheduledPaymentConsent'
      international_standing_order_consent:
        $ref: '#/definitions/InternationalStandingOrderConsent'
      request_hash:
        type: string
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        type: string
        x-nullable: false
      status:
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  OpenbankingServerConsent:
    properties:
      bank_url:
        description: If empty it defaults to demo bank embedded in acp
        type: string
        x-nullable: false
    type: object
  OpenbankingUKDynamicClientRegistrationRequest:
    description: |-
      OpenbankingUKDynamicClientRegistrationRequest represents decoded jwt of dcr obuk request
      Reference: https://openbankinguk.github.io/dcr-docs-pub/v3.2/dynamic-client-registration.html
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      aud:
        description: |-
          The audience for the request. This should be the unique identifier
          for the ASPSP issued by the issuer of the software statement.
          An ASPSP processing the software statement may validate the value
          of the claim and reject software statements for which the ASPSP
          is not the audience.The value must be a Base62 encoded GUID.
        pattern: ^[0-9a-zA-Z]{1,18}$
        type: string
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      exp:
        description: |-
          The time at which the request expires expressed as seconds since
          the epoch. An ASPSP processing the request must reject requests
          where the current time is greater than the time specified in the claim.
        format: int64
        type: integer
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      iat:
        description: |-
          The time at which the request was issued by the TPP expressed
          as "seconds since the epoch"
        format: int64
        type: integer
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      iss:
        description: |-
          Identifier for the TPP. This value must be unique for each TPP
          registered by the issuer of the SSA.The value must be a Base62
          encoded GUID. For SSAs issued by the OB Directory,
          this must be the software_id.
        pattern: ^[0-9a-zA-Z]{1,22}$
        type: string
        x-nullable: false
      jti:
        description: A unique identifier for the JWT. The value must be a UUIDv4 GUID.
        pattern: ^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    type: object
  OpenbankingUKDynamicClientRegistrationResponse:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      dynamically_registered:
        type: boolean
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    type: object
  PIICategory:
    properties:
      name:
        description: name
        example: HIPAA
        type: string
        x-nullable: false
    type: object
  PatchConfiguration:
    items:
      $ref: '#/definitions/PatchOperation'
    type: array
  PatchOperation:
    additionalProperties:
      type: object
    type: object
  PatchTenantConfiguration:
    items:
      $ref: '#/definitions/PatchOperation'
    type: array
  PayloadSettings:
    properties:
      format:
        description: payload format
        format: payloadFormat
        type: string
        x-nullable: false
      jws_payload:
        $ref: '#/definitions/JWSPayloadSettings'
    type: object
  Policies:
    properties:
      policies:
        description: list of policies
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
    type: object
  Policy:
    properties:
      definition:
        description: The definition of an Open Policy Agent (OPA) policy provided using the REGO language.
        type: string
        x-nullable: false
      id:
        description: Unique ID of your policy
        example: "1"
        format: policyID
        type: string
        x-nullable: false
      language:
        description: |-
          Language of a policy

          ACP supports creating Cloudentity policies (using a visual editor or defined using JSON or
          YAML) and policies defined using REGO (language used by Open Policy Agent (OPA)).
        example: cloudentity
        format: policyLanguage
        type: string
        x-nullable: false
      policy_name:
        description: Display name for your policy
        example: check_consent
        type: string
        x-nullable: false
      server_id:
        description: ID of your authorization server (workspace)
        example: default
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: ID of your tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        description: |-
          Define a type of your policy

          ACP is provided with the following policy types: user, developer, machine, dcr, api.

          Depending on the policy type the policy can be assigned to different policy
          execution points.

          A policy of the `user` type can be assigned only to the following scopes: `scope_user_grant`,
          `server_user_token`, `client_user_token`.

          A `developer` policy can be assigned only to the `scope_client_assignment` and
          `server_client_assignment` scopes.

          A policy of the `machine` type can be assigned only to the following scopes:
          `scope_machine_grant`, `server_machine_token`, `client_machine_token`.

          A `dcr` policy can be assigned only to the `scope_dynamic_client_registration` and the
          `server_dynamic_client_registration` scopes.

          An `api` policy can be assigned to all of the policy execution points.

          Each of the policies type has its defined and provided out of the box policy validators.
        example: user
        format: policyType
        type: string
        x-nullable: false
      validators:
        description: An array of validators for a Cloudentity policy
        items:
          $ref: '#/definitions/ValidatorConfig'
        type: array
        x-nullable: false
    type: object
  PolicyExecutionPoint:
    properties:
      policy_id:
        description: Optional policy ID
        example: "1"
        format: policyID
        type: string
        x-nullable: false
      server_id:
        description: The ID of your authorization server (workspace)
        example: default
        format: serverID
        type: string
        x-nullable: false
      target_fk:
        description: String representation of the target's ID
        example: "1"
        type: string
        x-nullable: false
      tenant_id:
        description: The ID of your tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        description: |-
          String representation of the policy execution point type

          Policies can be assigned to different policy execution points. For example, you can create a
          policy that you want to trigger while calls are made to your APIs. In this
          case, the type of the policy execution point is `api`. While
          choosing the policies that are applied for API calls, only those with the
          `api` type are available.
        example: scope_client_assignment
        format: policyExecutionPoint
        type: string
        x-nullable: false
    type: object
  PolicyExecutionPoints:
    properties:
      execution_points:
        description: list of policy executions
        items:
          $ref: '#/definitions/PolicyExecutionPoint'
        type: array
        x-nullable: false
    type: object
  PolicyValidationFailure:
    description: Defines the failure that took place for a policy validation
    properties:
      details:
        description: Details on the failed validation for a policy
        type: string
        x-nullable: false
      message:
        description: Message displayed for failed validation
        type: string
        x-nullable: false
      validator:
        description: String representation of the validator for which the policy failed validation
        type: string
        x-nullable: false
    type: object
  PolicyValidationRecovery:
    properties:
      id:
        type: string
        x-nullable: false
      type:
        type: string
        x-nullable: false
    type: object
  PolicyValidationResult:
    description: Provides information on the results of a policy validation
    properties:
      failure:
        description: An array of failures that took place during the policy validation process
        items:
          $ref: '#/definitions/PolicyValidationFailure'
        type: array
        x-nullable: false
      recovery:
        description: An array of recovery methods that take place when a policy validation fails
        items:
          $ref: '#/definitions/PolicyValidationRecovery'
        type: array
        x-nullable: false
      result:
        description: String representation of the policy validation result
        type: string
        x-nullable: false
    type: object
  PostCode:
    title: PostCode Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
    type: string
  PrivacyLedgerEvent:
    properties:
      date:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: privacyLedgerEventID
        type: string
        x-nullable: false
      payload:
        $ref: '#/definitions/PrivacyLedgerPayload'
      payload_signature:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
    type: object
  PrivacyLedgerEventType:
    type: string
  PrivacyLedgerEvents:
    properties:
      events:
        items:
          $ref: '#/definitions/PrivacyLedgerEvent'
        type: array
        x-nullable: false
    type: object
  PrivacyLedgerPayload:
    properties:
      consent_granted:
        $ref: '#/definitions/ConsentGrantedEvent'
      consent_revoked:
        $ref: '#/definitions/ConsentRevokedEvent'
      event_type:
        $ref: '#/definitions/PrivacyLedgerEventType'
    type: object
  Purpose:
    properties:
      name:
        description: name
        example: Core Function
        format: purposeName
        type: string
        x-nullable: false
      primary:
        description: is the purpose primary. If there are multiple purposes defined, one of them must be marked as primary.
        example: true
        type: boolean
        x-nullable: false
    type: object
  QueueName:
    type: string
  RFC6749Error:
    properties:
      cause:
        type: string
        x-nullable: false
      error:
        type: string
        x-nullable: false
      error_description:
        type: string
        x-nullable: false
      error_hint:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  RecentActivities:
    properties:
      activities:
        items:
          $ref: '#/definitions/RecentActivity'
        type: array
        x-nullable: false
    type: object
  RecentActivity:
    properties:
      date:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: recentActivityID
        type: string
        x-nullable: false
      payload:
        $ref: '#/definitions/RecentActivityPayload'
      server_id:
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
    type: object
  RecentActivityPayload:
    properties:
      action:
        type: string
        x-nullable: false
      count:
        format: int64
        type: integer
        x-nullable: false
      primary_name:
        type: string
        x-nullable: false
      secondary_name:
        type: string
        x-nullable: false
      subject:
        type: string
        x-nullable: false
      subject_id:
        type: string
        x-nullable: false
    type: object
  RecoveryConfig:
    properties:
      id:
        type: string
        x-nullable: false
      type:
        type: string
        x-nullable: false
    type: object
  RecurringJob:
    properties:
      cron:
        description: cron expression
        type: string
        x-nullable: false
      id:
        $ref: '#/definitions/JobID'
      paused:
        description: is paused
        type: boolean
        x-nullable: false
      payload:
        description: payload
        type: object
        x-nullable: false
      queue:
        $ref: '#/definitions/QueueName'
      scheduled_at:
        description: next execution time
        format: date-time
        type: string
        x-nullable: false
      starting_from:
        description: job starting from
        format: date-time
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        format: tenantID
        type: string
        x-nullable: false
    type: object
  RegistrationToken:
    properties:
      client_uri:
        type: string
        x-nullable: false
      expires_in:
        format: int64
        type: integer
        x-nullable: false
      signature:
        type: string
        x-nullable: false
    type: object
  RejectConsentRequest:
    properties:
      error:
        description: reject error
        type: string
        x-nullable: false
      error_cause:
        description: error cause
        type: string
        x-nullable: false
      error_description:
        description: reject error description
        type: string
        x-nullable: false
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        type: string
        x-nullable: false
      status_code:
        description: reject http status code
        format: int64
        type: integer
        x-nullable: false
    type: object
  RejectScopeGrant:
    properties:
      error:
        description: reject error
        type: string
        x-nullable: false
      error_cause:
        description: error cause
        type: string
        x-nullable: false
      error_description:
        description: reject error description
        type: string
        x-nullable: false
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        type: string
        x-nullable: false
      status_code:
        description: reject http status code
        format: int64
        type: integer
        x-nullable: false
    type: object
  RejectSession:
    properties:
      error:
        description: reject error
        type: string
        x-nullable: false
      error_description:
        description: reject error description
        type: string
        x-nullable: false
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        type: string
        x-nullable: false
      status_code:
        description: reject http status code
        format: int64
        type: integer
        x-nullable: false
    type: object
  RemoveServiceConfigurationResult:
    properties:
      not_removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      removed_apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
    type: object
  RequestedScope:
    properties:
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: scope description which will be displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: scope display name which will be displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: scope id
        example: "1"
        format: scopeID
        type: string
        x-nullable: false
      name:
        description: scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      params:
        items:
          type: string
        type: array
        x-nullable: false
      requested_name:
        format: scopeName
        type: string
        x-nullable: false
      service:
        $ref: '#/definitions/Service'
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_service:
        type: boolean
        x-nullable: false
    type: object
  RotateClientSecretDeveloperResponse:
    properties:
      secret:
        type: string
        x-nullable: false
    type: object
  RotateClientSecretResponse:
    properties:
      secret:
        type: string
        x-nullable: false
    type: object
  SAMLAuthentication:
    properties:
      entity_issuer:
        description: unique id of a service provider, if not provided will be generated
        example: https://localhost:8443/default/default/login
        type: string
        x-nullable: false
      identifier_attribute:
        description: |-
          attribute name from AttributeStatement saml response which will be used as identifier in ACP
          applies only when identifier source is set to attribute
        type: string
        x-nullable: false
      identifier_source:
        description: 'identifier source, one of: subject | attribute'
        type: string
        x-nullable: false
      idp_certificate:
        description: idp certificate, must start with -----BEGIN CERTIFICATE----- and end with -----END CERTIFICATE-----
        type: string
        x-nullable: false
      redirect_url:
        description: endpoint where IDP will post SamlResponse
        example: https://localhost:8443/default/default/login
        type: string
        x-nullable: false
      sso_url:
        description: endpoint where SamlRequest will be sent
        example: https://test-dev-ed.my.salesforce.com/idp/endpoint/HttpPost
        type: string
        x-nullable: false
      subject_name_id_format:
        description: |-
          name id format of saml subject
          applies only when identifier source is set to subject
          allowed values:
          urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
          urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
          urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
          urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName
          urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted
          urn:oasis:names:tc:SAML:2.0:nameid-format:entity
          urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos
          urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
          urn:oasis:names:tc:SAML:2.0:nameid-format:transient
          default value: urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        type: string
        x-nullable: false
    type: object
  SAMLCredentials:
    description: SAML IDP specific credentials
    properties:
      idp_certificate:
        description: |-
          The certificate of your IDP

          The certificate must start with `-----BEGIN CERTIFICATE-----` and end with `-----END CERTIFICATE-----`.
        type: string
        x-nullable: false
    type: object
  SAMLIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/SAMLCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/SAMLSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  SAMLSettings:
    description: SAML IDP specific settings
    properties:
      entity_issuer:
        description: |-
          Unique id of a service provider

          If not provided, a random string is generated.
        example: https://localhost:8443/default/default/login
        type: string
        x-nullable: false
      identifier_attribute:
        description: |-
          The attribute name from the `AttributeStatement` SAML response which is used as an identifier in ACP

          Applies only when `identifierSource` parameter is set to `attribute`.
        type: string
        x-nullable: false
      identifier_source:
        description: |-
          The source for an identifier

          The `identifierSource` parameter can have either the `subject` or the `attribute` value.

          It is used to provide an unique user attribute that is used as an identifier in ACP.

          Depending on which identifier source you choose, you must define either the
          `identifierAttribute` or the `subjectNameIDFormat` parameter.
        type: string
        x-nullable: false
      skip_in_response_to_verification:
        description: |-
          If enabled, the verification, if the `InResponseTo` parameter matches the original ID attribute
          sent from ACP, is skipped.

          Enable the `skipInResponseToVerification` flag when the `InResponseTo` parameter is not
          returned by your IDP.
        type: boolean
        x-nullable: false
      sso_url:
        description: String represented SSO URL (endpoint) where the SAML request is sent
        example: https://test-dev-ed.my.salesforce.com/idp/endpoint/HttpPost
        type: string
        x-nullable: false
      subject_name_id_format:
        description: |-
          Name ID format of a SAML subject

          It applies only when the `identifierSource` parameter is set to `subject`.

          Allowed values:

          `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress`

          `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`

          `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName`

          `urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:entity`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`

          default value:
          `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`
        type: string
        x-nullable: false
    type: object
  Scope:
    properties:
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: scope description which will be displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: scope display name which will be displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: scope id
        example: "1"
        format: scopeID
        type: string
        x-nullable: false
      name:
        description: scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ScopeGrant:
    properties:
      client_id:
        format: clientID
        type: string
        x-nullable: false
      given_at:
        format: date-time
        type: string
        x-nullable: false
      granted_scope_name:
        format: scopeName
        type: string
        x-nullable: false
      language:
        format: language
        type: string
        x-nullable: false
      scope_name:
        format: scopeName
        type: string
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ScopeGrantAccepted:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  ScopeGrantRejected:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  ScopeGrantSessionResponse:
    properties:
      acr:
        description: authentication context class reference
        format: acr
        type: string
        x-nullable: false
      allowed_scopes:
        additionalProperties:
          type: boolean
        description: scopes that passed policy validation
        type: object
        x-nullable: false
      amr:
        description: authentication methods references
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      auth_time:
        description: time when user authenticated
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: OAuth client identifier
        example: default
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      error:
        $ref: '#/definitions/RFC6749Error'
      granted_audience:
        description: list of granted audience
        items:
          type: string
        type: array
        x-nullable: false
      granted_scopes:
        description: list of granted scopes
        example:
        - email
        - profile
        - openid
        items:
          format: scopeName
          type: string
        type: array
        x-nullable: false
      id:
        description: unique id of login session
        format: loginID
        type: string
        x-nullable: false
      idp_id:
        description: idp identifier
        format: idpID
        type: string
        x-nullable: false
      login_approved:
        description: is login approved
        example: false
        type: boolean
        x-nullable: false
      login_rejected:
        description: is login rejected
        example: false
        type: boolean
        x-nullable: false
      max_age:
        description: max age for a session to live
        format: duration
        type: string
        x-nullable: false
      request_query_params:
        $ref: '#/definitions/Values'
      request_url:
        description: original url requested by oauth client
        type: string
        x-nullable: false
      requested_acr:
        description: requested acr
        items:
          type: string
        type: array
        x-nullable: false
      requested_at:
        description: time when oauth client made a request
        format: date-time
        type: string
        x-nullable: false
      requested_audience:
        description: list of requested audiences
        items:
          type: string
        type: array
        x-nullable: false
      requested_claims:
        $ref: '#/definitions/ClaimsRequests'
      requested_grant_type:
        description: requested grant type
        type: string
        x-nullable: false
      requested_scopes:
        description: list of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      scope_grant_approved:
        description: is scope grant approved
        example: true
        type: boolean
        x-nullable: false
      scope_grant_rejected:
        description: is scope grant rejected
        example: false
        type: boolean
        x-nullable: false
      server_id:
        description: authorization server identifier
        example: default
        format: serverID
        type: string
        x-nullable: false
      subject:
        description: user identifier
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant identifier
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ScopePrivacyInformation:
    properties:
      pii_categories:
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      purpose:
        format: purposeName
        type: string
        x-nullable: false
    type: object
  ScopeWithService:
    properties:
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: scope description which will be displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: scope display name which will be displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: scope id
        example: "1"
        format: scopeID
        type: string
        x-nullable: false
      name:
        description: scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      service:
        $ref: '#/definitions/Service'
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_service:
        type: boolean
        x-nullable: false
    type: object
  ScopeWithServiceDeveloperResponse:
    properties:
      scope_description:
        description: scope description
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      scope_display_name:
        description: scope display name
        example: Offline access
        type: string
        x-nullable: false
      scope_id:
        description: scope id
        example: "1"
        type: string
        x-nullable: false
      scope_name:
        description: scope name
        example: offline_access
        type: string
        x-nullable: false
      service_description:
        description: service description
        example: service description
        type: string
        x-nullable: false
      service_id:
        description: service id
        example: "1"
        type: string
        x-nullable: false
      service_name:
        description: service name
        example: service
        type: string
        x-nullable: false
      with_service:
        description: is scope assigned to a service
        example: false
        type: boolean
        x-nullable: false
    type: object
  ScopeWithServiceID:
    properties:
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: scope description which will be displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: scope display name which will be displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: scope id
        example: "1"
        format: scopeID
        type: string
        x-nullable: false
      name:
        description: scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      service_id:
        description: optional service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ScopeWithServicePublicResponse:
    properties:
      scope_description:
        description: scope description
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      scope_display_name:
        description: scope display name
        example: Offline access
        type: string
        x-nullable: false
      scope_id:
        description: scope id
        example: "1"
        type: string
        x-nullable: false
      scope_name:
        description: scope name
        example: offline_access
        type: string
        x-nullable: false
      service_description:
        description: service description
        example: service description
        type: string
        x-nullable: false
      service_id:
        description: service id
        example: "1"
        type: string
        x-nullable: false
      service_name:
        description: service name
        example: service
        type: string
        x-nullable: false
      with_service:
        description: is scope assigned to a service
        example: false
        type: boolean
        x-nullable: false
    type: object
  ScopesWithServices:
    properties:
      scopes:
        items:
          $ref: '#/definitions/ScopeWithService'
        type: array
        x-nullable: false
    type: object
  ScriptTransformer:
    description: script transformer ALPHA_FEATURE
    properties:
      enabled:
        type: boolean
        x-nullable: false
      script:
        format: script
        type: string
        x-nullable: false
    type: object
  SecondaryIdentification:
    description: This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).
    title: SecondaryIdentification This is secondary identification of the account, as assigned by the account servicing institution.
    type: string
  Server:
    description: Multi Tenant authorization server
    properties:
      access_token_strategy:
        description: |-
          Access token strategy

          You can choose to go either with `JWT` or `opaque` tokens.

          The content of JSON Web Tokens is readable and it is possible to be decoded by anyone that
          has a secret or a public key in their possession.

          Opaque tokens are in a proprietary form that contains an identifier to information stored on
          the athorization server. To validate an opaque token, the recipient must call the server that
          issued the token.
        example: jwt
        type: string
        x-nullable: false
      access_token_ttl:
        description: |-
          Access token time to live

          After an access token reaches its time to live, it expires and it cannot be used to
          authenticate the client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      authorization_code_ttl:
        description: |-
          Authorization code time to live

          After an authorization code reaches its time to live, it expires and it cannot be used to
          authorize the request to the `/token` endpoint.
        example: 10m0s
        format: duration
        type: string
        x-nullable: false
      backchannel_token_delivery_modes_supported:
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_user_code_parameter_supported:
        type: boolean
        x-nullable: false
      client_certificate_header:
        description: |-
          Client certificate header name that contains the client certificate in the urlencoded Privacy-Enhanced
          Mail (PEM) file format.
        type: string
        x-nullable: false
      color:
        description: Your server's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      cookie_max_age:
        description: |-
          Cookie max age

          Defines how long a cookie can live until it expires.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      dynamic_client_registration:
        $ref: '#/definitions/DynamicClientRegistrationSettings'
      dynamic_scope_separator:
        description: |-
          You can use this property to define a separator that is used for dynamic scopes.

          For example, the default separator is `.`, so the scope could look like the following:
          `users.*`.

          For Open Banking Brazil compliant servers, the `:` separator should be used.
        type: string
        x-nullable: false
      enable_idp_discovery:
        description: |-
          If enabled, IDP discovery automatically redirects the user to their own IDP and does not
          display IDPs of other users while the users accesses the server/application.
        example: false
        type: boolean
        x-nullable: false
      enable_legacy_clients_with_no_software_statement:
        description: |-
          If enabled, it is possible to manually register clients withouth the use of software
          statements.

          This flag is enabled, when the `enable_trust_anchor` flag is set to `false`. You can disable
          it using API, but it cannot be manually enabled.
        type: boolean
        x-nullable: false
      enable_quick_access:
        description: If enabled, the server is visible on the Quick Access tab on the login page.
        type: boolean
        x-nullable: false
      enable_trust_anchor:
        description: |-
          If enabled, it makes it obligatory to provide a software statement signed by a trusted certificate authority
          when registering a client application with the use of the Dynamic Client Registration (DCR).

          In public key infrastructure (PKI), trust anchors are certification authorities. They are
          represented by a certificate that is used to verify the signature of a certificate issued by
          a particular trust anchor.
        type: boolean
        x-nullable: false
      enforce_pkce:
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for both
          private and public clients.

          PKCE is an OAuth security extension that prevents malicious applications or codes that
          intercepted authorization code from exchanging it for an access token.
        example: false
        type: boolean
        x-nullable: false
      enforce_pkce_for_public_clients:
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for
          public clients.

          Public clients, like mobile applications or JavaScript-based applications, by their design,
          cannot store client secrets securely. For such clients, even encrypting the client secret
          inside the application’s code is not a reliable way of protecting secrets as the application
          can be decompiled and the client secret can be extracted while it is decrypted in the memory
          of the application.

          For those reasons, ACP supports the use of PKCE as an addition to the authorization code
          grant flow to provide a secure alternative to the implicit grant flow.
        example: false
        type: boolean
        x-nullable: false
      grant_types:
        description: An array that defines which of the OAuth 2.0 grant types are enabled for the authorization server.
        example:
        - authorization_code
        - implicit
        - refresh_token
        - client_credentials
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id:
        description: |-
          Unique identifier of an authorization server (workspace)

          If not provided, a random ID is generated.
        example: 935ab21c-b20a-11e9-a2a3-2a2ae2dbcce4
        format: serverID
        type: string
        x-nullable: false
      id_token_ttl:
        description: |-
          ID token time to live

          After an ID token reaches its time to live, it expires and it cannot be used to provide
          user profile information to a client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      issuer_url:
        description: |-
          Defines a custom issuer URL that can be used as the value of the `iss` claim in an access
          token.

          If not provided, it is built dynamically based on the server's URL.
        example: http://example.com/default/default
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ServerJWKs'
      key_type:
        description: |-
          Determines which type of asymmetric algorithms (RSA or ECDSA) is used to generate keys for signing access and
          ID tokens.

          It is used only as an input parameter for the Create Authorization Server API.
        example: rsa
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      name:
        description: Display name of your authorization server
        example: Sample authorization server
        type: string
        x-nullable: false
      profile:
        description: |-
          The profile of a server

          ACP is delivered with preconfigured workspace templates that enable quick and easy setup for
          specific configuration patterns. For example, you can instantly create an Open Banking
          compliant workspace that has all of the required mechanisms and settings already in place.
        example: default
        format: serverProfile
        type: string
        x-nullable: false
      read_client_certificate_from_header:
        description: |-
          A flag that defines whether the client certificates should be read from request header's.

          In a situation that there are multiple ACP nodes running, a gateway, proxy, ingress, or a
          load-balancer is needed. In this case, the client certificate cannot be read from the the
          HTTP request body as, for example, with the use of the load-balancer, it would read the
          load-balancer's certificate instead of the client's certificate. The solution to this issue
          is to enable this flag and read the certificates from the request header.

          If set to `true`, the client certificate header is required to be present in request header's.
        type: boolean
        x-nullable: false
      refresh_token_ttl:
        description: |-
          Refresh token time to live

          After a refresh token reaches its time to live, it expires and it cannot be used to obtain
          new access tokens for a client application.
        example: 720h0m0s
        format: duration
        type: string
        x-nullable: false
      root_cas:
        description: |-
          You can provide root Certificate Authority (CA) certificates encoded to the Privacy-Enhanced
          Mail (PEM) file format which are used for the `tls_client_auth` and the
          `self_signed_tls_client_auth` client authentication methods that use the Mutual
          Transport Layer Security (mTLS).

          If not set, the system root CA certifiates are used instead.
        type: string
        x-nullable: false
      rotated_secrets:
        description: An array of rotated secrets that are still used to validate tokens
        example:
        - jFpwIvuKJP46J71WqszPv1SrzoUr-cSILP9EPdlClB4
        items:
          type: string
        type: array
        x-nullable: false
      secret:
        description: |-
          Secret used for hashing

          It must have at least 32 characters. If not provided, it is generated.
        example: hW5WhKX_7w7BLwUQ6mn7Cp70_OoKI_F1y1hLS5U8lIU
        type: string
        x-nullable: false
      subject_identifier_algorithm_salt:
        description: |-
          Salt used to hash `subject` when the `pairwise` subject type is used.

          Salt is a random data which is used as an additional input to one-way functions that hashes
          data, passwords, and, in this case, subjects.

          It is recommended that your salt value is long for security reasons. Preferably, the salt
          value should be at least the same length as the output of the hash.
        type: string
        x-nullable: false
      subject_identifier_types:
        description: |-
          An array that defines supported subject identifier types.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          `public` identifiers provide the same `sub` claim value to all client applications.
          `pairwise` identifiers provide different `sub` claim values to each client application. With
          this approach, it makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        example:
        - public
        - pairwise
        items:
          enum:
          - public
          - pairwise
          type: string
        type: array
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      token_endpoint_auth_methods:
        description: |-
          An array that lists all of the supported token endpoint authentication methods for the
          authorization server.
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          type: string
        type: array
        x-nullable: false
      token_endpoint_authn_methods:
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          type: string
        type: array
        x-nullable: false
      trust_anchor_configuration:
        $ref: '#/definitions/TrustAnchorConfiguration'
      type:
        description: |-
          Server type

          It is an internal property used to recognize if the server is created for an admin portal,
          a developer portal, or if it is a system or a regular workspace.
        example: regular
        format: serverType
        type: string
        x-nullable: false
    type: object
  ServerAPIs:
    properties:
      apis_by_services:
        additionalProperties:
          items:
            $ref: '#/definitions/API'
          type: array
        type: object
        x-nullable: false
    type: object
  ServerConsent:
    properties:
      client_id:
        format: clientID
        type: string
        x-nullable: false
      custom:
        $ref: '#/definitions/CustomServerConsent'
      oidc:
        $ref: '#/definitions/OIDCServerConsent'
      openbanking:
        $ref: '#/definitions/OpenbankingServerConsent'
      server_id:
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        format: serverConsentType
        type: string
        x-nullable: false
    type: object
  ServerDump:
    properties:
      access_token_strategy:
        description: |-
          Access token strategy

          You can choose to go either with `JWT` or `opaque` tokens.

          The content of JSON Web Tokens is readable and it is possible to be decoded by anyone that
          has a secret or a public key in their possession.

          Opaque tokens are in a proprietary form that contains an identifier to information stored on
          the athorization server. To validate an opaque token, the recipient must call the server that
          issued the token.
        example: jwt
        type: string
        x-nullable: false
      access_token_ttl:
        description: |-
          Access token time to live

          After an access token reaches its time to live, it expires and it cannot be used to
          authenticate the client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      authorization_code_ttl:
        description: |-
          Authorization code time to live

          After an authorization code reaches its time to live, it expires and it cannot be used to
          authorize the request to the `/token` endpoint.
        example: 10m0s
        format: duration
        type: string
        x-nullable: false
      backchannel_token_delivery_modes_supported:
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_user_code_parameter_supported:
        type: boolean
        x-nullable: false
      client_certificate_header:
        description: |-
          Client certificate header name that contains the client certificate in the urlencoded Privacy-Enhanced
          Mail (PEM) file format.
        type: string
        x-nullable: false
      color:
        description: Your server's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      cookie_max_age:
        description: |-
          Cookie max age

          Defines how long a cookie can live until it expires.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      dynamic_client_registration:
        $ref: '#/definitions/DynamicClientRegistrationSettings'
      dynamic_scope_separator:
        description: |-
          You can use this property to define a separator that is used for dynamic scopes.

          For example, the default separator is `.`, so the scope could look like the following:
          `users.*`.

          For Open Banking Brazil compliant servers, the `:` separator should be used.
        type: string
        x-nullable: false
      enable_idp_discovery:
        description: |-
          If enabled, IDP discovery automatically redirects the user to their own IDP and does not
          display IDPs of other users while the users accesses the server/application.
        example: false
        type: boolean
        x-nullable: false
      enable_legacy_clients_with_no_software_statement:
        description: |-
          If enabled, it is possible to manually register clients withouth the use of software
          statements.

          This flag is enabled, when the `enable_trust_anchor` flag is set to `false`. You can disable
          it using API, but it cannot be manually enabled.
        type: boolean
        x-nullable: false
      enable_quick_access:
        description: If enabled, the server is visible on the Quick Access tab on the login page.
        type: boolean
        x-nullable: false
      enable_trust_anchor:
        description: |-
          If enabled, it makes it obligatory to provide a software statement signed by a trusted certificate authority
          when registering a client application with the use of the Dynamic Client Registration (DCR).

          In public key infrastructure (PKI), trust anchors are certification authorities. They are
          represented by a certificate that is used to verify the signature of a certificate issued by
          a particular trust anchor.
        type: boolean
        x-nullable: false
      enforce_pkce:
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for both
          private and public clients.

          PKCE is an OAuth security extension that prevents malicious applications or codes that
          intercepted authorization code from exchanging it for an access token.
        example: false
        type: boolean
        x-nullable: false
      enforce_pkce_for_public_clients:
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for
          public clients.

          Public clients, like mobile applications or JavaScript-based applications, by their design,
          cannot store client secrets securely. For such clients, even encrypting the client secret
          inside the application’s code is not a reliable way of protecting secrets as the application
          can be decompiled and the client secret can be extracted while it is decrypted in the memory
          of the application.

          For those reasons, ACP supports the use of PKCE as an addition to the authorization code
          grant flow to provide a secure alternative to the implicit grant flow.
        example: false
        type: boolean
        x-nullable: false
      grant_types:
        description: An array that defines which of the OAuth 2.0 grant types are enabled for the authorization server.
        example:
        - authorization_code
        - implicit
        - refresh_token
        - client_credentials
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id:
        description: |-
          Unique identifier of an authorization server (workspace)

          If not provided, a random ID is generated.
        example: 935ab21c-b20a-11e9-a2a3-2a2ae2dbcce4
        format: serverID
        type: string
        x-nullable: false
      id_token_ttl:
        description: |-
          ID token time to live

          After an ID token reaches its time to live, it expires and it cannot be used to provide
          user profile information to a client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      initialize:
        description: flag to initialize server default configuration (applicable only if server does not exist)
        type: boolean
        x-nullable: false
      issuer_url:
        description: |-
          Defines a custom issuer URL that can be used as the value of the `iss` claim in an access
          token.

          If not provided, it is built dynamically based on the server's URL.
        example: http://example.com/default/default
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ServerJWKs'
      key_type:
        description: |-
          Determines which type of asymmetric algorithms (RSA or ECDSA) is used to generate keys for signing access and
          ID tokens.

          It is used only as an input parameter for the Create Authorization Server API.
        example: rsa
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      name:
        description: Display name of your authorization server
        example: Sample authorization server
        type: string
        x-nullable: false
      profile:
        description: |-
          The profile of a server

          ACP is delivered with preconfigured workspace templates that enable quick and easy setup for
          specific configuration patterns. For example, you can instantly create an Open Banking
          compliant workspace that has all of the required mechanisms and settings already in place.
        example: default
        format: serverProfile
        type: string
        x-nullable: false
      read_client_certificate_from_header:
        description: |-
          A flag that defines whether the client certificates should be read from request header's.

          In a situation that there are multiple ACP nodes running, a gateway, proxy, ingress, or a
          load-balancer is needed. In this case, the client certificate cannot be read from the the
          HTTP request body as, for example, with the use of the load-balancer, it would read the
          load-balancer's certificate instead of the client's certificate. The solution to this issue
          is to enable this flag and read the certificates from the request header.

          If set to `true`, the client certificate header is required to be present in request header's.
        type: boolean
        x-nullable: false
      refresh_token_ttl:
        description: |-
          Refresh token time to live

          After a refresh token reaches its time to live, it expires and it cannot be used to obtain
          new access tokens for a client application.
        example: 720h0m0s
        format: duration
        type: string
        x-nullable: false
      root_cas:
        description: |-
          You can provide root Certificate Authority (CA) certificates encoded to the Privacy-Enhanced
          Mail (PEM) file format which are used for the `tls_client_auth` and the
          `self_signed_tls_client_auth` client authentication methods that use the Mutual
          Transport Layer Security (mTLS).

          If not set, the system root CA certifiates are used instead.
        type: string
        x-nullable: false
      rotated_secrets:
        description: An array of rotated secrets that are still used to validate tokens
        example:
        - jFpwIvuKJP46J71WqszPv1SrzoUr-cSILP9EPdlClB4
        items:
          type: string
        type: array
        x-nullable: false
      secret:
        description: |-
          Secret used for hashing

          It must have at least 32 characters. If not provided, it is generated.
        example: hW5WhKX_7w7BLwUQ6mn7Cp70_OoKI_F1y1hLS5U8lIU
        type: string
        x-nullable: false
      subject_identifier_algorithm_salt:
        description: |-
          Salt used to hash `subject` when the `pairwise` subject type is used.

          Salt is a random data which is used as an additional input to one-way functions that hashes
          data, passwords, and, in this case, subjects.

          It is recommended that your salt value is long for security reasons. Preferably, the salt
          value should be at least the same length as the output of the hash.
        type: string
        x-nullable: false
      subject_identifier_types:
        description: |-
          An array that defines supported subject identifier types.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          `public` identifiers provide the same `sub` claim value to all client applications.
          `pairwise` identifiers provide different `sub` claim values to each client application. With
          this approach, it makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        example:
        - public
        - pairwise
        items:
          enum:
          - public
          - pairwise
          type: string
        type: array
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      token_endpoint_auth_methods:
        description: |-
          An array that lists all of the supported token endpoint authentication methods for the
          authorization server.
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          type: string
        type: array
        x-nullable: false
      token_endpoint_authn_methods:
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          type: string
        type: array
        x-nullable: false
      trust_anchor_configuration:
        $ref: '#/definitions/TrustAnchorConfiguration'
      type:
        description: |-
          Server type

          It is an internal property used to recognize if the server is created for an admin portal,
          a developer portal, or if it is a system or a regular workspace.
        example: regular
        format: serverType
        type: string
        x-nullable: false
    type: object
  ServerJWK:
    properties:
      alg:
        description: |-
          The "alg" (algorithm) parameter identifies the algorithm intended for
          use with the key.  The values used should either be registered in the
          IANA "JSON Web Signature and Encryption Algorithms" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.
        example: RS256
        type: string
        x-nullable: false
      created_at:
        description: Time when key was generated
        format: date-time
        type: string
        x-nullable: false
      crv:
        example: P-256
        type: string
        x-nullable: false
      d:
        example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
        type: string
        x-nullable: false
      dp:
        example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
        type: string
        x-nullable: false
      dq:
        example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
        type: string
        x-nullable: false
      e:
        example: AQAB
        type: string
        x-nullable: false
      k:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      kid:
        description: |-
          The "kid" (key ID) parameter is used to match a specific key.  This
          is used, for instance, to choose among a set of keys within a JWK Set
          during key rollover.  The structure of the "kid" value is
          unspecified.  When "kid" values are used within a JWK Set, different
          keys within the JWK Set SHOULD use distinct "kid" values.  (One
          example in which different keys might use the same "kid" value is if
          they have different "kty" (key type) values but are considered to be
          equivalent alternatives by the application using them.)  The "kid"
          value is a case-sensitive string.
        example: 1603dfe0af8f4596
        type: string
        x-nullable: false
      kty:
        description: |-
          The "kty" (key type) parameter identifies the cryptographic algorithm
          family used with the key, such as "RSA" or "EC". "kty" values should
          either be registered in the IANA "JSON Web Key Types" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.  The "kty" value is a case-sensitive string.
        example: RSA
        type: string
        x-nullable: false
      "n":
        example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
        type: string
        x-nullable: false
      p:
        example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
        type: string
        x-nullable: false
      promoted_at:
        description: Time when key was set as current key in use
        format: date-time
        type: string
        x-nullable: false
      q:
        example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
        type: string
        x-nullable: false
      qi:
        example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
        type: string
        x-nullable: false
      revoked_at:
        description: Time when key was revoked
        format: date-time
        type: string
        x-nullable: false
      rotated_at:
        description: Time when key was rotated
        format: date-time
        type: string
        x-nullable: false
      use:
        description: |-
          Use ("public key use") identifies the intended use of
          the public key. The "use" parameter is employed to indicate whether
          a public key is used for encrypting data or verifying the signature
          on data. Values are commonly "sig" (signature) or "enc" (encryption).
        example: sig
        type: string
        x-nullable: false
      x:
        example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
        type: string
        x-nullable: false
      x5c:
        description: |-
          The "x5c" (X.509 certificate chain) parameter contains a chain of one
          or more PKIX certificates [RFC5280].  The certificate chain is
          represented as a JSON array of certificate value strings.  Each
          string in the array is a base64-encoded (Section 4 of [RFC4648] --
          not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
          The PKIX certificate containing the key value MUST be the first
          certificate.
        items:
          type: string
        type: array
        x-nullable: false
      x5t:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      x5t#S256:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      "y":
        example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
        type: string
        x-nullable: false
    required:
    - kty
    type: object
  ServerJWKs:
    properties:
      keys:
        example: []
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
      next_encryption_key:
        $ref: '#/definitions/ServerJWK'
      next_signing_key:
        $ref: '#/definitions/ServerJWK'
      revoked_encryption_keys:
        description: |-
          An array of revoked encryption keys

          Revoked encryption keys cannot be used to encrypt payloads between servers and client applications
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
      revoked_keys_limit:
        description: The maximum number of revoked keys that ACP stores.
        format: int64
        type: integer
        x-nullable: false
      revoked_signing_keys:
        description: |-
          An array of revoked sigining keys

          Revoked signing keys cannot be used to sign any tokens.
          Any attempt to authenticate using a token signed with a revoked signing key results
          in failed authentication.
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
      rotated_keys_limit:
        description: The maximum number of rotated keys that ACP stores.
        format: int64
        type: integer
        x-nullable: false
    type: object
  ServerToServer:
    properties:
      dependent:
        description: dependent server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      server_id:
        description: authorization server id
        example: developer
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  Servers:
    properties:
      servers:
        items:
          $ref: '#/definitions/Server'
        type: array
        x-nullable: false
    type: object
  ServersBindings:
    properties:
      bindings:
        items:
          $ref: '#/definitions/ServerToServer'
        type: array
        x-nullable: false
    type: object
  Service:
    properties:
      audience:
        description: service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: gateway id
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: unique service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: service name
        example: Sample service
        type: string
        x-nullable: false
      system:
        description: Is service a system service
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-nullable: false
    type: object
  ServiceConnectedToGateway:
    properties:
      api_group_id:
        description: Optional id of api group id connected to the service
        format: apiGroupID
        type: string
        x-nullable: false
      api_group_metadata:
        $ref: '#/definitions/APIGroupMetadata'
      audience:
        description: service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: gateway id
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: unique service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: service name
        example: Sample service
        type: string
        x-nullable: false
      system:
        description: Is service a system service
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-nullable: false
    type: object
  ServiceResponse:
    properties:
      audience:
        description: service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: gateway id
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: unique service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: service name
        example: Sample service
        type: string
        x-nullable: false
      number_of_scopes:
        format: int64
        type: integer
        x-nullable: false
      system:
        description: Is service a system service
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-nullable: false
    type: object
  ServiceWithScopesAndAPIs:
    properties:
      apis:
        description: list of apis
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      audience:
        description: service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: gateway id
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: unique service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: service name
        example: Sample service
        type: string
        x-nullable: false
      scopes:
        description: list of scopes
        items:
          $ref: '#/definitions/Scope'
        type: array
        x-nullable: false
      system:
        description: Is service a system service
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-nullable: false
    type: object
  ServiceWithScopesResponse:
    properties:
      audience:
        description: service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      authorization_server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: gateway id
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: unique service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: service name
        example: Sample service
        type: string
        x-nullable: false
      scopes:
        description: list of scopes
        items:
          $ref: '#/definitions/Scope'
        type: array
        x-nullable: false
      system:
        description: Is service a system service
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-nullable: false
    type: object
  ServicesResponse:
    properties:
      services:
        items:
          $ref: '#/definitions/ServiceResponse'
        type: array
        x-nullable: false
    type: object
  SetGatewayConfigurationRequest:
    properties:
      api_groups:
        description: List of api groups
        items:
          $ref: '#/definitions/APIGroup'
        type: array
        x-nullable: false
    type: object
  SetGatewayConfigurationResponse:
    properties:
      number_of_added_api_groups:
        format: int64
        type: integer
        x-nullable: false
    type: object
  SignInMethod:
    properties:
      auth_time:
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      idp_id:
        format: idpID
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
    type: object
  StaticAuthentication:
    properties:
      hint:
        description: display hint message
        type: boolean
        x-nullable: false
      users:
        description: list of users used for authentication
        items:
          $ref: '#/definitions/StaticUser'
        type: array
        x-nullable: false
    title: static authentication settings.
    type: object
  StaticCredentials:
    description: Static IDP specific credentials
    properties:
      users:
        description: |-
          An array of users, their credentials and authentication context.

          The `users` parameter accepts a JSON of user data. You can add multiple users, define their
          usernames and passwords. You can also enrich their authentication context.
        items:
          $ref: '#/definitions/StaticUser'
        type: array
        x-nullable: false
    type: object
  StaticIDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/StaticCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          ACP is designed to make it possible for you to bring any of your own IDPs and integrate it
          with ACP as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/StaticSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    type: object
  StaticSettings:
    description: Static IDP specific settings
    properties:
      hint:
        description: If enabled, a hint message is displayed
        type: boolean
        x-nullable: false
    type: object
  StaticUser:
    properties:
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      password:
        description: user password
        example: secret
        type: string
        x-nullable: false
      username:
        description: user login
        example: peter
        type: string
        x-nullable: false
    type: object
  Stats:
    properties:
      all_access_tokens:
        format: int64
        type: integer
        x-nullable: false
      apis:
        format: int64
        type: integer
        x-nullable: false
      applications:
        format: int64
        type: integer
        x-nullable: false
      machine_access_tokens:
        format: int64
        type: integer
        x-nullable: false
      scopes:
        format: int64
        type: integer
        x-nullable: false
      services:
        format: int64
        type: integer
        x-nullable: false
      user_access_tokens:
        format: int64
        type: integer
        x-nullable: false
    type: object
  StatusUpdateDateTime:
    description: |-
      All date-time fields in responses must include the timezone. An example is below:
      2017-04-05T10:43:07+00:00
    format: date-time
    title: StatusUpdateDateTime Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
    type: string
  StreetName:
    title: StreetName Name of a street or thoroughfare.
    type: string
  Styling:
    properties:
      colors:
        properties:
          background:
            type: string
            x-nullable: false
          header:
            type: string
            x-nullable: false
          primary:
            type: string
            x-nullable: false
        type: object
        x-nullable: false
      font_url:
        type: string
        x-nullable: false
      logo_size:
        type: string
        x-nullable: false
      logo_url:
        type: string
        x-nullable: false
    type: object
  SubDepartment:
    title: SubDepartment Identification of a sub-division of a large organisation or building.
    type: string
  SystemAPIBindings:
    properties:
      bindings:
        items:
          $ref: '#/definitions/CrossTenantAPIPolicyBinding'
        type: array
        x-nullable: false
    type: object
  SystemServicesResponse:
    properties:
      services:
        items:
          $ref: '#/definitions/Service'
        type: array
        x-nullable: false
    type: object
  Tenant:
    properties:
      authentication_context_settings:
        $ref: '#/definitions/AuthenticationContextSettings'
      id:
        description: |-
          tenant unique identifier
          exampe: default
        format: tenantID
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ServerJWKs'
      name:
        description: tenant name
        example: Default
        type: string
        x-nullable: false
      styling:
        $ref: '#/definitions/Styling'
      url:
        description: optional custom tenant url. If not provided the server url is used instead
        example: https://example.com/default
        type: string
        x-nullable: false
    type: object
  TenantCreated:
    properties:
      clients:
        description: list of clients created in tenant
        items:
          $ref: '#/definitions/Client'
        type: array
        x-nullable: false
      idps:
        description: list of identity providers
        items:
          $ref: '#/definitions/IDP'
        type: array
        x-nullable: false
      servers:
        description: list of servers created in tenant
        items:
          $ref: '#/definitions/Server'
        type: array
        x-nullable: false
      tenant:
        $ref: '#/definitions/Tenant'
    type: object
  TenantDump:
    properties:
      apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      claims:
        items:
          $ref: '#/definitions/Claim'
        type: array
        x-nullable: false
      clients:
        items:
          $ref: '#/definitions/Client'
        type: array
        x-nullable: false
      consent_actions:
        items:
          $ref: '#/definitions/ConsentActionWithConsents'
        type: array
        x-nullable: false
      consent_grants:
        items:
          $ref: '#/definitions/ConsentGrant'
        type: array
        x-nullable: false
      consents:
        items:
          $ref: '#/definitions/Consent'
        type: array
        x-nullable: false
      cross_tenant_api_policy_bindings:
        items:
          $ref: '#/definitions/CrossTenantAPIPolicyBinding'
        type: array
        x-nullable: false
      gateway_api_groups:
        items:
          $ref: '#/definitions/GatewayAPIGroup'
        type: array
        x-nullable: false
      gateways:
        items:
          $ref: '#/definitions/Gateway'
        type: array
        x-nullable: false
      idps:
        $ref: '#/definitions/IDPs'
      openbanking_consents:
        items:
          $ref: '#/definitions/OBConsentCommon'
        type: array
        x-nullable: false
      openbanking_file_payment_consent_file_resources:
        items:
          $ref: '#/definitions/FilePaymentConsentFileResource'
        type: array
        x-nullable: false
      policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      policy_execution_points:
        items:
          $ref: '#/definitions/PolicyExecutionPoint'
        type: array
        x-nullable: false
      privacy_ledger_events:
        items:
          $ref: '#/definitions/PrivacyLedgerEvent'
        type: array
        x-nullable: false
      recurring_jobs:
        items:
          $ref: '#/definitions/RecurringJob'
        type: array
        x-nullable: false
      scope_grants:
        items:
          $ref: '#/definitions/ScopeGrant'
        type: array
        x-nullable: false
      scopes_without_service:
        items:
          $ref: '#/definitions/Scope'
        type: array
        x-nullable: false
      server_consents:
        items:
          $ref: '#/definitions/ServerConsent'
        type: array
        x-nullable: false
      servers:
        items:
          $ref: '#/definitions/ServerDump'
        type: array
        x-nullable: false
      servers_bindings:
        items:
          $ref: '#/definitions/ServerToServer'
        type: array
        x-nullable: false
      services:
        items:
          $ref: '#/definitions/ServiceWithScopesAndAPIs'
        type: array
        x-nullable: false
      tenant:
        $ref: '#/definitions/Tenant'
    type: object
  TestPolicyDefinition:
    description: Definition of a policy that you wish to test
    properties:
      definition:
        description: The definition of an Open Policy Agent (OPA) policy provided using the REGO language.
        type: string
        x-nullable: false
      language:
        description: |-
          Language of a policy

          ACP supports creating Cloudentity policies (using a visual editor or defined using JSON or
          YAML) and Open Policy Agent (OPA) policies (defined using REGO).

          OPA is a policy engine that unifies policy enforcement and provides a high-level declarative
          language (REGO) that lets you specify policies as code. REGO supports referencing nested
          documents and ensures that your queries are correct and unambiguous.
        example: cloudentity
        format: policyLanguage
        type: string
        x-nullable: false
      validators:
        description: An array of validators for a Cloudentity policy
        items:
          $ref: '#/definitions/ValidatorConfig'
        type: array
        x-nullable: false
    type: object
  TestPolicyInput:
    properties:
      authn_ctx:
        $ref: '#/definitions/AuthenticationContext'
      contexts:
        additionalProperties:
          type: object
        description: Contexts for your policy validation
        type: object
        x-nullable: false
      request:
        $ref: '#/definitions/TestPolicyInputRequest'
    title: Contains the input for the request that is used to test the policy.
    type: object
  TestPolicyInputRequest:
    properties:
      headers:
        additionalProperties:
          items:
            type: string
          type: array
        description: Headers that are used in your request that you use to test your policy
        type: object
        x-nullable: false
      method:
        description: Method that is used in your request that you use to test your policy
        type: string
        x-nullable: false
      path:
        description: Path that is used in your request that you use to test your policy
        type: string
        x-nullable: false
      path_params:
        additionalProperties:
          type: string
        description: Path parameters that are used in your request that you use to test your policy
        type: object
        x-nullable: false
      query_params:
        additionalProperties:
          items:
            type: string
          type: array
        description: Query parameters that are used in your request that you use to test your policy
        type: object
        x-nullable: false
    type: object
  TestPolicyRequest:
    properties:
      input:
        $ref: '#/definitions/TestPolicyInput'
      policy:
        $ref: '#/definitions/TestPolicyDefinition'
      server_id:
        description: Authorization server (workspace) ID
        format: serverID
        type: string
        x-nullable: false
    type: object
  TestPolicyResponse:
    properties:
      failures:
        items:
          $ref: '#/definitions/ValidateResponse_ValidatorFailure'
        type: array
        x-nullable: false
      recovery:
        items:
          $ref: '#/definitions/ValidateResponse_Recovery'
        type: array
        x-nullable: false
      result:
        type: string
        x-nullable: false
      status:
        type: boolean
        x-nullable: false
    type: object
  TownName:
    title: TownName Name of a built-up area, with defined boundaries, and a local government.
    type: string
  TrustAnchorConfiguration:
    properties:
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: URI of the JWKs of the trusted party responsible for signing the Software Statement
        type: string
        x-nullable: false
    type: object
  UnbindGroupFromServiceResponse:
    properties:
      not_removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      removed_apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      removed_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
    type: object
  UnbindSystemAPIRequest:
    properties:
      api_id:
        format: apiID
        type: string
        x-nullable: false
      policy_id:
        format: policyID
        type: string
        x-nullable: false
      policy_server_id:
        format: serverID
        type: string
        x-nullable: false
    type: object
  UpdateAPIRequest:
    properties:
      data_classifications:
        description: Data classifications
        items:
          type: string
        type: array
        x-nullable: false
      policy_id:
        description: optional id of a policy
        example: block
        format: policyID
        type: string
        x-nullable: false
    type: object
  UpdateClientAdminRequest:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_server_id:
        description: ID of the authorization server (workspace) to which a client application is tied
        example: default
        format: serverID
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      developer_id:
        description: Optional developer owner of the client application
        format: subject
        type: string
        x-nullable: false
      developer_metadata:
        $ref: '#/definitions/Metadata'
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's application
        type: boolean
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      trusted:
        description: |-
          Defines whether the client application is trusted or not.

          For trusted clients, consent pages are skipped during the authorization process.
        type: boolean
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - authorization_server_id
    type: object
  UpdateClientDeveloperRequest:
    properties:
      application_type:
        default: web
        description: |-
          String represented type of a client application

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Depending on the type of your application remember to choose appropriate security measures.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience)

          Typically, the audience may be a single resources server or a list of resource servers.
          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS algorithm alg value that the Client will use for signing authentication requests.
          When omitted, the Client will not send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED if the token delivery mode is set to ping or push.
          This is the endpoint to which the OP will post a notification after a successful or failed end-user authentication.
          It MUST be an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: 'REQUIRED. One of the following values: poll, ping, or push.'
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. Boolean value specifying whether the Client supports the user_code parameter.
          If omitted, the default value is false.
          This parameter only applies when OP parameter backchannel_user_code_parameter_supported is true.
        type: boolean
        x-nullable: false
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued.

          The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The `client_secret_expires_at` holds an integer that defines the time at which the client
          secret expires

          If the client secret does not expire, the value should be set to `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application
        type: string
        x-nullable: false
      description:
        description: Description of a client application
        type: string
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          To know more about OAuth grant flows, see the
          [ACP grant flows documentation](https://docs.authorization.cloudentity.com/features/oauth/grant_flows/).
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: |-
          URL of JSON Web Key Set containing the public keys used by a client application to authenticate itself
          with ACP
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: |-
          An array of OAuth allowed redirect URIs

          Redirect URIs are used after a user authorizes an application and ACP redirect them back to
          the application with an authorization code or an access token included in the URL.
        example:
        - https://example.com/callback
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, the value of the parameter should be set to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      response_types:
        default:
        - code
        description: |-
          An array of OAuth client response types configured for a client application

          The array may consist of the following arguments:

          `code` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code

          `code token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an authorization code

          `id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token, an access token type, and an ID token

          `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an authorization code, an ID token, an access token, and an access token
          type.

          `token` - when supplied as the value for the `response_type` parameter, a successful
          response includes an access token and its type. This argument is used for the implicit grant
          flow, but is not recommended. Instead, you should use either the authorization code grant
          flow with PKCE or client authentication set to `none` and with the use of PKCE.
        example:
        - token
        - id_token
        - code
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      scope:
        description: Space separated scopes for compatibility with OAuth specification
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          URL using the HTTPS scheme to be used in calculating Pseudonymous Identifiers by the OpenID Provider. The URL references a
          file with a single JSON array of redirect_uri values.
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
        type: string
        x-nullable: false
      subject_type:
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers are locally unique and never reassigned identifiers within the Issuer
          for the end-user and are inteded to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          ACP supports the following client authentication methods:
          client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt,
          self_signed_tls_client_auth, tls_client_auth, none.

          To learn more, see the [ACP client authentication documentation](https://docs.authorization.cloudentity.com/features/oauth/client_auth/)
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        description: |-
          Signing algorithm for the token endpoint

          ACP supports signing tokens using the RS256, ES256, PS256, and HS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is JWT
          [JWT] serialized, and signed using JWS.

          If omitted, the default behavior is for the UserInfo Response to return the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    type: object
  UpdateGatewayRequest:
    properties:
      description:
        description: description
        type: string
        x-nullable: false
      name:
        description: gateway name
        example: Cloudentity Pyron
        type: string
        x-nullable: false
    type: object
  ValidateResponse_Recovery:
    properties:
      id:
        type: string
        x-nullable: false
      type:
        type: string
        x-nullable: false
    type: object
  ValidateResponse_ValidatorFailure:
    properties:
      details:
        type: string
        x-nullable: false
      message:
        type: string
        x-nullable: false
      validator:
        type: string
        x-nullable: false
    type: object
  ValidatorConfig:
    description: Depending on the type of a policy different validators are available.
    properties:
      conf:
        additionalProperties:
          type: object
        description: |-
          Configuration of the validator provided in the JSON format

          Validators configuration is an array of fields where each node consists of a comparator used,
          validated field, and a value for comparison. Configuration can be also branched, which means
          that it is possible to create conditional validators. It allows to define complex
          authorization scenarios based on the results from other policy validators.
        type: object
        x-nullable: false
      name:
        description: The name of your validator
        example: identity-context
        type: string
        x-nullable: false
      recovery:
        items:
          $ref: '#/definitions/RecoveryConfig'
        type: array
        x-nullable: false
    title: Configuration of a policy validator
    type: object
  Values:
    additionalProperties:
      items:
        type: string
      type: array
    description: |-
      It is typically used for query parameters and form values.
      Unlike in the http.Header map, the keys in a Values map
      are case-sensitive.
    title: Values maps a string key to a list of values.
    type: object
  emptyResponse:
    type: object
  genericError:
    description: Error response
    properties:
      error:
        example: The requested resource could not be found
        type: string
        x-nullable: false
      error_code:
        description: Code represents the error status code (404, 403, 401, ...).
        example: 404
        format: int64
        type: integer
        x-nullable: false
      error_hint:
        example: Object with ID 12345 does not exist
        type: string
        x-nullable: false
    required:
    - error
    type: object
  tokenResponse:
    properties:
      access_token:
        type: string
        x-nullable: false
      expires_in:
        format: int64
        type: integer
        x-nullable: false
      id_token:
        type: string
        x-nullable: false
      refresh_token:
        type: string
        x-nullable: false
      scope:
        type: string
        x-nullable: false
      token_type:
        type: string
        x-nullable: false
    type: object
  userinfoResponse:
    properties:
      aud:
        description: Audience - Audiences that this ID Token is intended for.
        items:
          type: string
        type: array
        x-nullable: false
      birthdate:
        description: End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004] YYYY-MM-DD format. The year MAY be 0000, indicating that it is omitted. To represent only the year, YYYY format is allowed. Note that depending on the underlying platform's date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.
        type: string
        x-nullable: false
      email:
        description: End-User's preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, as discussed in Section 5.7.
        type: string
        x-nullable: false
      email_verified:
        description: True if the End-User's e-mail address has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.
        type: boolean
        x-nullable: false
      family_name:
        description: Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.
        type: string
        x-nullable: false
      gender:
        description: End-User's gender. Values defined by this specification are female and male. Other values MAY be used when neither of the defined values are applicable.
        type: string
        x-nullable: false
      given_name:
        description: Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.
        type: string
        x-nullable: false
      locale:
        description: End-User's locale, represented as a BCP47 [RFC5646] language tag. This is typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166‑1] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Relying Parties MAY choose to accept this locale syntax as well.
        type: string
        x-nullable: false
      middle_name:
        description: Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.
        type: string
        x-nullable: false
      name:
        description: End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.
        type: string
        x-nullable: false
      nickname:
        description: Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.
        type: string
        x-nullable: false
      phone_number:
        description: End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.
        type: string
        x-nullable: false
      phone_number_verified:
        description: True if the End-User's phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed. The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.
        type: boolean
        x-nullable: false
      picture:
        description: URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image. Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.
        type: string
        x-nullable: false
      preferred_username:
        description: Non-unique shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace.
        type: string
        x-nullable: false
      profile:
        description: URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.
        type: string
        x-nullable: false
      sub:
        description: Subject - Identifier for the End-User at the IssuerURL.
        type: string
        x-nullable: false
      updated_at:
        description: Time the End-User's information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time.
        format: int64
        type: integer
        x-nullable: false
      website:
        description: URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.
        type: string
        x-nullable: false
      zoneinfo:
        description: String from zoneinfo [zoneinfo] time zone database representing the End-User's time zone. For example, Europe/Paris or America/Los_Angeles.
        type: string
        x-nullable: false
    type: object
  wellKnown:
    description: |-
      WellKnown represents important OpenID Connect discovery metadata.

      It includes links to several endpoints (e.g. /oauth2/token) and exposes information on supported signature algorithms
      among others.
    properties:
      acr_values_supported:
        items:
          type: string
        type: array
        x-nullable: false
      authorization_endpoint:
        description: URL of the OP's OAuth 2.0 Authorization Endpoint.
        example: https://example.com/oauth2/auth
        type: string
        x-nullable: false
      backchannel_authentication_endpoint:
        description: URL of the OP's Backchannel Authentication Endpoint
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg_values_supported:
        description: |-
          JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for signed authentication requests
          If omitted, signed authentication requests are not supported by the OP.
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_logout_session_supported:
        description: |-
          Boolean value specifying whether the OP can pass a sid (session ID) Claim in the Logout Token to identify the RP
          session with the OP. If supported, the sid Claim is also included in ID Tokens issued by the OP
        type: boolean
        x-nullable: false
      backchannel_logout_supported:
        description: Boolean value specifying whether the OP supports back-channel logout, with true indicating support.
        type: boolean
        x-nullable: false
      backchannel_token_delivery_modes_supported:
        description: 'JSON array containing one or more of the following values: poll, ping, and push.'
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_user_code_parameter_supported:
        description: |-
          Boolean value specifying whether the OP supports the use of the user_code parameter, with true indicating support.
          If omitted, the default value is false.
        type: boolean
        x-nullable: false
      claims_parameter_supported:
        description: Boolean value specifying whether the OP supports use of the claims parameter, with true indicating support.
        type: boolean
        x-nullable: false
      claims_supported:
        description: |-
          JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply
          values for. Note that for privacy or other reasons, this might not be an exhaustive list.
        items:
          type: string
        type: array
        x-nullable: false
      code_challenge_methods_supported:
        description: List of supported Proof Key for Code Exchange (PKCE) code challenge methods
        items:
          type: string
        type: array
        x-nullable: false
      frontchannel_logout_session_supported:
        description: |-
          Boolean value specifying whether the OP can pass iss (issuer) and sid (session ID) query parameters to identify
          the RP session with the OP when the frontchannel_logout_uri is used. If supported, the sid Claim is also
          included in ID Tokens issued by the OP.
        type: boolean
        x-nullable: false
      frontchannel_logout_supported:
        description: Boolean value specifying whether the OP supports HTTP-based logout, with true indicating support.
        type: boolean
        x-nullable: false
      grant_types_supported:
        description: JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports.
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          type: string
        type: array
        x-nullable: false
      id_token_signing_alg_values_supported:
        description: |-
          JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token
          to encode the Claims in a JWT.
        items:
          type: string
        type: array
        x-nullable: false
      introspection_endpoint:
        description: OAuth 2.0 Introspection Endpoint.
        type: string
        x-nullable: false
      issuer:
        description: |-
          URL using the https scheme with no query or fragment component that the OP asserts as its IssuerURL Identifier.
          If IssuerURL discovery is supported , this value MUST be identical to the issuer value returned
          by WebFinger. This also MUST be identical to the iss Claim value in ID Tokens issued from this IssuerURL.
        example: https://example.com/
        type: string
        x-nullable: false
      jwks_uri:
        description: |-
          URL of the OP's JSON Web Key Set [JWK] document. This contains the signing key(s) the RP uses to validate
          signatures from the OP. The JWK Set MAY also contain the Server's encryption key(s), which are used by RPs
          to encrypt requests to the Server. When both signing and encryption keys are made available, a use (Key Use)
          parameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage.
          Although some algorithms allow the same key to be used for both signatures and encryption, doing so is
          NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of
          keys provided. When used, the bare key values MUST still be present and MUST match those in the certificate.
        example: https://example.com/.well-known/jwks.json
        type: string
        x-nullable: false
      mtls_endpoint_aliases:
        $ref: '#/definitions/MTLSEndpointAliases'
      registration_endpoint:
        description: URL of the authorization server's OAuth 2.0 dynamic client registration endpoint.
        type: string
        x-nullable: false
      request_object_encryption_alg_values_supported:
        description: List of JWE encryption algorithms (alg values) supported by the OP for Request Objects. These algorithms are used both when the Request Object is passed by a value and when it is passed by a reference.
        items:
          type: string
        type: array
        x-nullable: false
      request_object_encryption_enc_values_supported:
        description: List of JWE encryption algorithms (enc values) supported by the OP for Request Objects. These algorithms are used both when the Request Object is passed by a value and when it is passed by a reference.
        items:
          type: string
        type: array
        x-nullable: false
      request_object_signing_alg_values_supported:
        description: |-
          JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for Request Objects, which are described in Section 6.1 of OpenID Connect Core 1.0 [OpenID.Core].
          These algorithms are used both when the Request Object is passed by value (using the request parameter) and when it is passed by reference (using the request_uri parameter).
          Servers SHOULD support none and RS256.
        items:
          type: string
        type: array
        x-nullable: false
      request_parameter_supported:
        description: Boolean value specifying whether the OP supports use of the request parameter, with true indicating support.
        type: boolean
        x-nullable: false
      request_uri_parameter_supported:
        description: Boolean value specifying whether the OP supports use of the request_uri parameter, with true indicating support.
        type: boolean
        x-nullable: false
      require_request_uri_registration:
        description: |-
          Boolean value specifying whether the OP requires any request_uri values used to be pre-registered
          using the request_uris registration parameter.
        type: boolean
        x-nullable: false
      response_modes_supported:
        description: JSON array containing a list of the OAuth 2.0 response_mode values that this OP supports.
        items:
          type: string
        type: array
        x-nullable: false
      response_types_supported:
        description: |-
          JSON array containing a list of the OAuth 2.0 response_type values that this OP supports. Dynamic OpenID
          Providers MUST support the code, id_token, and the token id_token Response Type values.
        items:
          enum:
          - token
          - id_token
          - code
          - code id_token
          - token id_token
          - token code
          - token id_token code
          type: string
        type: array
        x-nullable: false
      revocation_endpoint:
        description: URL of the authorization server's OAuth 2.0 revocation endpoint.
        type: string
        x-nullable: false
      scopes_supported:
        description: |-
          SON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports. The server MUST
          support the openid scope value. Servers MAY choose not to advertise some supported scope values even when this parameter is used
        items:
          type: string
        type: array
        x-nullable: false
      subject_types_supported:
        description: |-
          JSON array containing a list of the Subject Identifier types that this OP supports. Valid types include
          pairwise and public.
        example: public, pairwise
        items:
          enum:
          - public
          - pairwise
          type: string
        type: array
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client certificate bound access tokens
        type: boolean
        x-nullable: false
      token_endpoint:
        description: URL of the OP's OAuth 2.0 Token Endpoint
        example: https://example.com/oauth2/token
        type: string
        x-nullable: false
      token_endpoint_auth_methods_supported:
        description: |-
          JSON array containing a list of Client Authentication methods supported by this Token Endpoint. The options are
          client_secret_post, client_secret_basic, client_secret_jwt, and private_key_jwt, as described in Section 9 of OpenID Connect Core 1.0
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          type: string
        type: array
        x-nullable: false
      token_endpoint_auth_signing_alg_values_supported:
        description: |-
          JSON array containing a list of the JWS signing algorithms ("alg" values) supported by the token endpoint for the
          signature on the JWT [JWT] used to authenticate the client at the token endpoint for the "private_key_jwt" and "client_secret_jwt" authentication methods.
          This metadata entry MUST be present if either of these authentication methods are specified in the "token_endpoint_auth_methods_supported" entry.
          No default algorithms are implied if this entry is omitted.  Servers SHOULD support "RS256".  The value "none" MUST NOT be used.
        items:
          type: string
        type: array
        x-nullable: false
      userinfo_endpoint:
        description: URL of the OP's UserInfo Endpoint.
        type: string
        x-nullable: false
      userinfo_signing_alg_values_supported:
        description: JSON array containing a list of the JWS [JWS] signing algorithms (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims in a JWT [JWT].
        items:
          type: string
        type: array
        x-nullable: false
    required:
    - issuer
    - authorization_endpoint
    - token_endpoint
    - jwks_uri
    - subject_types_supported
    - response_types_supported
    - id_token_signing_alg_values_supported
    title: WellKnown response
    type: object
host: localhost:8443
info:
  description: Cloudentity Authorization Control Plane API
  title: Cloudentity Authorization Control Plane API
  version: 1.12.0
paths:
  /{tid}/{aid}/.well-known/jwks.json:
    get:
      description: |-
        This endpoint returns the signing key(s) the client uses to validate
        signatures from the authorization server.
      operationId: jwks
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: ClientJWKs
          schema:
            $ref: '#/definitions/ClientJWKs'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      summary: JSON Web Keys Discovery endpoint
      tags:
      - oauth2
  /{tid}/{aid}/.well-known/openid-configuration:
    get:
      description: Returns OpenID configuration.
      operationId: wellKnown
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: wellKnown
          schema:
            $ref: '#/definitions/wellKnown'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      summary: OpenID Connect Discovery endpoint
      tags:
      - oauth2
  /{tid}/{aid}/backchannel/authentication:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Client-Initiated Backchannel Authentication defines an authentication request that is requested directly from the Client to the OpenID Provider without going through the user's browser.
      operationId: backchannelAuthentication
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: client_id
        type: string
      - in: formData
        name: client_secret
        type: string
      - description: The scope of the access request. Must contain openid scope value.
        in: formData
        name: scope
        type: string
      - description: It is a bearer token provided by the Client that will be used by the OpenID Provider to authenticate the callback request to the Client.
        in: formData
        name: client_notification_token
        type: string
      - description: |-
          Requested Authentication Context Class Reference values.
          A space-separated string that specifies the acr values that the OpenID Provider is being requested to use for processing this Authentication Request, with the values appearing in order of preference
        in: formData
        name: acr_values
        type: string
      - description: A token containing information identifying the end-user for whom authentication is being requested
        in: formData
        name: login_hint_token
        type: string
      - description: An ID Token previously issued to the Client by the OpenID Provider being passed back as a hint to identify the end-user for whom authentication is being requested.
        in: formData
        name: id_token_hint
        type: string
      - description: A hint to the OpenID Provider regarding the end-user for whom authentication is being requested.
        in: formData
        name: login_hint
        type: string
      - description: A human-readable identifier or message intended to be displayed on both the consumption device and the authentication device to interlock them together for the transaction by way of a visual cue for the end-user.
        in: formData
        name: binding_message
        type: string
      - description: A secret code, such as a password or pin, that is known only to the user but verifiable by the OP. The code is used to authorize sending an authentication request to the user's authentication device.
        in: formData
        name: user_code
        type: string
      - description: A positive integer allowing the client to request the expires_in value for the auth_req_id the server will return.
        format: int64
        in: formData
        name: requested_expiry
        type: integer
      - description: client assertion type
        in: formData
        name: client_assertion_type
        type: string
      - description: client assertion
        in: formData
        name: client_assertion
        type: string
      - description: signed authentication request
        in: formData
        name: request
        type: string
      responses:
        "200":
          description: BackchannelAuthenticationResponse
          schema:
            $ref: '#/definitions/BackchannelAuthenticationResponse'
        "400":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      summary: OpenID Connect Client-Initiated Backchannel Authentication Flow endpoint
      tags:
      - oauth2
  /{tid}/{aid}/clients:
    get:
      description: Each client contains list of scopes that user agreed to.
      operationId: listClientsWithAccess
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: ListClientsWithAccess
          schema:
            $ref: '#/definitions/ListClientsWithAccess'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - list_clients_with_access
      summary: List clients that user shared data with
      tags:
      - clients
  /{tid}/{aid}/clients/{cid}:
    delete:
      description: Upon removal client won't be able to use user data anymore.
      operationId: revokeClientAccess
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' Client access has been revoked'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - revoke_client_access
      summary: Revoke client access
      tags:
      - clients
  /{tid}/{aid}/oauth2/authorize:
    get:
      description: |-
        The authorization endpoint is used to interact with the resource
        owner and obtain an authorization grant.
      operationId: authorize
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: query
        name: response_type
        required: true
        type: string
      - in: query
        name: redirect_uri
        type: string
      - in: query
        name: client_id
        required: true
        type: string
      - in: query
        name: scope
        type: string
      - in: query
        name: state
        type: string
      - in: query
        name: nonce
        type: string
      - in: query
        name: code_challenge
        type: string
      - in: query
        name: code_challenge_method
        type: string
      - in: query
        name: request
        type: string
      - in: query
        name: request_uri
        type: string
      - in: query
        name: claims
        type: string
      responses:
        "302":
          description: emptyResponse
          schema:
            $ref: '#/definitions/emptyResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      summary: The OAuth 2.0 authorize endpoint
      tags:
      - oauth2
  /{tid}/{aid}/oauth2/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        The introspection endpoint is an OAuth 2.0 endpoint that takes a
        parameter representing an OAuth 2.0 token and returns a JSON
        document representing the meta information surrounding the
        token, including whether this token is currently active.
      operationId: introspect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectResponse
          schema:
            $ref: '#/definitions/IntrospectResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_tokens
      summary: The OAuth 2.0 Introspection endpoint
      tags:
      - oauth2
  /{tid}/{aid}/oauth2/register:
    post:
      description: The OAuth 2.0 Dynamic Client Registration endpoint
      operationId: dynamicClientRegistration
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/DynamicClientRegistrationRequest'
      responses:
        "201":
          description: DynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/DynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - dcr_register
      tags:
      - oauth2
  /{tid}/{aid}/oauth2/register/{cid}:
    delete:
      description: The OAuth 2.0 Dynamic Client Registration Delete Client endpoint
      operationId: dynamicClientRegistrationDeleteClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      tags:
      - oauth2
    get:
      description: The OAuth 2.0 Dynamic Client Registration Get Client endpoint
      operationId: dynamicClientRegistrationGetClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          description: DynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/DynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      tags:
      - oauth2
    put:
      description: The OAuth 2.0 Dynamic Client Registration Update Client endpoint
      operationId: dynamicClientRegistrationUpdateClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/DynamicClientRegistrationRequest'
      responses:
        "200":
          description: DynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/DynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      tags:
      - oauth2
  /{tid}/{aid}/oauth2/revoke:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Supports revocation of access and refresh tokens.
      operationId: revoke
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: emptyResponse
          schema:
            $ref: '#/definitions/emptyResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - revoke_tokens
      summary: The OAuth 2.0 Revocation endpoint
      tags:
      - oauth2
  /{tid}/{aid}/oauth2/token:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        The token endpoint is used by the client to obtain an access token by
        presenting its authorization grant or refresh token.
      operationId: token
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: grant_type
        required: true
        type: string
      - in: formData
        name: code
        type: string
      - in: formData
        name: scope
        type: string
      - in: formData
        name: redirect_uri
        type: string
      - in: formData
        name: client_id
        type: string
      - in: formData
        name: client_secret
        type: string
      - in: formData
        name: refresh_token
        type: string
      - in: formData
        name: username
        type: string
      - in: formData
        name: password
        type: string
      - in: formData
        name: code_verifier
        type: string
      responses:
        "200":
          description: tokenResponse
          schema:
            $ref: '#/definitions/tokenResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      summary: The OAuth 2.0 token endpoint
      tags:
      - oauth2
  /{tid}/{aid}/open-banking-brasil/open-banking/consents/v1/consents:
    post:
      description: This API allows AISP to create consent to access PSU registration data, information about transactions in their accounts, credit card and contracted credit products
      operationId: CreateDataAccessConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/OBBRCustomerDataAccessConsentRequest'
      responses:
        "201":
          description: OBBRCustomerDataAccessConsentResponse
          schema:
            $ref: '#/definitions/OBBRCustomerDataAccessConsentResponse'
        "400":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "401":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "403":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "405":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "406":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "415":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "422":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "429":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "500":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
      security:
      - defaultcc:
        - consents
      summary: Create data access consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking-brasil/open-banking/consents/v1/consents/{consentID}:
    delete:
      description: This API allows PISP to remove previously created consent
      operationId: DeleteDataAccessConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "204":
          description: OBBRCustomerDataAccessConsentResponse
          schema:
            $ref: '#/definitions/OBBRCustomerDataAccessConsentResponse'
        "400":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "401":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "403":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "405":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "406":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "415":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "422":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "429":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "500":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
      security:
      - defaultcc:
        - consents
      summary: Delete data access consent
      tags:
      - openbanking
    get:
      description: This API allows PISP to retrieve previously created consent
      operationId: GetDataAccessConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: OBBRCustomerDataAccessConsentResponse
          schema:
            $ref: '#/definitions/OBBRCustomerDataAccessConsentResponse'
        "400":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "401":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "403":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "405":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "406":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "415":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "422":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "429":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "500":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
      security:
      - defaultcc:
        - consents
      summary: Get data access consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking-brasil/open-banking/consents/v1/consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking brasil data access consent
      operationId: obbrDataAccessConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOBBRDataAccessConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOBBRDataAccessConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking brasil data access consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking-brasil/open-banking/payments/v1/consents:
    post:
      description: This API allows AISP to create consent to initiate payments between banks and financial institutions
      operationId: CreatePaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/OBBRCustomerPaymentConsentRequest'
      responses:
        "201":
          description: OBBRCustomerPaymentConsentResponse
          schema:
            $ref: '#/definitions/OBBRCustomerPaymentConsentResponse'
        "400":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "401":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "403":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "405":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "406":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "415":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "422":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "429":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "500":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking-brasil/open-banking/payments/v1/consents/{consentID}:
    get:
      description: This API allows PISP to retrieve previously created payment consent
      operationId: GetPaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: OBBRCustomerPaymentConsentResponse
          schema:
            $ref: '#/definitions/OBBRCustomerPaymentConsentResponse'
        "400":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "401":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "403":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "405":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "406":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "415":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "422":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "429":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
        "500":
          description: OBBRErrorResponse
          schema:
            $ref: '#/definitions/OBBRErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking-brasil/open-banking/payments/v1/consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: |-
        This endpoint takes an OAuth 2.0 token and, in addition to returning
        meta information surrounding the token, returns the payment consent and
        associated account ids.
      operationId: obbrPaymentConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOBBRPaymentConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOBBRPaymentConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking brasil payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/aisp/account-access-consents:
    post:
      description: |-
        The API allows the AISP to ask an ASPSP to create a new account-access-consent resource.

        This API effectively allows the AISP to send a copy of the consent to the ASPSP to authorize
        access to account and transaction information.
        An AISP is not able to pre-select a set of accounts for account-access-consent authorisation.
        This is because the behavior of the pre-selected accounts, after authorisation, is not clear from a Legal perspective.
        An ASPSP creates the account-access-consent resource and responds with a unique ConsentId to
        refer to the resource.
        Prior to calling the API, the AISP must have an access token issued by the ASPSP using a client
        credentials grant.
      operationId: createAccountAccessConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/AccountAccessConsentRequest'
      responses:
        "201":
          description: AccountAccessConsentResponse
          schema:
            $ref: '#/definitions/AccountAccessConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - accounts
      summary: Create account access consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/aisp/account-access-consents/{consentID}:
    delete:
      description: Delete account access consent.
      operationId: deleteAccountAccessConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "204":
          description: ' Consent has been deleted'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - accounts
      summary: Delete account access consent
      tags:
      - openbanking
    get:
      description: |-
        An AISP may optionally retrieve an account-access-consent resource that they have created to check its status.

        Prior to calling the API, the AISP must have an access token issued by the ASPSP using a client credentials grant.

        The usage of this API endpoint will be subject to an ASPSP's fair usage policies.
      operationId: getAccountAccessConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: AccountAccessConsentResponse
          schema:
            $ref: '#/definitions/AccountAccessConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - accounts
      summary: Get account access consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/aisp/account-access-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking account access consent.
      operationId: openbankingAccountAccessConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingAccountAccessConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingAccountAccessConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking account access consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new domestic-payment-consent resource.
        The POST action indicates to the ASPSP that a domestic payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the domestic-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the domestic-payment-consent has been created.
      operationId: createDomesticPaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/DomesticPaymentConsentRequest'
      responses:
        "201":
          description: DomesticPaymentConsentResponse
          schema:
            $ref: '#/definitions/DomesticPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create domestic payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-payment-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that they have created to check its status.
      operationId: getDomesticPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: DomesticPaymentConsentResponse
          schema:
            $ref: '#/definitions/DomesticPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get domestic payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking domestic payment consent.
      operationId: openbankingDomesticPaymentConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingDomesticPaymentConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingDomesticPaymentConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking domestic payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new domestic-scheduled-payment-consent resource.
        The POST action indicates to the ASPSP that a domestic scheduled payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the domestic-scheduled-payment-consent resource and responds with a unique ConsentId to refer to the resource.
        ALPHA_FEATURE
        The default Status is "AwaitingAuthorisation" immediately after the domestic-scheduled-payment-consent has been created.
      operationId: createDomesticScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/DomesticScheduledPaymentConsentRequest'
      responses:
        "201":
          description: DomesticScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/DomesticScheduledPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create domestic scheduled payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}:
    get:
      description: |-
        A PISP can optionally retrieve a payment consent resource that they have created to check its status.
        Once the PSU authorizes the payment-consent resource, the Status of the payment-consent resource will be updated with "Authorised".
        If the PSU rejects the consent or the domestic-scheduled-payment-consent has failed some other ASPSP validation, the Status will be set to "Rejected".
        Once a domestic-scheduled-payment has been successfully created using the domestic-scheduled-payment-consent, the Status of the domestic-scheduled-payment-consent will be set to "Consumed".
        ALPHA_FEATURE
      operationId: getDomesticScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: DomesticScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/DomesticScheduledPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get domestic scheduled payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking domestic scheduled payment consent.
      operationId: openbankingDomesticScheduledPaymentConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingDomesticScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingDomesticScheduledPaymentConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking domestic scheduled payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-standing-order-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new domestic-standing-order-consent resource.
        The POST action indicates to the ASPSP that a domestic standing order consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the domestic-standing-order-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the domestic-standing-order-consent has been created.
      operationId: createDomesticStandingOrderConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/DomesticStandingOrderConsentRequest'
      responses:
        "201":
          description: DomesticStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/DomesticStandingOrderConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create standing order consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-standing-order-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that they have created to check its status.
      operationId: getDomesticStandingOrderConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: DomesticStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/DomesticStandingOrderConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get domestic payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/domestic-standing-order-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking domestic standing order consent
      operationId: openbankingDomesticStandingOrderConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingDomesticStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingDomesticStandingOrderConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new file-payment-consent resource.
        The POST action indicates to the ASPSP that a domestic standing order consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the file-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingUpload" immediately after the file-payment-consent has been created.
      operationId: createFilePaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/FilePaymentConsentRequest'
      responses:
        "201":
          description: FilePaymentConsentResponse
          schema:
            $ref: '#/definitions/FilePaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create standing order consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that they have created to check its status.
      operationId: getFilePaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: FilePaymentConsentResponse
          schema:
            $ref: '#/definitions/FilePaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get file payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}/file:
    get:
      description: The API endpoint allows the PISP to download a file (that had been uploaded against a file-payment-consent resource) from an ASPSP.
      operationId: getFilePaymentConsentFileRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: FilePaymentConsentFileResponse
          schema:
            $ref: '#/definitions/FilePaymentConsentFileResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get uploaded file for file payment consent
      tags:
      - openbanking
    post:
      description: |-
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize. The PISP must upload the file against the ConsentId before redirecting the PSU to authorize the consent.
        The file structure must match the FileType in the file-payment-consent request.
        An ASPSP must confirm the hash of the file matches with the FileHash provided in the file-payment-consent Metadata.
        The metadata for the file-payment-consent must match the contents of the uploaded file:
        If the content of the metadata does not match the content of the file, the ASPSP must reject the file-payment-consent.
        The file is sent in the HTTP request body.
        HTTP headers (e.g. Content-Type) are used to describe the file.

        The default Status is "AwaitingAuthorisation" immediately after the file has been created.
      operationId: createFilePaymentConsentFile
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/FilePaymentConsentFileRequest'
      responses:
        "200":
          description: ' file created'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Upload file for file payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking file payment consent
      operationId: openbankingFilePaymentConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingFilePaymentConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingFilePaymentConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new international-payment-consent resource.
        The POST action indicates to the ASPSP that a international payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the international-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the international-payment-consent has been created.
      operationId: createInternationalPaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/InternationalPaymentConsentRequest'
      responses:
        "201":
          description: InternationalPaymentConsentResponse
          schema:
            $ref: '#/definitions/InternationalPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create international payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that they have created to check its status.
      operationId: getInternationalPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: InternationalPaymentConsentResponse
          schema:
            $ref: '#/definitions/InternationalPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get international payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking international payment consent.
      operationId: openbankingInternationalPaymentConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingInternationalPaymentConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingInternationalPaymentConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking international payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-scheduled-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new international-scheduled-payment-consent resource.
        The POST action indicates to the ASPSP that a international scheduled payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the international-scheduled-payment-consent resource and responds with a unique ConsentId to refer to the resource.
        ALPHA_FEATURE
        The default Status is "AwaitingAuthorisation" immediately after the international-scheduled-payment-consent has been created.
      operationId: createInternationalScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/InternationalScheduledPaymentConsentRequest'
      responses:
        "201":
          description: InternationalScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/InternationalScheduledPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create international scheduled payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-scheduled-payment-consents/{consentID}:
    get:
      description: |-
        A PISP can optionally retrieve a payment consent resource that they have created to check its status.
        Once the PSU authorizes the payment-consent resource, the Status of the payment-consent resource will be updated with "Authorised".
        If the PSU rejects the consent or the international-scheduled-payment-consent has failed some other ASPSP validation, the Status will be set to "Rejected".
        Once a international-scheduled-payment has been successfully created using the international-scheduled-payment-consent, the Status of the international-scheduled-payment-consent will be set to "Consumed".
        ALPHA_FEATURE
      operationId: getInternationalScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: InternationalScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/InternationalScheduledPaymentConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get international scheduled payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-scheduled-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking international scheduled payment consent
      operationId: openbankingInternationalScheduledPaymentConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingInternationalScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingInternationalScheduledPaymentConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-standing-order-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new international-standing-order-consent resource.
        The POST action indicates to the ASPSP that a international standing order consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the international-standing-order-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the international-standing-order-consent has been created.
      operationId: createInternationalStandingOrderConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/InternationalStandingOrderConsentRequest'
      responses:
        "201":
          description: InternationalStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/InternationalStandingOrderConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create standing order consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-standing-order-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that they have created to check its status.
      operationId: getInternationalStandingOrderConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - default: default
        description: Tenant ID
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server ID
        in: path
        name: aid
        required: true
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: InternationalStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/InternationalStandingOrderConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get international payment consent
      tags:
      - openbanking
  /{tid}/{aid}/open-banking/v3.1/pisp/international-standing-order-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking international standing order consent
      operationId: openbankingInternationalStandingOrderConsentIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectOpenbankingInternationalStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingInternationalStandingOrderConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      tags:
      - openbanking
  /{tid}/{aid}/openbankinguk/dcr/v3.2/register:
    post:
      consumes:
      - application/jose
      description: |-
        This endpoint can be used to dynamically register new clients.
        Request body must be signed.
        Please take a look at reference to see what fields are required:
        https://openbankinguk.github.io/dcr-docs-pub/v3.2/dynamic-client-registration.html
        Consider adding client credentials grant type to a client to be able to modify it later on.
      operationId: dynamicClientRegistrationOpenbankingUK
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationRequest'
      responses:
        "201":
          description: OpenbankingUKDynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic client registration endpoint.
      tags:
      - oauth2
  /{tid}/{aid}/openbankinguk/dcr/v3.2/register/{cid}:
    delete:
      description: |-
        This endpoint can be used to delete registered client details.
        Use client credentials flow to authorize to this api.
      operationId: dynamicClientRegistrationOpenbankingUKDeleteClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic delete client endpoint.
      tags:
      - oauth2
    get:
      description: |-
        This endpoint can be used to get registered client details.
        Use client credentials flow to authorize to this api.
      operationId: dynamicClientRegistrationOpenbankingUKGetClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          description: OpenbankingUKDynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic get client endpoint.
      tags:
      - oauth2
    put:
      consumes:
      - application/jose
      description: |-
        This endpoint can be used to update registered client details.
        Use client credentials flow to authorize to this api.
      operationId: dynamicClientRegistrationOpenbankingUKUpdateClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationRequest'
      responses:
        "200":
          description: OpenbankingUKDynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic update client endpoint.
      tags:
      - oauth2
  /{tid}/{aid}/privacy/consents:
    get:
      description: If you want to list only specific consents, provide consent identifiers in query params.
      operationId: listUserConsents
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: optional identifiers of consents to be returned
        in: query
        items:
          type: string
        name: consent_id
        type: array
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - view_consents
      summary: List consents
      tags:
      - consents
    patch:
      description: |-
        This is a non-standardized PATCH request.

        Allows to update multiple consents approval in one API call.

        See ConsentGrantPatchRequest object for more information.
      operationId: patchConsentGrants
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: ConsentGrantPatchRequest
        schema:
          $ref: '#/definitions/ConsentGrantPatchRequest'
      responses:
        "201":
          description: ConsentGrantPatchResponse
          schema:
            $ref: '#/definitions/ConsentGrantPatchResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - manage_consents
      summary: Patch consent grants
      tags:
      - consents
  /{tid}/{aid}/privacy/consents/{action}:
    get:
      description: |-
        Returns any possible required consents that the app should ask the User about.

        The response includes a list of consents (including the ones user already agreed to).
        Inclusion of the consents which the user already agreed to can be used to inform the user what he already agreed to.
      operationId: listUserConsentsByAction
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Consent action id
        in: path
        name: action
        required: true
        type: string
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - view_consents
      summary: List consents by action
      tags:
      - consents
  /{tid}/{aid}/privacy/consents/grant:
    post:
      description: |-
        Consent id must be provided in the request body.

        When a user grants consent which was already granted, it does not result in an error but it silently skipped instead.
      operationId: grantConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: ConsentGrant
        schema:
          $ref: '#/definitions/ConsentGrantRequest'
      responses:
        "201":
          description: ConsentGrant
          schema:
            $ref: '#/definitions/ConsentGrant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - manage_consents
      summary: Grant privacy consent
      tags:
      - consents
  /{tid}/{aid}/privacy/consents/revoke:
    post:
      description: |-
        This API can be used to withdraw a consent which user previously gave.

        Consent id must be provided in the request body.

        When consent has the can_be_withdrawn flag set to false the API fails with an error saying that the consent cannot be revoked.
        This flag is useful for scenarios in which the application cannot function without the consent from a User.
      operationId: revokeConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: ConsentGrant
        schema:
          $ref: '#/definitions/ConsentGrantRequest'
      responses:
        "200":
          description: ConsentGrant
          schema:
            $ref: '#/definitions/ConsentGrant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - manage_consents
      summary: Revoke privacy consent
      tags:
      - consents
  /{tid}/{aid}/privacy/events:
    get:
      description: It is possible to provide time constraints using from and to query params.
      operationId: listPrivacyLedgerEvents
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: Query events from timestamp (default 0)
        format: int64
        in: query
        name: from
        type: integer
      - description: Query events to timestamp (default current time)
        format: int64
        in: query
        name: to
        type: integer
      responses:
        "200":
          description: PrivacyLedgerEvents
          schema:
            $ref: '#/definitions/PrivacyLedgerEvents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - default:
        - view_consents
      summary: List privacy ledger events
      tags:
      - consents
  /{tid}/{aid}/userinfo:
    get:
      description: |-
        The UserInfo Endpoint is an OAuth 2.0 Protected Resource that
        returns Claims about the authenticated End-User. To obtain the requested
        Claims about the End-User, the Client makes a request to the UserInfo Endpoint
        using an Access Token obtained through OpenID Connect Authentication. These Claims
        are represented by a JSON object that contains a collection of name and value
        pairs for the Claims.
      operationId: userinfo
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: userinfoResponse
          schema:
            $ref: '#/definitions/userinfoResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
      security:
      - default: []
      summary: OpenID Connect Userinfo endpoint
      tags:
      - oauth2
  /{tid}/styling:
    get:
      operationId: getStyling
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: Styling
          schema:
            $ref: '#/definitions/Styling'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      summary: Get styling for a tenant.
      tags:
      - web
  /api/admin/{tid}/actions:
    get:
      description: List consent actions.
      operationId: listConsentActions
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: ConsentActions
          schema:
            $ref: '#/definitions/ConsentActions'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List consent actions
      tags:
      - consents
    post:
      description: |-
        Consent action allows to group list of consents. A Tenant Application asking for the consent it can
        ask for +by the action name+ instead of asking for a list of consents directly. It allows for cleaner
        abstraction and adds the ability to dynamically configure the consents required for particular applications.

        ID and Name are required fields.

        For each consent provide id and specify if it is required.
      operationId: createConsentAction
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: ConsentAction
        required: true
        schema:
          $ref: '#/definitions/ConsentActionWithConsents'
      responses:
        "201":
          description: ConsentActionWithConsents
          schema:
            $ref: '#/definitions/ConsentActionWithConsents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create consent action
      tags:
      - consents
  /api/admin/{tid}/actions/{action}:
    delete:
      description: Delete consent action.
      operationId: deleteConsentAction
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: action
        required: true
        type: string
      responses:
        "204":
          description: ' ConsentAction has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete consent action
      tags:
      - consents
    get:
      description: Get consent action with consents.
      operationId: getConsentAction
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: action
        required: true
        type: string
      responses:
        "200":
          description: ConsentActionWithConsents
          schema:
            $ref: '#/definitions/ConsentActionWithConsents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get consent action with consents
      tags:
      - consents
    put:
      description: Update consent action.
      operationId: updateConsentAction
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: action
        required: true
        type: string
      - in: body
        name: ConsentAction
        schema:
          $ref: '#/definitions/ConsentActionWithConsents'
      responses:
        "201":
          description: ConsentActionWithConsents
          schema:
            $ref: '#/definitions/ConsentActionWithConsents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update consent action
      tags:
      - consents
  /api/admin/{tid}/apis:
    post:
      description: It is not possible to create APIs for a service with imported specification.
      operationId: createAPI
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - description: APIBody
        in: body
        name: APIBody
        schema:
          $ref: '#/definitions/API'
      responses:
        "201":
          description: API
          schema:
            $ref: '#/definitions/API'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create API
      tags:
      - apis
  /api/admin/{tid}/apis/{api}:
    delete:
      description: |-
        If this API was created by import specification operation then
        it is not possible to delete it.
      operationId: deleteAPI
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: api
        required: true
        type: string
      responses:
        "204":
          description: ' API has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete API
      tags:
      - apis
    get:
      description: Get API.
      operationId: getAPI
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: api
        required: true
        type: string
      responses:
        "200":
          description: API
          schema:
            $ref: '#/definitions/API'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get API
      tags:
      - apis
    put:
      description: Update API.
      operationId: updateAPI
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - description: API ID
        in: path
        name: api
        required: true
        type: string
      - description: APIBody
        in: body
        name: APIBody
        schema:
          $ref: '#/definitions/UpdateAPIRequest'
      responses:
        "200":
          description: API
          schema:
            $ref: '#/definitions/API'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update API
      tags:
      - apis
  /api/admin/{tid}/claims:
    post:
      description: |-
        Claim allows to add custom attribute to outgoing id / access token.

        Authorization Server, Name, Mapping and Type are required fields.

        ID if not provided will be generated.
      operationId: createClaim
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Claim
        schema:
          $ref: '#/definitions/Claim'
      responses:
        "201":
          description: Claim
          schema:
            $ref: '#/definitions/Claim'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create claim
      tags:
      - claims
  /api/admin/{tid}/claims/{claim}:
    delete:
      description: Delete claim.
      operationId: deleteClaim
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: claim
        required: true
        type: string
      responses:
        "204":
          description: ' Claim has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete claim
      tags:
      - claims
    put:
      description: Update claim.
      operationId: updateClaim
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: claim
        required: true
        type: string
      - in: body
        name: UpdateClaimBody
        schema:
          $ref: '#/definitions/Claim'
      responses:
        "200":
          description: Claim
          schema:
            $ref: '#/definitions/Claim'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update claim
      tags:
      - claims
  /api/admin/{tid}/clients:
    post:
      description: |-
        Client must be created under existing tenant and authorization server.

        Authorization server id must be provided in the request body.

        Client id and secret can be provided, otherwise are generated.

        If grant type is not set, client will get authorization code grant type assigned with code as response type.

        Default token authentication method is client_secret_basic.
      operationId: createClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/CreateClientAdminRequest'
      responses:
        "201":
          description: ClientAdminResponse
          schema:
            $ref: '#/definitions/ClientAdminResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create new OAuth client
      tags:
      - clients
  /api/admin/{tid}/clients/{cid}:
    delete:
      description: Delete client.
      operationId: deleteClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete client
      tags:
      - clients
    get:
      description: If client has been created by a developer, client's secret will be empty.
      operationId: getClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          description: ClientAdminResponse
          schema:
            $ref: '#/definitions/ClientAdminResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get client.
      tags:
      - clients
    put:
      description: |-
        Update client.

        For clients created by developers only metadata, system and trusted attributes
        can be updated.
      operationId: updateClient
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/UpdateClientAdminRequest'
      responses:
        "200":
          description: ClientAdminResponse
          schema:
            $ref: '#/definitions/ClientAdminResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update client
      tags:
      - clients
  /api/admin/{tid}/clients/{cid}/revokeRotatedSecrets:
    post:
      description: Revoke all rotated client's secrets.
      operationId: revokeRotatedClientSecrets
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' all client''s rotated secrets has been revoked'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Revoke rotated secrets.
      tags:
      - clients
  /api/admin/{tid}/clients/{cid}/rotateSecret:
    post:
      description: |-
        Generate a new client secret, move old secret to rotated secrets list and return
        new client secret as a response. The max number of client rotated secrets is 2.
        The rotated secrets over the limit are dropped.
      operationId: rotateClientSecret
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          description: RotateClientSecretResponse
          schema:
            $ref: '#/definitions/RotateClientSecretResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Rotate client's secret.
      tags:
      - clients
  /api/admin/{tid}/consents:
    get:
      description: List consents.
      operationId: listConsents
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: Consents
          schema:
            $ref: '#/definitions/Consents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List consents
      tags:
      - consents
    post:
      description: |-
        Consents are created per tenant.

        ID, Name and UpdateExistingGrants strategy are required fields when creating a new consent.

        UpdateExistingGrants has the following options:

        explicitAll - all the existing grants should not be updated. It is required that the user grants the consent explicitly.

        implicitAll - all previously existing consent grants should be updated, to the new version of the consent, but
        all of those grants should be implicit from the moment on.

        keepCurrent - if a previously existing consent grant was set implicitly, it is automatically updated and a new
        consent grant is produced, which is also implicit. if a previously existing consent grant was set
        explicitly, it should not be updated. It is required that the user grants the consent explicitly.
      operationId: createConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Consent
        required: true
        schema:
          $ref: '#/definitions/Consent'
      responses:
        "201":
          description: Consent
          schema:
            $ref: '#/definitions/Consent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create consent
      tags:
      - consents
  /api/admin/{tid}/consents/{consent}:
    delete:
      description: Delete consent.
      operationId: deleteConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: consent
        required: true
        type: string
      responses:
        "204":
          description: ' Consent has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete consent
      tags:
      - consents
    get:
      description: Get consent details.
      operationId: getConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: consent
        required: true
        type: string
      responses:
        "200":
          description: Consent
          schema:
            $ref: '#/definitions/Consent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get consent details
      tags:
      - consents
    put:
      description: |-
        Every time consent is updated, its version is incremented.

        If ValidFrom attribute is not provided it will be set to current time.
      operationId: updateConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: consent
        required: true
        type: string
      - in: body
        name: ConsentBody
        schema:
          $ref: '#/definitions/Consent'
      responses:
        "201":
          description: Consent
          schema:
            $ref: '#/definitions/Consent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update consent
      tags:
      - consents
  /api/admin/{tid}/environment:
    get:
      description: Get environment settings.
      operationId: getEnvironment
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: Environment
          schema:
            $ref: '#/definitions/Environment'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get environment
      tags:
      - environment
  /api/admin/{tid}/events:
    get:
      description: List privacy ledger events.
      operationId: listPrivacyLedgerEventsBySubject
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - description: Subject
        format: subject
        in: query
        name: sub
        type: string
      - description: Query events from timestamp (default 0)
        format: int64
        in: query
        name: from
        type: integer
      - description: Query events to timestamp (default current time)
        format: int64
        in: query
        name: to
        type: integer
      responses:
        "200":
          description: PrivacyLedgerEvents
          schema:
            $ref: '#/definitions/PrivacyLedgerEvents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List privacy ledger events
      tags:
      - consents
  /api/admin/{tid}/gateways:
    post:
      description: Create gateway.
      operationId: createGateway
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Gateway
        schema:
          $ref: '#/definitions/CreateGatewayRequest'
      responses:
        "201":
          description: GatewayWithClient
          schema:
            $ref: '#/definitions/GatewayWithClient'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create gateway
      tags:
      - gateways
  /api/admin/{tid}/gateways/{gw}:
    delete:
      description: This removes configuration for all services connected to this gateway.
      operationId: deleteGateway
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: gw
        required: true
        type: string
      responses:
        "204":
          description: ' Gateway has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete gateway
      tags:
      - gateways
    get:
      description: Get gateway.
      operationId: getGateway
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Gateway id
        in: path
        name: gw
        required: true
        type: string
      responses:
        "200":
          description: GatewayWithClient
          schema:
            $ref: '#/definitions/GatewayWithClient'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get gateway
      tags:
      - gateways
    put:
      description: Update gateway.
      operationId: updateGateway
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: gw
        required: true
        type: string
      - in: body
        name: UpdateGatewayBody
        schema:
          $ref: '#/definitions/UpdateGatewayRequest'
      responses:
        "200":
          description: Gateway
          schema:
            $ref: '#/definitions/Gateway'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update gateway
      tags:
      - gateways
  /api/admin/{tid}/gateways/{gw}/groups:
    get:
      description: List gateway api groups.
      operationId: listGatewayAPIGroups
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - description: Gateway id
        in: path
        name: gw
        required: true
        type: string
      responses:
        "200":
          description: GatewayAPIGroups
          schema:
            $ref: '#/definitions/GatewayAPIGroups'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List gateway api groups
      tags:
      - gateways
  /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind:
    post:
      description: |-
        It unbinds service first, if it is already connected to an api group.

        It removes specification from a service, if it has specification imported already.

        It removes any APIs added manually to a service, if it contains any.
      operationId: bindGroupToService
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: gw
        required: true
        type: string
      - in: path
        name: apiGroup
        required: true
        type: string
      - in: body
        name: BindGroupToServiceRequest
        schema:
          $ref: '#/definitions/BindGroupToServiceRequest'
      responses:
        "200":
          description: BindGroupToServiceResponse
          schema:
            $ref: '#/definitions/BindGroupToServiceResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Bind a group to a service
      tags:
      - gateways
  /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind:
    delete:
      description: |-
        Remove all apis and policies.

        If policy is used by another service it will not be removed.

        If service is connected to a gateway, it will be disconnected.

        If a gateway api group is connected to this service, it will be disconnected.
      operationId: unbindGroupFromService
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: gw
        required: true
        type: string
      - in: path
        name: apiGroup
        required: true
        type: string
      responses:
        "200":
          description: UnbindGroupFromServiceResponse
          schema:
            $ref: '#/definitions/UnbindGroupFromServiceResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Unbind a group from a service
      tags:
      - gateways
  /api/admin/{tid}/gateways/{gw}/package:
    get:
      description: Get package for a gateway.
      operationId: getGatewayPackage
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Gateway id
        in: path
        name: gw
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Gateway package
          schema:
            type: file
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get package for a gateway
      tags:
      - gateways
  /api/admin/{tid}/policies:
    post:
      description: |-
        ACP supports creating Cloudentity policies (using a visual editor or defined using JSON or
        YAML) and policies defined using REGO (language used by Open Policy Agent (OPA)).

        In ACP, policies are created per tenant. It means that is not possible to create policies with
        the same ID in two different workspaces within the same tenant. Additionally, when a policy is
        created, a workspace prefix is added to your policy name on the UI side. It is not possible to
        reuse policies between different authorization servers.


        Sample validators which can be used to build policies: identity-context, consent, header, true, false.
      operationId: createPolicy
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Policy
        schema:
          $ref: '#/definitions/Policy'
      responses:
        "201":
          description: Policy
          schema:
            $ref: '#/definitions/Policy'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create policy
      tags:
      - policies
  /api/admin/{tid}/policies/{pid}:
    delete:
      description: It is not possible to delete policies that are currently in use.
      operationId: deletePolicy
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: pid
        required: true
        type: string
      responses:
        "204":
          description: ' Policy has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete policy
      tags:
      - policies
    get:
      description: Returns a policy and it's definition.
      operationId: getPolicy
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - description: ID of your policy
        in: path
        name: pid
        required: true
        type: string
      responses:
        "200":
          description: Policy
          schema:
            $ref: '#/definitions/Policy'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get policy
      tags:
      - policies
    put:
      description: Update existing authorization policies.
      operationId: updatePolicy
      parameters:
      - default: default
        description: ID of your tenant
        in: path
        name: tid
        required: true
        type: string
      - description: ID of the policy to be updated
        in: path
        name: pid
        required: true
        type: string
      - in: body
        name: PolicyBody
        schema:
          $ref: '#/definitions/Policy'
      responses:
        "201":
          description: Policy
          schema:
            $ref: '#/definitions/Policy'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update policy
      tags:
      - policies
  /api/admin/{tid}/policies/test:
    post:
      description: |-
        You can test a policy and check if it works correctly using this endpoint. Provide your mock input and
        pass it as the value of the `input` parameter. Define your policy. Then, fire a request to the
        test policy endpoint. By doing so, you can test if a policy would fail or pass for a given request.
      operationId: testPolicy
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: TestPolicyRequest
        schema:
          $ref: '#/definitions/TestPolicyRequest'
      responses:
        "200":
          description: TestPolicyResponse
          schema:
            $ref: '#/definitions/TestPolicyResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Test policy
      tags:
      - policies
  /api/admin/{tid}/scopes:
    post:
      description: |-
        Scope name is required. If scope id is not provided, will be generated.
        If you want to assign scope to a service, provide service id.
      operationId: createScope
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: ScopeWithService
        schema:
          $ref: '#/definitions/ScopeWithServiceID'
      responses:
        "201":
          description: Scope
          schema:
            $ref: '#/definitions/Scope'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create scope
      tags:
      - scopes
  /api/admin/{tid}/scopes/{scp}:
    delete:
      description: Delete scope.
      operationId: deleteScope
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: scp
        required: true
        type: string
      responses:
        "204":
          description: ' Scope has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete scope
      tags:
      - scopes
    get:
      description: Get scope.
      operationId: getScope
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: scp
        required: true
        type: string
      responses:
        "200":
          description: ScopeWithService
          schema:
            $ref: '#/definitions/ScopeWithService'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get scope
      tags:
      - scopes
    put:
      description: Update scope.
      operationId: updateScope
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: scp
        required: true
        type: string
      - in: body
        name: Scope
        schema:
          $ref: '#/definitions/Scope'
      responses:
        "200":
          description: Scope
          schema:
            $ref: '#/definitions/Scope'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update scope
      tags:
      - scopes
  /api/admin/{tid}/servers:
    get:
      description: List authorization servers.
      operationId: listAuthorizationServers
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: Servers
          schema:
            $ref: '#/definitions/Servers'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List authorization servers
      tags:
      - servers
    post:
      description: |-
        Multiple authorization servers with unique id can be created within a tenant.
        If id and secret are not provided, will be generated.
        Secret if provided must have at least 32 characters.

        You can set what grant types will be supported by authorization server. The defaults are:
        `{"grant_types": ["authorization_code", "implicit", "client_credentials", "refresh_token"]}`

        If jwks keys are not provided explicitly, will be generated based on provided `key_type` algorithm (rsa by default).

        TTLs for tokens and authorization code can be customized. The defaults are:

        `authorization_code_ttl` - 10 minutes
        `access_token_ttl` - 1 hour
        `id_token_ttl` - 1 hour
        `refresh_token_ttl` - 30 days

        If you want to enable dynamic client registration set `{"enable_dynamic_client_registration": true}`.

        If you want to create FAPI read write compliant server set: `{"profiles"": ["fapi_rw"]}`.

        If you want to enforce PKCE set `{"enforce_pkce": true}`.
      operationId: createAuthorizationServer
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Server
        schema:
          $ref: '#/definitions/Server'
      - description: With demo client
        in: query
        name: with_demo_client
        type: boolean
      responses:
        "201":
          description: Server
          schema:
            $ref: '#/definitions/Server'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create authorization server
      tags:
      - servers
  /api/admin/{tid}/servers-bindings:
    get:
      description: List servers bindings.
      operationId: listServersBindings
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: ServersBindings
          schema:
            $ref: '#/definitions/ServersBindings'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List servers bindings
      tags:
      - servers
  /api/admin/{tid}/servers/{aid}:
    delete:
      description: Delete authorization server.
      operationId: deleteAuthorizationServer
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "204":
          description: ' Authorization server has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete authorization server
      tags:
      - servers
    get:
      description: Get authorization server.
      operationId: getAuthorizationServer
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: Server
          schema:
            $ref: '#/definitions/Server'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get authorization server
      tags:
      - servers
    put:
      description: Update authorization server.
      operationId: updateAuthorizationServer
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: Server
        schema:
          $ref: '#/definitions/Server'
      responses:
        "200":
          description: Server
          schema:
            $ref: '#/definitions/Server'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update authorization server
      tags:
      - servers
  /api/admin/{tid}/servers/{aid}/apis:
    get:
      description: List APIs.
      operationId: listAPIsByServer
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server id
        in: path
        name: aid
        required: true
        type: string
      - description: List apis that have no data classifications
        in: query
        name: without_data_classifications
        type: boolean
      - description: List apis that have given data classifications
        in: query
        items:
          type: string
        name: data_classification
        type: array
      responses:
        "200":
          description: ServerAPIs
          schema:
            $ref: '#/definitions/ServerAPIs'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List APIs
      tags:
      - apis
  /api/admin/{tid}/servers/{aid}/bind/{rid}:
    post:
      description: Bind server.
      operationId: bindServer
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Dependent server id
        in: path
        name: rid
        required: true
        type: string
      responses:
        "200":
          description: ServerToServer
          schema:
            $ref: '#/definitions/ServerToServer'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Bind server
      tags:
      - servers
  /api/admin/{tid}/servers/{aid}/claims:
    get:
      description: List claims.
      operationId: listClaims
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: Claims
          schema:
            $ref: '#/definitions/Claims'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List claims
      tags:
      - claims
  /api/admin/{tid}/servers/{aid}/clients:
    get:
      description: Returns clients created by admins and developers. If client has been created by a developer, client secret will be empty.
      operationId: listClients
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: |-
          Optional search phrase: client id OR client name substring
          SearchPhrase
        in: query
        name: search_phrase
        type: string
      - description: |-
          Optional type, one of: internal, third_party
          Type
        in: query
        name: type
        type: string
      - description: |-
          Optional application types
          ApplicationTypes
        in: query
        name: application_types
        type: string
      - description: |-
          optional list clients after given id
          AfterClientID
        in: query
        name: after_client_id
        type: string
      - description: |-
          optional list clients before given id
          BeforeClientID
        in: query
        name: before_client_id
        type: string
      - description: |-
          optional sort clients by given field
          Sort
        in: query
        name: sort
        type: string
      - description: |-
          optional order clients by given direction
          Order
        in: query
        name: order
        type: string
      - default: 20
        description: |-
          optional limit results
          Limit
        format: int64
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: ClientsForAdmin
          schema:
            $ref: '#/definitions/ClientsForAdmin'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List clients
      tags:
      - clients
  /api/admin/{tid}/servers/{aid}/dashboards:
    get:
      description: List links to dashboards.
      operationId: listDashboards
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: Dashboards
          schema:
            $ref: '#/definitions/Dashboards'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List links to dashboards
      tags:
      - servers
  /api/admin/{tid}/servers/{aid}/gateways:
    get:
      description: List gateways.
      operationId: listGateways
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: Gateways
          schema:
            $ref: '#/definitions/Gateways'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List gateways
      tags:
      - gateways
  /api/admin/{tid}/servers/{aid}/idps:
    get:
      description: Returns a list of IDPs connected to a given authorization server (workspace)
      operationId: listIDPs
      parameters:
      - default: default
        description: ID of your tenant
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: ID of your authorization server (workspace)
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: IDPsResponse
          schema:
            $ref: '#/definitions/IDPsResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/{iid}:
    delete:
      description: |-
        Deletes an IDP of your choice

        Deleting an IDP is permament. Deleted IDPs cannot be restored.

        It is impossible to delete an IDP with which you are currently logged in.
      operationId: deleteIDP
      parameters:
      - default: default
        description: ID of your tenant
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: ID of your authorization server (workspace)
        in: path
        name: aid
        required: true
        type: string
      - description: ID of the IDP you wish to delete
        in: path
        name: iid
        required: true
        type: string
      responses:
        "204":
          description: ' IDP has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/azure:
    post:
      description: Create Azure IDP.
      operationId: createAzureIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: AzureIDP
        in: body
        name: AzureIDP
        schema:
          $ref: '#/definitions/AzureIDP'
      responses:
        "201":
          description: AzureIDP
          schema:
            $ref: '#/definitions/AzureIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create Azure IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/azure/{iid}:
    get:
      description: Get Azure IDP.
      operationId: getAzureIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: AzureIDP
          schema:
            $ref: '#/definitions/AzureIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get Azure IDP
      tags:
      - idps
    put:
      description: Update Azure IDP.
      operationId: updateAzureIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: AzureIDP
        in: body
        name: AzureIDP
        schema:
          $ref: '#/definitions/AzureIDP'
      responses:
        "200":
          description: AzureIDP
          schema:
            $ref: '#/definitions/AzureIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update Azure IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/azureb2c:
    post:
      description: Create AzureB2C IDP.
      operationId: createAzureB2CIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: AzureB2CIDP
        in: body
        name: AzureB2CIDP
        schema:
          $ref: '#/definitions/AzureB2CIDP'
      responses:
        "201":
          description: AzureB2CIDP
          schema:
            $ref: '#/definitions/AzureB2CIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create AzureB2C IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/azureb2c/{iid}:
    get:
      description: Get AzureB2C IDP.
      operationId: getAzureB2CIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: AzureB2CIDP
          schema:
            $ref: '#/definitions/AzureB2CIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get AzureB2C IDP
      tags:
      - idps
    put:
      description: Update AzureB2C IDP.
      operationId: updateAzureB2CIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: AzureB2CIDP
        in: body
        name: AzureB2CIDP
        schema:
          $ref: '#/definitions/AzureB2CIDP'
      responses:
        "200":
          description: AzureB2CIDP
          schema:
            $ref: '#/definitions/AzureB2CIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update AzureB2C IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/cognito:
    post:
      description: Create Cognito IDP.
      operationId: createCognitoIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: CognitoIDP
        in: body
        name: CognitoIDP
        schema:
          $ref: '#/definitions/CognitoIDP'
      responses:
        "201":
          description: CognitoIDP
          schema:
            $ref: '#/definitions/CognitoIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create Cognito IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}:
    get:
      description: Get Cognito IDP.
      operationId: getCognitoIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: CognitoIDP
          schema:
            $ref: '#/definitions/CognitoIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get Cognito IDP
      tags:
      - idps
    put:
      description: Update Cognito IDP.
      operationId: updateCognitoIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: CognitoIDP
        in: body
        name: CognitoIDP
        schema:
          $ref: '#/definitions/CognitoIDP'
      responses:
        "200":
          description: CognitoIDP
          schema:
            $ref: '#/definitions/CognitoIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update Cognito IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/custom:
    post:
      description: Create Custom IDP.
      operationId: createCustomIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: CustomIDP
        in: body
        name: CustomIDP
        schema:
          $ref: '#/definitions/CustomIDP'
      responses:
        "201":
          description: CustomIDP
          schema:
            $ref: '#/definitions/CustomIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create Custom IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/custom/{iid}:
    get:
      description: Get Custom IDP.
      operationId: getCustomIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: CustomIDP
          schema:
            $ref: '#/definitions/CustomIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get Custom IDP
      tags:
      - idps
    put:
      description: Update Custom IDP.
      operationId: updateCustomIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: CustomIDP
        in: body
        name: CustomIDP
        schema:
          $ref: '#/definitions/CustomIDP'
      responses:
        "200":
          description: CustomIDP
          schema:
            $ref: '#/definitions/CustomIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update Custom IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/github:
    post:
      description: Create Github IDP.
      operationId: createGithubIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: GithubIDP
        in: body
        name: GithubIDP
        schema:
          $ref: '#/definitions/GithubIDP'
      responses:
        "201":
          description: GithubIDP
          schema:
            $ref: '#/definitions/GithubIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create Github IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/github/{iid}:
    get:
      description: Get Github IDP.
      operationId: getGithubIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: GithubIDP
          schema:
            $ref: '#/definitions/GithubIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get Github IDP
      tags:
      - idps
    put:
      description: Update Github IDP.
      operationId: updateGithubIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: GithubIDP
        in: body
        name: GithubIDP
        schema:
          $ref: '#/definitions/GithubIDP'
      responses:
        "200":
          description: GithubIDP
          schema:
            $ref: '#/definitions/GithubIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update Github IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/intelli_trust:
    post:
      description: Create IntelliTrust IDP.
      operationId: createIntelliTrustIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IntelliTrustIDP
        in: body
        name: IntelliTrustIDP
        schema:
          $ref: '#/definitions/IntelliTrustIDP'
      responses:
        "201":
          description: IntelliTrustIDP
          schema:
            $ref: '#/definitions/IntelliTrustIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create IntelliTrust IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/intelli_trust/{iid}:
    get:
      description: Get IntelliTrust IDP.
      operationId: getIntelliTrustIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: IntelliTrustIDP
          schema:
            $ref: '#/definitions/IntelliTrustIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get IntelliTrust IDP
      tags:
      - idps
    put:
      description: Update IntelliTrust IDP.
      operationId: updateIntelliTrustIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: IntelliTrustIDP
        in: body
        name: IntelliTrustIDP
        schema:
          $ref: '#/definitions/IntelliTrustIDP'
      responses:
        "200":
          description: IntelliTrustIDP
          schema:
            $ref: '#/definitions/IntelliTrustIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update IntelliTrust IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/oidc:
    post:
      description: Create OIDC IDP.
      operationId: createOIDCIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: OIDCIDP
        in: body
        name: OIDCIDP
        schema:
          $ref: '#/definitions/OIDCIDP'
      responses:
        "201":
          description: OIDCIDP
          schema:
            $ref: '#/definitions/OIDCIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create OIDC IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/oidc/{iid}:
    get:
      description: Get OIDC IDP.
      operationId: getOIDCIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: OIDCIDP
          schema:
            $ref: '#/definitions/OIDCIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get OIDC IDP
      tags:
      - idps
    put:
      description: Update OIDC IDP.
      operationId: updateOIDCIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: OIDCIDP
        in: body
        name: OIDCIDP
        schema:
          $ref: '#/definitions/OIDCIDP'
      responses:
        "200":
          description: OIDCIDP
          schema:
            $ref: '#/definitions/OIDCIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update OIDC IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/okta:
    post:
      description: Create Okta IDP.
      operationId: createOktaIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: OktaIDP
        in: body
        name: OktaIDP
        schema:
          $ref: '#/definitions/OktaIDP'
      responses:
        "201":
          description: OktaIDP
          schema:
            $ref: '#/definitions/OktaIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create Okta IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/okta/{iid}:
    get:
      description: Get Okta IDP.
      operationId: getOktaIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: OktaIDP
          schema:
            $ref: '#/definitions/OktaIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get Okta IDP
      tags:
      - idps
    put:
      description: Update Okta IDP.
      operationId: updateOktaIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: OktaIDP
        in: body
        name: OktaIDP
        schema:
          $ref: '#/definitions/OktaIDP'
      responses:
        "200":
          description: OktaIDP
          schema:
            $ref: '#/definitions/OktaIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update Okta IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/saml:
    post:
      description: Create SAML IDP.
      operationId: createSAMLIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: SAMLIDP
        in: body
        name: SAMLIDP
        schema:
          $ref: '#/definitions/SAMLIDP'
      responses:
        "201":
          description: SAMLIDP
          schema:
            $ref: '#/definitions/SAMLIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create SAML IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/saml/{iid}:
    get:
      description: Get SAML IDP.
      operationId: getSAMLIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: SAMLIDP
          schema:
            $ref: '#/definitions/SAMLIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get SAML IDP
      tags:
      - idps
    put:
      description: Update SAML IDP.
      operationId: updateSAMLIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: SAMLIDP
        in: body
        name: SAMLIDP
        schema:
          $ref: '#/definitions/SAMLIDP'
      responses:
        "200":
          description: SAMLIDP
          schema:
            $ref: '#/definitions/SAMLIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update SAML IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/static:
    post:
      description: Create Static IDP.
      operationId: createStaticIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: StaticIDP
        in: body
        name: StaticIDP
        schema:
          $ref: '#/definitions/StaticIDP'
      responses:
        "201":
          description: StaticIDP
          schema:
            $ref: '#/definitions/StaticIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create Static IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/idps/static/{iid}:
    get:
      description: Get Static IDP.
      operationId: getStaticIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: IDP id
        in: path
        name: iid
        required: true
        type: string
      responses:
        "200":
          description: StaticIDP
          schema:
            $ref: '#/definitions/StaticIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get Static IDP
      tags:
      - idps
    put:
      description: Update Static IDP.
      operationId: updateStaticIDP
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: IDP id
        in: path
        name: iid
        required: true
        type: string
      - description: StaticIDP
        in: body
        name: StaticIDP
        schema:
          $ref: '#/definitions/StaticIDP'
      responses:
        "200":
          description: StaticIDP
          schema:
            $ref: '#/definitions/StaticIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update Static IDP
      tags:
      - idps
  /api/admin/{tid}/servers/{aid}/keys:
    get:
      description: Get server encryption or signing keys.
      operationId: getKeys
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: sig
        description: Key use (sig or enc)
        in: query
        name: use
        type: string
      responses:
        "200":
          description: KeysResponse
          schema:
            $ref: '#/definitions/KeysResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get server keys
      tags:
      - keys
  /api/admin/{tid}/servers/{aid}/keys/{kid}/raw:
    get:
      description: Get next, current or rotated server key by kid and return as raw jwk without metadata.
      operationId: getKey
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: Key identifier
        in: path
        name: kid
        required: true
        type: string
      responses:
        "200":
          description: ClientJWK
          schema:
            $ref: '#/definitions/ClientJWK'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get server key by kid
      tags:
      - keys
  /api/admin/{tid}/servers/{aid}/keys/automatic-key-rotation:
    get:
      description: Get automatic key rotation configuration.
      operationId: getAutomaticKeyRotation
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: sig
        description: Key use (sig or enc)
        in: query
        name: use
        type: string
      responses:
        "200":
          description: AutomaticKeyRotation
          schema:
            $ref: '#/definitions/AutomaticKeyRotation'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get automatic key rotation
      tags:
      - keys
    put:
      description: Set automatic key rotation configuration.
      operationId: setAutomaticKeyRotation
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: sig
        description: Key use (sig or enc)
        in: query
        name: use
        type: string
      - description: Automatic key rotation configuration
        in: body
        name: AutomaticKeyRotation
        schema:
          $ref: '#/definitions/AutomaticKeyRotation'
      responses:
        "200":
          description: AutomaticKeyRotation
          schema:
            $ref: '#/definitions/AutomaticKeyRotation'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Set automatic key rotation
      tags:
      - keys
  /api/admin/{tid}/servers/{aid}/keys/revoke/{kid}:
    post:
      description: Revoke rotated key
      operationId: revokeKey
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: Key id
        in: path
        name: kid
        required: true
        type: string
      - default: sig
        description: Key use (sig or enc)
        in: query
        name: use
        type: string
      responses:
        "200":
          description: ServerJWK
          schema:
            $ref: '#/definitions/ServerJWK'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Revoke key
      tags:
      - keys
  /api/admin/{tid}/servers/{aid}/keys/rotate:
    post:
      description: Rotate encryption or signing key.
      operationId: rotateKey
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: sig
        description: Key use (sig or enc)
        in: query
        name: use
        type: string
      responses:
        "200":
          description: ServerJWK
          schema:
            $ref: '#/definitions/ServerJWK'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Rotate key
      tags:
      - keys
  /api/admin/{tid}/servers/{aid}/policies:
    get:
      description: Lists authorization servers' (workspace) policies by type.
      operationId: listPolicies
      parameters:
      - default: default
        description: ID of your tenant
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Id of your authorization server (workspace)
        in: path
        name: aid
        required: true
        type: string
      - default: api
        description: An array of policy types that are to be filtered out
        in: query
        name: policy_types
        type: string
      - description: |-
          An optional and case insensitive search phrase that contains either a policy ID or a policy
          name substring
          SearchPhrase
        in: query
        name: search_phrase
        type: string
      - description: |-
          String represented policy ID

          The `AfterPolicyID` parameter defines the ID of the last displayed policy on a page.
          For example, if there are 20 policies and only 10 are displayed per page, in
          order to jump to the next page, you need to provide the ID of the last policy on that page as
          the value of the `AfterPolicyID` parameter.
          AfterPolicyID
        in: query
        name: after_policy_id
        type: string
      - description: |-
          String represented policy ID

          The `BeforePolicyID` parameter defines the ID of the last displayed policy on a page.
          For example, if there are 20 policies and only 10 are displayed per page, in
          order to jump to the previous page, you need to provide the ID of the first policy on that page as
          the value of the `Before PolicyID` parameter.
          BeforePolicyID
        in: query
        name: before_policy_id
        type: string
      - description: |-
          Defines the method of sorting the results by a given field
          Sort
        in: query
        name: sort
        type: string
      - description: |-
          An ascending or descending order of sorting the policies
          Order
        in: query
        name: order
        type: string
      - default: 20
        description: |-
          A limit of displayed results per page for listed policies
          Limit
        format: int64
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: Policies
          schema:
            $ref: '#/definitions/Policies'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List policies
      tags:
      - policies
  /api/admin/{tid}/servers/{aid}/policy-execution-points:
    get:
      description: Returns a list of policy execution points for a given workspace.
      operationId: listPolicyExecutionPoints
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: PolicyExecutionPoints
          schema:
            $ref: '#/definitions/PolicyExecutionPoints'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List policy execution points
      tags:
      - policies
    put:
      description: |-
        Available execution points: `scope_client_assignment`, `scope_user_grant`,
        `server_client_assignment`, `server_user_token`, `client_user_token`, `api`
      operationId: setPolicyExecutionPoints
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: Executions
        schema:
          $ref: '#/definitions/PolicyExecutionPoints'
      responses:
        "200":
          description: PolicyExecutionPoints
          schema:
            $ref: '#/definitions/PolicyExecutionPoints'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Set policy execution points
      tags:
      - policies
  /api/admin/{tid}/servers/{aid}/scopes:
    get:
      description: List scopes.
      operationId: listScopes
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: ScopesWithServices
          schema:
            $ref: '#/definitions/ScopesWithServices'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List scopes
      tags:
      - scopes
  /api/admin/{tid}/servers/{aid}/server-consent:
    get:
      description: Get server consent.
      operationId: getServerConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: ServerConsent
          schema:
            $ref: '#/definitions/ServerConsent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get server consent
      tags:
      - servers
    put:
      description: Set server consent. For custom server consent a client in system server is created automatically.
      operationId: setServerConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: Server consent
        in: body
        name: ServerConsent
        schema:
          $ref: '#/definitions/ServerConsent'
      responses:
        "200":
          description: ServerConsent
          schema:
            $ref: '#/definitions/ServerConsent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Set server consent
      tags:
      - servers
  /api/admin/{tid}/servers/{aid}/services:
    get:
      description: List services.
      operationId: listServices
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: |-
          Optional search phrase: service id OR service name substring (case insensitive)
          SearchPhrase
        in: query
        name: search_phrase
        type: string
      - description: |-
          optional list services after given id
          AfterServiceID
        in: query
        name: after_service_id
        type: string
      - description: |-
          optional list services before given id
          BeforeServiceID
        in: query
        name: before_service_id
        type: string
      - description: |-
          optional sort services by given field
          Sort
        in: query
        name: sort
        type: string
      - description: |-
          optional order services by given direction
          Order
        in: query
        name: order
        type: string
      - default: 20
        description: |-
          optional limit results
          Limit
        format: int64
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: ServicesResponse
          schema:
            $ref: '#/definitions/ServicesResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List services
      tags:
      - services
  /api/admin/{tid}/servers/{aid}/unbind/{rid}:
    delete:
      description: Unbind server.
      operationId: unbindServer
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Dependent server id
        in: path
        name: rid
        required: true
        type: string
      responses:
        "200":
          description: ServerToServer
          schema:
            $ref: '#/definitions/ServerToServer'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Unbind server
      tags:
      - servers
  /api/admin/{tid}/services:
    post:
      description: Service name is required. Service id will be generated if not provided.
      operationId: createService
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Service
        schema:
          $ref: '#/definitions/Service'
      responses:
        "201":
          description: Service
          schema:
            $ref: '#/definitions/Service'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Create service
      tags:
      - services
  /api/admin/{tid}/services/{sid}:
    delete:
      description: Delete service.
      operationId: deleteService
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: sid
        required: true
        type: string
      responses:
        "204":
          description: ' Service has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Delete service
      tags:
      - services
    get:
      description: Get service.
      operationId: getService
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: sid
        required: true
        type: string
      responses:
        "200":
          description: ServiceWithScopesResponse
          schema:
            $ref: '#/definitions/ServiceWithScopesResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get service
      tags:
      - services
    put:
      description: Update service.
      operationId: updateService
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: sid
        required: true
        type: string
      - in: body
        name: Service
        schema:
          $ref: '#/definitions/Service'
      responses:
        "200":
          description: Service
          schema:
            $ref: '#/definitions/Service'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update service
      tags:
      - services
  /api/admin/{tid}/services/{sid}/apis:
    delete:
      description: |-
        Remove all apis and policies created during import for a service.

        If policy is used by another service it will not be removed.

        If service is connected to a gateway, it will be disconnected.

        If a gateway api group is connected to this service, it will be disconnected.
      operationId: removeSpecification
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: sid
        required: true
        type: string
      responses:
        "200":
          description: RemoveServiceConfigurationResult
          schema:
            $ref: '#/definitions/RemoveServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Remove imported apis and policies
      tags:
      - services
    get:
      description: List APIs.
      operationId: listAPIsByService
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Service id
        in: path
        name: sid
        required: true
        type: string
      - description: List apis that have no data classifications
        in: query
        name: without_data_classifications
        type: boolean
      - description: List apis that have given data classifications
        in: query
        items:
          type: string
        name: data_classification
        type: array
      responses:
        "200":
          description: APIs
          schema:
            $ref: '#/definitions/APIs'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List APIs
      tags:
      - apis
  /api/admin/{tid}/services/{sid}/apis/import/file:
    post:
      consumes:
      - multipart/form-data
      description: It removes all apis before import.
      operationId: importSpecificationFromFile
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: sid
        required: true
        type: string
      - in: query
        name: gateway_type
        type: string
      - in: formData
        name: file
        type: file
      responses:
        "200":
          description: ImportServiceConfigurationResult
          schema:
            $ref: '#/definitions/ImportServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Import OpenAPI specification from file
      tags:
      - services
  /api/admin/{tid}/services/{sid}/apis/import/text:
    post:
      consumes:
      - text/plain
      description: It removes all apis and policies (created by previous import) before import.
      operationId: importSpecificationFromText
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: sid
        required: true
        type: string
      - in: body
        name: text
        schema:
          type: string
      responses:
        "200":
          description: ImportServiceConfigurationResult
          schema:
            $ref: '#/definitions/ImportServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Import OpenAPI specification from text
      tags:
      - services
  /api/admin/{tid}/services/{sid}/apis/import/url:
    post:
      consumes:
      - multipart/form-data
      description: It removes all apis before import.
      operationId: importSpecificationFromURL
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: sid
        required: true
        type: string
      - in: query
        name: gateway_type
        type: string
      - in: formData
        name: url
        type: string
      responses:
        "200":
          description: ImportServiceConfigurationResult
          schema:
            $ref: '#/definitions/ImportServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Import OpenAPI specification from url
      tags:
      - services
  /api/admin/{tid}/stats/{aid}/overview:
    get:
      description: Get stats
      operationId: getStats
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: Stats
          schema:
            $ref: '#/definitions/Stats'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get stats
      tags:
      - stats
  /api/admin/{tid}/stats/{aid}/recent-activities:
    get:
      description: Get recent activities
      operationId: getRecentActivities
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - default: 10
        description: Limit
        format: int64
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: RecentActivities
          schema:
            $ref: '#/definitions/RecentActivities'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get recent activities
      tags:
      - recent-activities
  /api/admin/{tid}/system/apis:
    get:
      description: List APIs of the system tenant and system authorization server.
      operationId: listSystemAPIs
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - description: List apis that have no data classifications
        in: query
        name: without_data_classifications
        type: boolean
      - description: List apis that have given data classifications
        in: query
        items:
          type: string
        name: data_classification
        type: array
      responses:
        "200":
          description: ServerAPIs
          schema:
            $ref: '#/definitions/ServerAPIs'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List system APIs
      tags:
      - system
  /api/admin/{tid}/system/apis/{aid}/bindings:
    get:
      description: List policy to system api bindings.
      operationId: listSystemAPIBindings
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: SystemAPIBindings
          schema:
            $ref: '#/definitions/SystemAPIBindings'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List system api bindings
      tags:
      - system
  /api/admin/{tid}/system/apis/bind:
    post:
      description: Bind policy to a system api.
      operationId: bindSystemAPI
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/BindSystemAPIRequest'
      responses:
        "204":
          description: ' success'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Bind system api
      tags:
      - system
  /api/admin/{tid}/system/apis/unbind:
    delete:
      description: Unbind policy from a system api.
      operationId: unbindSystemAPI
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/UnbindSystemAPIRequest'
      responses:
        "204":
          description: ' success'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Unbind system api
      tags:
      - system
  /api/admin/{tid}/system/services:
    get:
      description: List services of the system tenant and system authorization server.
      operationId: listSystemServices
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: SystemServicesResponse
          schema:
            $ref: '#/definitions/SystemServicesResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: List system services
      tags:
      - system
  /api/admin/{tid}/tenant:
    get:
      description: Get tenant.
      operationId: getAdminTenant
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Get tenant
      tags:
      - tenants
    put:
      description: Update tenant.
      operationId: updateAdminTenant
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Tenant
        schema:
          $ref: '#/definitions/Tenant'
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Update tenant
      tags:
      - tenants
  /api/developer/{tid}/{aid}/clients:
    get:
      description: List clients owner by developer.
      operationId: listClientsForDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: ClientsForDeveloper
          schema:
            $ref: '#/definitions/ClientsForDeveloper'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: List clients
      tags:
      - clients
    post:
      description: |-
        Client must be created under existing tenant and authorization server.

        Authorization server id where client should be assigned must be provided in the request body.

        Client can't be created in a system authorization server.

        Client id and secret are generated upon creation.

        If grant type is not set, client will get authorization code grant type assigned with code as response type.

        Default token authentication method is client_secret_basic.

        It might happen that it won't be possible to create a client with specified scopes.
        Scopes assignment can be protected by policies defined by administrator.
      operationId: createClientForDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/CreateClientDeveloperRequest'
      responses:
        "201":
          description: ClientDeveloperResponse
          schema:
            $ref: '#/definitions/ClientDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: Create new OAuth client
      tags:
      - clients
  /api/developer/{tid}/{aid}/clients/{cid}:
    delete:
      description: Delete client owned by developer.
      operationId: deleteClientForDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: Delete client
      tags:
      - clients
    get:
      description: Get client owned by developer.
      operationId: getClientForDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          description: ClientDeveloperResponse
          schema:
            $ref: '#/definitions/ClientDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: Get client
      tags:
      - clients
    put:
      description: The entire client object must be send for update.
      operationId: updateClientForDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/UpdateClientDeveloperRequest'
      responses:
        "200":
          description: ClientDeveloperResponse
          schema:
            $ref: '#/definitions/ClientDeveloperResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: Update client
      tags:
      - clients
  /api/developer/{tid}/{aid}/clients/{cid}/revokeRotatedSecrets:
    post:
      description: Revoke all rotated client's secrets.
      operationId: revokeRotatedClientSecretsAsDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' all client''s rotated secrets has been revoked'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Revoke rotated secrets.
      tags:
      - clients
  /api/developer/{tid}/{aid}/clients/{cid}/rotateSecret:
    post:
      description: |-
        Generate a new client secret, move old secret to rotated secrets list and return
        new client secret as a response. The max number of client rotated secrets is 2.
        The rotated secrets over the limit are dropped.
      operationId: rotateClientSecretAsDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          description: RotateClientSecretDeveloperResponse
          schema:
            $ref: '#/definitions/RotateClientSecretDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - admin: []
      summary: Rotate client's secret.
      tags:
      - clients
  /api/developer/{tid}/{aid}/environment:
    get:
      description: Get environment settings.
      operationId: getDeveloperEnvironment
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: DeveloperEnvironment
          schema:
            $ref: '#/definitions/DeveloperEnvironment'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: Get environment
      tags:
      - environment
  /api/developer/{tid}/{aid}/servers:
    get:
      description: Returns list of authorization severs.
      operationId: listServersForDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: ListServersDeveloperResponse
          schema:
            $ref: '#/definitions/ListServersDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: List authorization servers
      tags:
      - servers
  /api/developer/{tid}/{aid}/servers/{rid}:
    get:
      description: Returns authorization server details with list of scopes.
      operationId: getServerForDeveloper
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: developer
        description: Developer server id
        in: path
        name: aid
        required: true
        type: string
      - default: default
        description: Regular server id
        in: path
        name: rid
        required: true
        type: string
      responses:
        "200":
          description: GetServerWithScopesDeveloperResponse
          schema:
            $ref: '#/definitions/GetServerWithScopesDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - developer: []
      summary: Get authorization server
      tags:
      - servers
  /api/system/{tid}/backchannel/authentications/{authReqID}/accept:
    post:
      description: This API is used by an authenticator service to notify ACP that user has successfully authenticated.
      operationId: acceptBackchannelAuthenticationRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: authReqID
        required: true
        type: string
      - in: body
        name: AcceptBackchannelAuthenticationRequest
        schema:
          $ref: '#/definitions/AcceptBackchannelAuthenticationRequest'
      responses:
        "200":
          description: ' authentication accepted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_backchannel_authentications
      summary: Accept backchannel authentication request
      tags:
      - backchannelAuthentications
  /api/system/{tid}/backchannel/authentications/{authReqID}/reject:
    post:
      description: This API is used by an authentication service to notify ACP that login has been rejected.
      operationId: rejectBackchannelAuthenticationRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: authReqID
        required: true
        type: string
      responses:
        "200":
          description: ' authentication rejected'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_backchannel_authentications
      summary: Reject backchannel authentication request
      tags:
      - backchannelAuthentications
  /api/system/{tid}/clients/{aid}:
    get:
      description: This API lists clients by server
      operationId: listClientsSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: Clients
          schema:
            $ref: '#/definitions/Clients'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - view_clients
      summary: List clients by authorization server
      tags:
      - clients
  /api/system/{tid}/configuration:
    get:
      description: Export entire tenant configuration as json.
      operationId: exportTenantConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: TenantDump
          schema:
            $ref: '#/definitions/TenantDump'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_configuration
      summary: Export configuration
      tags:
      - tenants
    patch:
      description: Patch tenant configuration using RFC 6902 JSON Patch.
      operationId: patchTenantConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: patch
        schema:
          $ref: '#/definitions/PatchTenantConfiguration'
      - format: insertMode
        in: query
        name: mode
        type: string
      responses:
        "204":
          description: ' patch applied'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_configuration
      summary: Patch tenant configuration
      tags:
      - tenants
    put:
      description: Allows to quickly import tenant configuration.
      operationId: importTenantConfiguration
      parameters:
      - in: body
        name: TenantDump
        schema:
          $ref: '#/definitions/TenantDump'
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - format: insertMode
        in: query
        name: mode
        type: string
      responses:
        "204":
          description: ' configuration has been imported'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_configuration
      summary: Import tenant configuration
      tags:
      - tenants
  /api/system/{tid}/consents:
    get:
      description: |-
        User identifier must be provided in the header.

        To limit list of consents, you can provide consent identifiers in query param.
      operationId: listUserConsentsSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: query
        items:
          type: string
        name: consent_id
        type: array
      - description: user identifier
        in: header
        name: x-subject
        type: string
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - view_consents
      summary: List user consents
      tags:
      - consents
    patch:
      description: |-
        This is a non-standardized PATCH request.

        Allows to update multiple consents approval in one API call.

        User identifier must be provided in the header.

        See ConsentGrantPatchRequest object for more information.
      operationId: patchConsentGrantsSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: ConsentGrantPatchRequest
        schema:
          $ref: '#/definitions/ConsentGrantPatchRequest'
      - description: user identifier
        in: header
        name: x-subject
        type: string
      responses:
        "201":
          description: ConsentGrantPatchResponse
          schema:
            $ref: '#/definitions/ConsentGrantPatchResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_consents
      summary: Patch consent grants
      tags:
      - consents
  /api/system/{tid}/consents/{action}:
    get:
      description: User identifier must be provided in the header.
      operationId: listUserConsentsByActionSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Consent action id
        in: path
        name: action
        required: true
        type: string
      - description: user identifier
        in: header
        name: x-subject
        type: string
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - view_consents
      summary: List user consents by action
      tags:
      - consents
  /api/system/{tid}/gateways/configuration:
    get:
      description: This endpoint is used by api authorizers to fetch rules, policies and services to protect.
      operationId: getGatewayConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: latest
        description: Authorizer version
        in: query
        name: authorizer_version
        type: string
      - description: Tenant id
        in: query
        name: tenant_id
        type: string
      - description: Server id
        in: query
        name: server_id
        type: string
      responses:
        "200":
          description: GatewayConfiguration
          schema:
            $ref: '#/definitions/GatewayConfiguration'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - read_gateway_configuration
      summary: Get configuration for a gateway
      tags:
      - gateways
    post:
      description: This endpoint is used to push apis protected by api gateway to acp.
      operationId: setGatewayConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: SetGatewayConfigurationRequest
        schema:
          $ref: '#/definitions/SetGatewayConfigurationRequest'
      - default: latest
        description: Authorizer version
        in: query
        name: authorizer_version
        type: string
      responses:
        "200":
          description: SetGatewayConfigurationResponse
          schema:
            $ref: '#/definitions/SetGatewayConfigurationResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - write_gateway_configuration
      summary: Set configuration for a gateway
      tags:
      - gateways
  /api/system/{tid}/gateways/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect access token endpoint as a gateway
      operationId: gatewayIntrospect
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: formData
        name: token
        type: string
      responses:
        "200":
          description: IntrospectResponse
          schema:
            $ref: '#/definitions/IntrospectResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - introspect_tokens
      tags:
      - oauth2
  /api/system/{tid}/gateways/requests:
    post:
      description: Push gateway request.
      operationId: pushGatewayRequests
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: GatewayRequestEvents
        schema:
          $ref: '#/definitions/GatewayRequestEvents'
      - default: latest
        description: Authorizer version
        in: query
        name: authorizer_version
        type: string
      responses:
        "200":
          description: GatewayRequestsEventsResponse
          schema:
            $ref: '#/definitions/GatewayRequestsEventsResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - push_gateway_requests
      summary: Push gateway request
      tags:
      - gateways
  /api/system/{tid}/logins/{login}:
    get:
      description: This API is used by a login page to make a decision if user should authenticate.
      operationId: getLoginRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: LoginSessionResponse
          schema:
            $ref: '#/definitions/LoginSessionResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_logins
      summary: Get login request
      tags:
      - logins
  /api/system/{tid}/logins/{login}/accept:
    post:
      description: This API is used by a login page to notify ACP that user has successfully authenticated.
      operationId: acceptLoginRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptLogin
        schema:
          $ref: '#/definitions/AcceptSession'
      responses:
        "200":
          description: LoginAccepted
          schema:
            $ref: '#/definitions/LoginAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_logins
      summary: Accept login request
      tags:
      - logins
  /api/system/{tid}/logins/{login}/reject:
    post:
      description: This API is used by a login page to notify ACP that login has been rejected.
      operationId: rejectLoginRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectLogin
        schema:
          $ref: '#/definitions/RejectSession'
      responses:
        "200":
          description: LoginRejected
          schema:
            $ref: '#/definitions/LoginRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_logins
      summary: Reject login request
      tags:
      - logins
  /api/system/{tid}/open-banking-brasil/consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getOBBRCustomerDataAccessConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetOBBRCustomerDataAccessConsentResponse
          schema:
            $ref: '#/definitions/GetOBBRCustomerDataAccessConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get customer data access consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking-brasil/consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a customer data access.
      operationId: acceptOBBRCustomerDataAccessConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept customer data access consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking-brasil/consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectOBBRCustomerDataAccessConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking-brasil/payment/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getOBBRCustomerPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetOBBRCustomerPaymentConsentResponse
          schema:
            $ref: '#/definitions/GetOBBRCustomerPaymentConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get customer payment initiation consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking-brasil/payment/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent for payment initiation.
      operationId: acceptOBBRCustomerPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept customer payment initiation consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking-brasil/payment/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected payment initiation.
      operationId: rejectOBBRCustomerPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/account-access-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getAccountAccessConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetAccountAccessConsentResponse
          schema:
            $ref: '#/definitions/GetAccountAccessConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get account-access consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/account-access-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a account-access.
      operationId: acceptAccountAccessConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept account-access consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/account-access-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectAccountAccessConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getDomesticPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetDomesticPaymentConsentResponse
          schema:
            $ref: '#/definitions/GetDomesticPaymentConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get domestic-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-payment-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a domestic-payment.
      operationId: acceptDomesticPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept domestic-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-payment-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectDomesticPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-scheduled-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getDomesticScheduledPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetDomesticScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/GetDomesticScheduledPaymentConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get domestic-scheduled-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-scheduled-payment-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a domestic-scheduled-payment.
      operationId: acceptDomesticScheduledPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept domestic-scheduled-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-scheduled-payment-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectDomesticScheduledPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-standing-order-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getDomesticStandingOrderConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetDomesticStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/GetDomesticStandingOrderConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get domestic-standing-order consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-standing-order-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a domestic-standing-order.
      operationId: acceptDomesticStandingOrderConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept domestic-standing-order consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/domestic-standing-order-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectDomesticStandingOrderConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/file-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getFilePaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetFilePaymentConsentResponse
          schema:
            $ref: '#/definitions/GetFilePaymentConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get file-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/file-payment-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a file-payment.
      operationId: acceptFilePaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept file-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/file-payment-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectFilePaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getInternationalPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetInternationalPaymentConsentResponse
          schema:
            $ref: '#/definitions/GetInternationalPaymentConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get international-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-payment-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a international-payment.
      operationId: acceptInternationalPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept international-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-payment-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectInternationalPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-scheduled-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getInternationalScheduledPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetInternationalScheduledPaymentConsentResponse
          schema:
            $ref: '#/definitions/GetInternationalScheduledPaymentConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get international-scheduled-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-scheduled-payment-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a international-scheduled-payment.
      operationId: acceptInternationalScheduledPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept international-scheduled-payment consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-scheduled-payment-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectInternationalScheduledPaymentConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-standing-order-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getInternationalStandingOrderConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: GetInternationalStandingOrderConsentResponse
          schema:
            $ref: '#/definitions/GetInternationalStandingOrderConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get international-standing-order consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-standing-order-consent/{login}/accept:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user granted consent to a international-standing-order.
      operationId: acceptInternationalStandingOrderConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          description: ConsentAccepted
          schema:
            $ref: '#/definitions/ConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept international-standing-order consent
      tags:
      - openbanking
  /api/system/{tid}/open-banking/international-standing-order-consent/{login}/reject:
    post:
      description: This API can be used by a custom openbanking consent page to notify ACP that user rejected access.
      operationId: rejectInternationalStandingOrderConsentSystem
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          description: ConsentRejected
          schema:
            $ref: '#/definitions/ConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject consent
      tags:
      - openbanking
  /api/system/{tid}/scope-grants/{login}:
    get:
      description: This API is used by a consent page to display requested scopes.
      operationId: getScopeGrantRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          description: ScopeGrantSessionResponse
          schema:
            $ref: '#/definitions/ScopeGrantSessionResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_consents
      summary: Get consent request
      tags:
      - logins
  /api/system/{tid}/scope-grants/{login}/accept:
    post:
      description: This API is used by a consent page to notify ACP that user granted consent.
      operationId: acceptScopeGrantRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptScopeGrant
        schema:
          $ref: '#/definitions/AcceptScopeGrant'
      responses:
        "200":
          description: ScopeGrantAccepted
          schema:
            $ref: '#/definitions/ScopeGrantAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_scope_grants
      summary: Accept login request
      tags:
      - logins
  /api/system/{tid}/scope-grants/{login}/reject:
    post:
      description: This API is used by a consent page to notify ACP that scope grant has been rejected.
      operationId: rejectScopeGrantRequest
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectScopeGrant
        schema:
          $ref: '#/definitions/RejectScopeGrant'
      responses:
        "200":
          description: ScopeGrantRejected
          schema:
            $ref: '#/definitions/ScopeGrantRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_scope_grants
      summary: Reject login request
      tags:
      - logins
  /api/system/{tid}/servers/{aid}/open-banking-brasil/consents:
    delete:
      description: |-
        This API revokes openbanking consents matching provided parameters.

        Currently supporting removal by client id.
        Use ?client_id={clientID} to remove all consents by a given client.

        You can also optionally specify which consent should be removed by specifying consent type
        example: ?client_id={clientID}&consent_type=account_access
      operationId: revokeOBBRConsents
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: Client ID
        in: query
        name: client_id
        type: string
      - description: Required consent types
        in: query
        items:
          type: string
        name: consent_types
        type: array
      responses:
        "200":
          description: ConsentsRemovedResponse
          schema:
            $ref: '#/definitions/ConsentsRemovedResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Revoke openbanking Brasil consents.
      tags:
      - openbanking
    get:
      description: |-
        This API returns the list of openbanking brasil consents.
        You can narrow the list of returned consents using filters defined in query parameters.
        See GetConsentsParams for details.
      operationId: getOBBRConsents
      parameters:
      - description: |-
          Optional client id
          ClientID
        in: query
        name: client_id
        type: string
      - description: |-
          Optional list of accounts
          Accounts
        in: query
        items:
          type: string
        name: accounts
        type: array
      - description: |-
          Optional status
          Status
        in: query
        items:
          type: string
        name: status
        type: array
      - description: |-
          Optional type
          Types
        in: query
        items:
          type: string
        name: types
        type: array
      - description: |-
          optional list consents after given id
          AfterConsentID
        in: query
        name: after_consent_id
        type: string
      - description: |-
          optional list consents before given id
          BeforeConsentID
        in: query
        name: before_consent_id
        type: string
      - description: |-
          optional sort consents by given fields
          Sort
        in: query
        name: sort
        type: string
      - description: |-
          optional sort consents by given fields
          Order
        in: query
        name: order
        type: string
      - default: 20
        description: |-
          optional limit results
          Limit
        format: int64
        in: query
        name: limit
        type: integer
      - default: default
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: OBBRConsents
          schema:
            $ref: '#/definitions/OBBRConsents'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get openbanking brasil consents.
      tags:
      - openbanking
    post:
      description: |-
        This API returns the list of openbanking brasil consents.
        You can narrow the list of returned consents using filters defined in request body.
        See ListConsentsParams for details.
      operationId: listOBBRConsents
      parameters:
      - default: default
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: ConsentsRequest
        schema:
          $ref: '#/definitions/ConsentsRequest'
      responses:
        "200":
          description: OBBRConsents
          schema:
            $ref: '#/definitions/OBBRConsents'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: List openbanking brasil consents.
      tags:
      - openbanking
  /api/system/{tid}/servers/{aid}/open-banking/consents:
    delete:
      description: |-
        This API revokes openbanking consents matching provided parameters.

        Currently supporting removal by client id.
        Use ?client_id={clientID} to remove all consents by a given client.

        You can also optionally specify which consent should be removed by specifying consent type
        example: ?client_id={clientID}&consent_type=account_access
      operationId: revokeOpenbankingConsents
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - description: Client ID
        in: query
        name: client_id
        type: string
      - description: Required consent types
        in: query
        items:
          type: string
        name: consent_types
        type: array
      responses:
        "200":
          description: ConsentsRemovedResponse
          schema:
            $ref: '#/definitions/ConsentsRemovedResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Revoke openbanking consents.
      tags:
      - openbanking
    get:
      description: |-
        This API returns the list of openbanking consents.
        You can narrow the list of returned consents using filters defined in query parameters.
        See GetConsentsParams for details.
      operationId: getOBConsents
      parameters:
      - description: |-
          Optional client id
          ClientID
        in: query
        name: client_id
        type: string
      - description: |-
          Optional list of accounts
          Accounts
        in: query
        items:
          type: string
        name: accounts
        type: array
      - description: |-
          Optional status
          Status
        in: query
        items:
          type: string
        name: status
        type: array
      - description: |-
          Optional type
          Types
        in: query
        items:
          type: string
        name: types
        type: array
      - description: |-
          optional list consents after given id
          AfterConsentID
        in: query
        name: after_consent_id
        type: string
      - description: |-
          optional list consents before given id
          BeforeConsentID
        in: query
        name: before_consent_id
        type: string
      - description: |-
          optional sort consents by given fields
          Sort
        in: query
        name: sort
        type: string
      - description: |-
          optional sort consents by given fields
          Order
        in: query
        name: order
        type: string
      - default: 20
        description: |-
          optional limit results
          Limit
        format: int64
        in: query
        name: limit
        type: integer
      - default: default
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      responses:
        "200":
          description: GenericConsents
          schema:
            $ref: '#/definitions/GenericConsents'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get openbanking consents.
      tags:
      - openbanking
    post:
      description: |-
        This API returns the list of openbanking consents.
        You can narrow the list of returned consents using filters defined in request body.
        See ListConsentsParams for details.
      operationId: listOBConsents
      parameters:
      - default: default
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: body
        name: ConsentsRequest
        schema:
          $ref: '#/definitions/ConsentsRequest'
      responses:
        "200":
          description: GenericConsents
          schema:
            $ref: '#/definitions/GenericConsents'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: List openbanking consents.
      tags:
      - openbanking
  /api/system/{tid}/servers/{aid}/open-banking/consents/{consentID}:
    delete:
      description: This API revokes openbanking consent by consent id.
      operationId: revokeOpenbankingConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: path
        name: consentID
        required: true
        type: string
      responses:
        "204":
          description: ' Consent has been revoked'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Revoke openbanking consent by ID.
      tags:
      - openbanking
  /api/system/{tid}/servers/{aid}/open-banking/consents/{consentID}/consume:
    post:
      description: This API consumes openbanking consent by consent id.
      operationId: consumeOpenbankingConsent
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: aid
        required: true
        type: string
      - in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          description: OBConsent
          schema:
            $ref: '#/definitions/OBConsent'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - system:
        - manage_openbanking_consents
      summary: Consume openbanking consent by ID.
      tags:
      - openbanking
  /api/system/configuration:
    get:
      description: Export entire tenant configuration as json.
      operationId: exportConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: query
        name: tid
        type: string
      responses:
        "200":
          description: Dump
          schema:
            $ref: '#/definitions/Dump'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: Export configuration
      tags:
      - tenants
    patch:
      description: Patch tenant configuration using RFC 6902 JSON Patch.
      operationId: patchConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: query
        name: tid
        type: string
      - in: body
        name: patch
        schema:
          $ref: '#/definitions/PatchConfiguration'
      - format: insertMode
        in: query
        name: mode
        type: string
      responses:
        "204":
          description: ' patch applied'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: Patch configuration
      tags:
      - tenants
    put:
      description: Allows to quickly import tenant basic configuration.
      operationId: importConfiguration
      parameters:
      - in: body
        name: Dump
        schema:
          $ref: '#/definitions/Dump'
      - format: insertMode
        in: query
        name: mode
        type: string
      responses:
        "204":
          description: ' configuration has been imported'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: Import configuration
      tags:
      - tenants
  /api/system/tenants:
    get:
      description: List tenants.
      operationId: listTenants
      responses:
        "200":
          description: ListTenantsResponse
          schema:
            $ref: '#/definitions/ListTenantsResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: List tenants
      tags:
      - tenants
    post:
      description: |-
        Tenant must have unique id, if it's not provided will be generated.

        Tenant name must be provided.

        Tenant url is optional and if omitted, it is set to ACP deployment url with
        appened id of a tenant, example: https://example.com/default.

        When tenant is created, preconfigured authorization servers with default scopes,
        services and oauth clients are automatically created underneath. See API response for more details.
      operationId: createTenant
      parameters:
      - in: body
        name: Tenant
        schema:
          $ref: '#/definitions/Tenant'
      - description: Create tenant with default workspaces
        in: query
        name: with_default_workspaces
        type: boolean
      responses:
        "201":
          description: TenantCreated
          schema:
            $ref: '#/definitions/TenantCreated'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: Create tenant
      tags:
      - tenants
  /api/system/tenants/{tid}:
    delete:
      description: Deletes index in elasticsearch if exists as well.
      operationId: deleteTenant
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "204":
          description: ' Tenant has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: Delete tenant
      tags:
      - tenants
    get:
      description: Get tenant system api.
      operationId: getTenant
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: Get tenant
      tags:
      - tenants
    put:
      description: Update tenant system api.
      operationId: updateTenant
      parameters:
      - default: default
        description: Tenant id
        in: path
        name: tid
        required: true
        type: string
      - in: body
        name: Tenant
        schema:
          $ref: '#/definitions/Tenant'
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
      security:
      - setup: []
      summary: Update tenant
      tags:
      - tenants
produces:
- application/json
schemes:
- https
securityDefinitions:
  admin:
    authorizationUrl: /default/admin/oauth2/authorize
    flow: accessCode
    tokenUrl: /default/admin/oauth2/token
    type: oauth2
  default:
    authorizationUrl: /default/default/oauth2/authorize
    flow: accessCode
    scopes:
      dcr_register: dcr_register
      introspect_openbanking_tokens: introspect_openbanking_tokens
      introspect_tokens: introspect_tokens
      list_clients_with_access: list_clients_with_access
      manage_consents: manage_consents
      revoke_client_access: revoke_client_access
      revoke_tokens: revoke_tokens
      view_consents: view_consents
    tokenUrl: /default/default/oauth2/token
    type: oauth2
  defaultcc:
    authorizationUrl: /default/default/oauth2/authorize
    flow: accessCode
    scopes:
      accounts: accounts
    tokenUrl: /default/default/oauth2/token
    type: oauth2
  developer:
    authorizationUrl: /default/developer/oauth2/authorize
    flow: accessCode
    tokenUrl: /default/developer/oauth2/token
    type: oauth2
  setup:
    authorizationUrl: /system/system/oauth2/authorize
    flow: accessCode
    tokenUrl: /system/system/oauth2/token
    type: oauth2
  system:
    authorizationUrl: /default/system/oauth2/authorize
    flow: accessCode
    scopes:
      introspect_tokens: introspect_tokens
      manage_configuration: manage_configuration
      manage_consents: manage_consents
      manage_logins: manage_logins
      manage_openbanking_consents: manage_openbanking_consents
      manage_scope_grants: manage_scope_grants
      push_gateway_requests: push_gateway_requests
      read_gateway_configuration: read_gateway_configuration
      view_clients: view_clients
      view_consents: view_consents
      write_gateway_configuration: write_gateway_configuration
    tokenUrl: /default/system/oauth2/token
    type: oauth2
swagger: "2.0"
